{"version":3,"sources":["redux/actionConstants.js","redux/actions/serviceActions.js","redux/sagas/serviceSagas.js","redux/actions/authActions.js","redux/sagas/authSagas.js","redux/actions/categoryActions.js","redux/sagas/categorySagas.js","redux/actions/insuranceActions.js","redux/sagas/insuranceSagas.js","redux/sagas/rootSaga.js","redux/reducers/initialState.js","redux/reducers/serviceReducer.js","redux/reducers/authReducers.js","redux/reducers/categoryReducer.js","redux/reducers/insuranceReducer.js","redux/reducers/rootReducer.js","login.jsx","CardTemplate.jsx","listService.jsx","home.jsx","newService.jsx","editService.jsx","category.jsx","subcategory.jsx","insurance.jsx","index.jsx","App.js","serviceWorker.js","index.js"],"names":["CREATE_PRIMARY_CATEGORY_REQUEST","CREATE_PRIMARY_CATEGORY_SUCCESS","CREATE_PRIMARY_CATEGORY_FAILURE","GET_PRIMARY_CATEGORY_REQUEST","GET_PRIMARY_CATEGORY_SUCCESS","GET_PRIMARY_CATEGORY_FAILURE","UPDATE_PRIMARY_CATEGORY_REQUEST","UPDATE_PRIMARY_CATEGORY_SUCCESS","UPDATE_PRIMARY_CATEGORY_FAILURE","DELETE_PRIMARY_CATEGORY_REQUEST","DELETE_PRIMARY_CATEGORY_SUCCESS","DELETE_PRIMARY_CATEGORY_FAILURE","CREATE_SUBCATEGORY_REQUEST","CREATE_SUBCATEGORY_SUCCESS","CREATE_SUBCATEGORY_FAILURE","GET_SUBCATEGORY_REQUEST","GET_SUBCATEGORY_SUCCESS","GET_SUBCATEGORY_FAILURE","UPDATE_SUBCATEGORY_REQUEST","UPDATE_SUBCATEGORY_SUCCESS","UPDATE_SUBCATEGORY_FAILURE","DELETE_SUBCATEGORY_REQUEST","DELETE_SUBCATEGORY_SUCCESS","DELETE_SUBCATEGORY_FAILURE","CREATE_INSURANCE_REQUEST","CREATE_INSURANCE_SUCCESS","CREATE_INSURANCE_FAILURE","GET_INSURANCE_REQUEST","GET_INSURANCE_SUCCESS","GET_INSURANCE_FAILURE","UPDATE_INSURANCE_REQUEST","UPDATE_INSURANCE_SUCCESS","UPDATE_INSURANCE_FAILURE","DELETE_INSURANCE_REQUEST","DELETE_INSURANCE_SUCCESS","DELETE_INSURANCE_FAILURE","CREATE_SERVICE_REQUEST","CREATE_SERVICE_SUCCESS","CREATE_SERVICE_FAILURE","GET_SERVICE_REQUEST","GET_SERVICE_SUCCESS","GET_SERVICE_FAILURE","EDIT_SERVICE_REQUEST","EDIT_SERVICE_SUCCESS","EDIT_SERVICE_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","serviceActions","createServiceRequest","payload","type","actionConstants","createServiceSuccess","createServiceFailure","getServiceRequest","getServiceSuccess","getServiceFailure","editServiceRequest","editServiceSuccess","editServiceFailure","watchCreateService","workerCreateService","watchGetService","workerGetService","watchEditService","workerEditService","base_url","process","getCookie","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","takeLatest","params","call","createService","response","status","put","message","window","location","href","a","fetch","credentials","method","body","JSON","stringify","headers","resp","json","respBody","getService","editService","console","log","serviceId","authActions","signInRequest","signInSuccess","signInFailure","error","signOutRequest","signOutSuccess","signOutFailure","watchSignIn","workerSignIn","watchSignOut","workerSignOut","signIn","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","token","signOut","categoryActions","createPrimaryCategoryRequest","createPrimaryCategorySuccess","createPrimaryCategoryFailure","getPrimaryCategoryRequest","getPrimaryCategorySuccess","getPrimaryCategoryFailure","updatePrimaryCategoryRequest","updatePrimaryCategorySuccess","updatePrimaryCategoryFailure","deletePrimaryCategoryRequest","deletePrimaryCategorySuccess","deletePrimaryCategoryFailure","createSubcategoryRequest","createSubcategorySuccess","createSubcategoryFailure","getSubcategoryRequest","getSubcategorySuccess","getSubcategoryFailure","updateSubcategoryRequest","updateSubcategorySuccess","updateSubcategoryFailure","deleteSubcategoryRequest","deleteSubcategorySuccess","deleteSubcategoryFailure","watchCreatePrimaryCategory","workerCreatePrimaryCategory","watchGetPrimaryCategory","workerGetPrimaryCategory","watchUpdatePrimaryCategory","workerUpdatePrimaryCategory","watchDeletePrimaryCategory","workerDeletePrimaryCategory","watchCreateSubcategory","workerCreateSubcategory","watchGetSubcategory","workerGetSubcategory","watchUpdateSubcategory","workerUpdateSubcategory","watchDeleteSubcategory","workerDeleteSubcategory","createPrimaryCategory","getPrimaryCategory","updatePrimaryCategory","cat_id","deletePrimaryCategory","createSubcategory","getSubcategory","updateSubcategory","subcat_id","deleteSubcategory","insuranceActions","createInsuranceRequest","createInsuranceSuccess","createInsuranceFailure","getInsuranceRequest","getInsuranceSuccess","getInsuranceFailure","updateInsuranceRequest","updateInsuranceSuccess","updateInsuranceFailure","deleteInsuranceRequest","deleteInsuranceSuccess","deleteInsuranceFailure","watchCreateInsurance","workerCreateInsurance","watchGetInsurance","workerGetInsurance","watchUpdateInsurance","workerUpdateInsurance","watchDeleteInsurance","workerDeleteInsurance","createInsurance","getInsurance","updateInsurance","deleteInsurance","rootSaga","all","serviceInitialState","primary_category","subcategory","insurance","service","listing","newEdit","authInitialState","loggedin","authMessage","authError","loggedInUser","loadingSignIn","loadingSignUp","loadingSignOut","categoryInitialState","insuranceInitialState","test","state","action","auth","category","concat","newPrimaryCategory","index","findIndex","filter","item","newSubcategory","newInsurance","insur_id","history","combineReducers","router","connectRouter","serviceReducer","categoryReducer","insuranceReducer","LogInClass","props","handleSubmit","e","preventDefault","form","validateFields","err","values","dispatch","email","password","prevProps","this","alert","getFieldDecorator","onSubmit","className","Item","rules","required","prefix","style","color","placeholder","htmlType","loading","React","Component","LogInForm","Form","create","LogIn","withRouter","connect","Panel","Collapse","CardTemplateComponent","insuranceName","find","primaryCategory","primary_cat_id","subCategory","sub_cat_id","bordered","header","border","to","service_id","moment","last_verified","format","cat_name","subcat_name","insur_name","languages_spoken","adress","lat","lon","transit","website","phone_num","emergency_num","drop_in","services","services_fr","notes","notes_fr","verified_by","hours","NewCardTemplateComponent","Search","Input","ListServiceClass","onChange","event","setState","target","map","lowerCaseFilter","toLowerCase","key","ListService","HomeClass","Home","Option","Select","TextArea","InputGroup","Group","NewServiceClass","handleClose","removedTag","newTags","tags","tag","showInput","inputVisible","input","focus","handleInputChange","inputValue","handleInputConfirm","saveInputRefLang","inputlang","saveInputRefServices","inputservices","saveInputRefServicesFr","inputservicesFr","getHours","hours_sun","hours_mon","hours_tue","hours_wed","hours_thu","hours_fri","hours_sat","lang","join","servicesFr","detail","time","parsed","start","isNaN","end","last","parseTime","label","cat","insur","closable","onClose","ref","size","width","onBlur","onPressEnter","onClick","background","borderStyle","rows","compact","ServiceForm","NewService","EditServiceClass","Array","isArray","match","push","currentService","languages","Service","Services_fr","prevState","initialValue","address","back","EditServiceForm","EditService","EditableContext","createContext","EditableFormRow","Provider","EditableCell","editing","toggleEdit","save","record","handleSave","currentTarget","id","renderCell","children","dataIndex","title","margin","node","paddingRight","editable","restProps","Consumer","EditableTable","handleDelete","dataSource","handleAdd","count","newData","adding","row","splice","columns","render","text","onConfirm","components","cell","col","onCell","marginBottom","rowClassName","pagination","TableComponent","Category","changePrimaryCategory","pc_id","defaultValue","pc","Insurance","Header","Layout","Content","Sider","createBrowserHistory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","subscribe","getState","IndexClass","backHome","display","float","marginRight","minHeight","align","fontSize","showButton","exact","path","component","Login","Subcategory","Index","App","locale","en_US","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3233ac76.chunk.js","sourcesContent":["export default {\n    CREATE_PRIMARY_CATEGORY_REQUEST: \"CREATE_PRIMARY_CATEGORY_REQUEST\",\n    CREATE_PRIMARY_CATEGORY_SUCCESS: \"CREATE_PRIMARY_CATEGORY_SUCCESS\",\n    CREATE_PRIMARY_CATEGORY_FAILURE: \"CREATE_PRIMARY_CATEGORY_FAILURE\",\n    \n    GET_PRIMARY_CATEGORY_REQUEST: \"GET_PRIMARY_CATEGORY_REQUEST\",\n    GET_PRIMARY_CATEGORY_SUCCESS: \"GET_PRIMARY_CATEGORY_SUCCESS\",\n    GET_PRIMARY_CATEGORY_FAILURE: \"GET_PRIMARY_CATEGORY_FAILURE\",\n\n    UPDATE_PRIMARY_CATEGORY_REQUEST: \"UPDATE_PRIMARY_CATEGORY_REQUEST\",\n    UPDATE_PRIMARY_CATEGORY_SUCCESS: \"UPDATE_PRIMARY_CATEGORY_SUCCESS\",\n    UPDATE_PRIMARY_CATEGORY_FAILURE: \"UPDATE_PRIMARY_CATEGORY_FAILURE\",\n\n    DELETE_PRIMARY_CATEGORY_REQUEST: \"DELETE_PRIMARY_CATEGORY_REQUEST\",\n    DELETE_PRIMARY_CATEGORY_SUCCESS: \"DELETE_PRIMARY_CATEGORY_SUCCESS\",\n    DELETE_PRIMARY_CATEGORY_FAILURE: \"DELETE_PRIMARY_CATEGORY_FAILURE\",\n\n    CREATE_SUBCATEGORY_REQUEST: \"CREATE_SUBCATEGORY_REQUEST\",\n    CREATE_SUBCATEGORY_SUCCESS: \"CREATE_SUBCATEGORY_SUCCESS\",\n    CREATE_SUBCATEGORY_FAILURE: \"CREATE_SUBCATEGORY_FAILURE\",\n\n    GET_SUBCATEGORY_REQUEST: \"GET_SUBCATEGORY_REQUEST\",\n    GET_SUBCATEGORY_SUCCESS: \"GET_SUBCATEGORY_SUCCESS\",\n    GET_SUBCATEGORY_FAILURE: \"GET_SUBCATEGORY_FAILURE\",\n\n    UPDATE_SUBCATEGORY_REQUEST: \"UPDATE_SUBCATEGORY_REQUEST\",\n    UPDATE_SUBCATEGORY_SUCCESS: \"UPDATE_SUBCATEGORY_SUCCESS\",\n    UPDATE_SUBCATEGORY_FAILURE: \"UPDATE_SUBCATEGORY_FAILURE\",\n\n    DELETE_SUBCATEGORY_REQUEST: \"DELETE_SUBCATEGORY_REQUEST\",\n    DELETE_SUBCATEGORY_SUCCESS: \"DELETE_SUBCATEGORY_SUCCESS\",\n    DELETE_SUBCATEGORY_FAILURE: \"DELETE_SUBCATEGORY_FAILURE\",\n\n    CREATE_INSURANCE_REQUEST: \"CREATE_INSURANCE_REQUEST\",\n    CREATE_INSURANCE_SUCCESS: \"CREATE_INSURANCE_SUCCESS\",\n    CREATE_INSURANCE_FAILURE: \"CREATE_INSURANCE_FAILURE\",\n\n    GET_INSURANCE_REQUEST: \"GET_INSURANCE_REQUEST\",\n    GET_INSURANCE_SUCCESS: \"GET_INSURANCE_SUCCESS\",\n    GET_INSURANCE_FAILURE: \"GET_INSURANCE_FAILURE\",\n\n    UPDATE_INSURANCE_REQUEST: \"UPDATE_INSURANCE_REQUEST\",\n    UPDATE_INSURANCE_SUCCESS: \"UPDATE_INSURANCE_SUCCESS\",\n    UPDATE_INSURANCE_FAILURE: \"UPDATE_INSURANCE_FAILURE\",\n\n    DELETE_INSURANCE_REQUEST: \"DELETE_INSURANCE_REQUEST\",\n    DELETE_INSURANCE_SUCCESS: \"DELETE_INSURANCE_SUCCESS\",\n    DELETE_INSURANCE_FAILURE: \"DELETE_INSURANCE_FAILURE\",\n\n    CREATE_SERVICE_REQUEST: \"CREATE_SERVICE_REQUEST\",\n    CREATE_SERVICE_SUCCESS: \"CREATE_SERVICE_SUCCESS\",\n    CREATE_SERVICE_FAILURE: \"CREATE_SERVICE_FAILURE\",\n\n    GET_SERVICE_REQUEST: \"GET_SERVICE_REQUEST\",\n    GET_SERVICE_SUCCESS: \"GET_SERVICE_SUCCESS\",\n    GET_SERVICE_FAILURE: \"GET_SERVICE_FAILURE\",\n\n    EDIT_SERVICE_REQUEST: \"EDIT_SERVICE_REQUEST\",\n    EDIT_SERVICE_SUCCESS: \"EDIT_SERVICE_SUCCESS\",\n    EDIT_SERVICE_FAILURE: \"EDIT_SERVICE_FAILURE\", \n    \n    // Auth\n    SIGN_IN_REQUEST: 'SIGN_IN_REQUEST',\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n    SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n\n    SIGN_OUT_REQUEST: 'SIGN_OUT_REQUEST',\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n    SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n\n}","import actionConstants from \"../actionConstants\";\n\nexport const serviceActions = {\n    createServiceRequest, createServiceSuccess, createServiceFailure,\n    getServiceRequest, getServiceSuccess, getServiceFailure,\n    editServiceRequest, editServiceSuccess, editServiceFailure\n};\n\n// Create service\nfunction createServiceRequest(payload) {\n    return {\n        type: actionConstants.CREATE_SERVICE_REQUEST,\n        payload\n    }\n}\n\nfunction createServiceSuccess(payload) {\n    return {\n        type: actionConstants.CREATE_SERVICE_SUCCESS,\n        payload\n    }\n}\n\nfunction createServiceFailure(payload) {\n    return {\n        type: actionConstants.CREATE_SERVICE_FAILURE,\n        payload\n    }\n}\n\n// Get service\nfunction getServiceRequest(payload) {\n    return {\n        type: actionConstants.GET_SERVICE_REQUEST,\n        payload\n    }\n}\n\nfunction getServiceSuccess(payload) {\n    return {\n        type: actionConstants.GET_SERVICE_SUCCESS,\n        payload\n    }\n}\n\nfunction getServiceFailure(payload) {\n    return {\n        type: actionConstants.GET_SERVICE_FAILURE,\n        payload\n    }\n}\n\n//Edit service\nfunction editServiceRequest(payload) {\n    return {\n        type: actionConstants.EDIT_SERVICE_REQUEST,\n        payload\n    }\n}\n\nfunction editServiceSuccess(payload) {\n    return {\n        type: actionConstants.EDIT_SERVICE_SUCCESS,\n        payload\n    }\n}\n\nfunction editServiceFailure(payload) {\n    return {\n        type: actionConstants.EDIT_SERVICE_FAILURE,\n        payload\n    }\n}","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport actionConstants from \"../actionConstants\";\nimport { serviceActions } from \"../actions/serviceActions\";\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n            var nameEQ = \"token\" + \"=\";\n            var ca = document.cookie.split(';');\n            for(var i=0;i < ca.length;i++) {\n                var c = ca[i];\n                while (c.charAt(0)==' ') c = c.substring(1,c.length);\n                if (c.indexOf(nameEQ) == 0){\n                    return c.substring(nameEQ.length,c.length);\n                } \n            }\n            return null;\n}\n\n// Get primary cat\nexport function* watchGetPrimaryCategory() {\n    yield takeLatest(actionConstants.GET_PRIMARY_CATEGORY_REQUEST, workerGetPrimaryCategory);\n}\nfunction* workerGetPrimaryCategory(params) {\n    try {\n        const response = yield call(getPrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.getPrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(serviceActions.getPrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.getPrimaryCategoryFailure(err));\n    }\n}\nasync function getPrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get subcat\nexport function* watchGetSubcategory() {\n    yield takeLatest(actionConstants.GET_SUBCATEGORY_REQUEST, workerGetSubcategory);\n}\nfunction* workerGetSubcategory(params) {\n    try {\n        const response = yield call(getSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.getSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(serviceActions.getSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.getSubcategoryFailure(err));\n    }\n}\nasync function getSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get insurance\nexport function* watchGetInsurance() {\n    yield takeLatest(actionConstants.GET_INSURANCE_REQUEST, workerGetInsurance);\n}\nfunction* workerGetInsurance(params) {\n    try {\n        const response = yield call(getInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.getInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(serviceActions.getInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.getInsuranceFailure(err));\n    }\n}\nasync function getInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Create service\nexport function* watchCreateService() {\n    yield takeLatest(actionConstants.CREATE_SERVICE_REQUEST, workerCreateService);\n}\nfunction* workerCreateService(params) {\n    try {\n        const response = yield call(createService, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.createServiceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(serviceActions.createServiceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.createServiceFailure(err));\n    }\n}\nasync function createService(payload) {\n    try {\n        let resp = await fetch(`${base_url}/service`, {\n            credentials: \"same-origin\",\n            method: \"post\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get service\nexport function* watchGetService() {\n    yield takeLatest(actionConstants.GET_SERVICE_REQUEST, workerGetService);\n}\nfunction* workerGetService(params) {\n    try {\n        const response = yield call(getService, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.getServiceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(serviceActions.getServiceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.getServiceFailure(err));\n    }\n}\nasync function getService(payload) {\n    try {\n        let resp = await fetch(`${base_url}/services`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Edit service\nexport function* watchEditService() {\n    yield takeLatest(actionConstants.EDIT_SERVICE_REQUEST, workerEditService);\n}\nfunction* workerEditService(params) {\n    try {\n        const response = yield call(editService, params.payload);\n        if (response.status === 200) {\n            console.log(params.payload)\n            yield put(serviceActions.editServiceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            console.log(\"error\", params.payload)\n            yield put(serviceActions.editServiceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.editServiceFailure(err));\n    }\n}\nasync function editService(payload) {\n    try {\n        let resp = await fetch(`${base_url}/service/${payload.serviceId}`, {\n            credentials: \"same-origin\",\n            method: \"put\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}","import actionConstants from \"../actionConstants\";\nexport const authActions = {\n    signInRequest, signInSuccess, signInFailure,\n    signOutRequest, signOutSuccess, signOutFailure,\n};\n\n\n//Sign in\nfunction signInRequest(payload) {\n    return { \n        type: actionConstants.SIGN_IN_REQUEST, \n        payload\n    } \n}\nfunction signInSuccess(payload) {\n    return { \n        type: actionConstants.SIGN_IN_SUCCESS, \n        payload\n    } \n}\nfunction signInFailure(error) {\n    return { \n        type: actionConstants.SIGN_IN_FAILURE, \n        error\n    } \n}\n    \n//Sign out\nfunction signOutRequest() {\n    return {\n        type: actionConstants.SIGN_OUT_REQUEST\n    }\n}\nfunction signOutSuccess() {\n    return { \n        type: actionConstants.SIGN_OUT_SUCCESS\n    } \n}\nfunction signOutFailure(error) {\n    return { \n        type: actionConstants.SIGN_OUT_FAILURE,\n        error\n    } \n}\n\n","import 'whatwg-fetch';\nimport { takeLatest, call, put } from \"redux-saga/effects\";\nimport  actionConstants from '../actionConstants';\nimport { authActions } from '../actions/authActions';\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n    var nameEQ = \"token\" + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0){\n            return c.substring(nameEQ.length,c.length);\n        } \n    }\n    return null;\n}\n\n// Sign in\nexport function* watchSignIn() {\n    yield takeLatest(actionConstants.SIGN_IN_REQUEST, workerSignIn);\n}\n\n// Make signIn API request and check if email/password are correct\nasync function signIn(payload) {\n     \n    try {\n        let resp = await fetch(`${base_url}/signin`, {\n            credentials: \"same-origin\",\n            method: 'post',\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n            }\n        })\n        let status = resp.status;\n        let respBody = await resp.json();\n        return {message: respBody, status: status};\n    }\n    catch (err) {\n        return err;\n    }\n    \n  \n}\n\nfunction setCookie(name,value,days) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=http://localhost:8081/\";\n}\n\n// Make the api call when watcher saga sees the action\nfunction* workerSignIn(params) {\n    try {\n\n        const response = yield call(signIn, params.payload);\n\n        // dispatch a success action to the store \n        if (response.status == 200) {\n            setCookie('token', response.message.token, 60); \n            yield put(authActions.signInSuccess(response.message));\n        }\n        else {\n            yield put(authActions.signInFailure(response.message));\n        }\n    } \n    catch (error) {\n        // dispatch a failure action to the store with the error\n        yield put(authActions.signInFailure(error));\n    }\n}\n\n// Sign out\nexport function* watchSignOut() {\n    yield takeLatest(actionConstants.SIGN_OUT_REQUEST, workerSignOut);\n}\n\nasync function signOut() {\n    try {\n        let resp = await fetch(`${base_url}/logout`, {\n            credentials: \"same-origin\",\n            method: 'get',  \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        if (resp.status == 200) {\n            window.location.href = '/';\n            document.cookie =  `token=; expires=${new Date()}; path=/;`;\n        }\n        return resp;\n    }\n    catch (err) {\n        return err;\n    }\n}\n\n// Make the api call when watcher saga sees the action\nfunction* workerSignOut() {\n    const response = yield call(signOut);\n    \n    try {\n        if (response.status == 200) {\n            yield put(authActions.signOutSuccess());\n        } else {\n            yield put(authActions.signOutFailure(response.message.error));\n        }\n    } \n    catch (error) {\n        yield put(authActions.signOutFailure(error));\n    }\n}\n\n","import actionConstants from \"../actionConstants\";\n\nexport const categoryActions = {\n    createPrimaryCategoryRequest, createPrimaryCategorySuccess, createPrimaryCategoryFailure,\n    getPrimaryCategoryRequest, getPrimaryCategorySuccess, getPrimaryCategoryFailure,\n    updatePrimaryCategoryRequest, updatePrimaryCategorySuccess, updatePrimaryCategoryFailure,\n    deletePrimaryCategoryRequest, deletePrimaryCategorySuccess, deletePrimaryCategoryFailure,\n\n    createSubcategoryRequest, createSubcategorySuccess, createSubcategoryFailure,\n    getSubcategoryRequest, getSubcategorySuccess, getSubcategoryFailure,\n    updateSubcategoryRequest, updateSubcategorySuccess, updateSubcategoryFailure,\n    deleteSubcategoryRequest, deleteSubcategorySuccess, deleteSubcategoryFailure,\n};\n\n// Create primary category\nfunction createPrimaryCategoryRequest(payload) {\n    return {\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction createPrimaryCategorySuccess(payload) {\n    return {\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction createPrimaryCategoryFailure(payload) {\n    return {\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Get primary category\nfunction getPrimaryCategoryRequest(payload) {\n    return {\n        type: actionConstants.GET_PRIMARY_CATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction getPrimaryCategorySuccess(payload) {\n    return {\n        type: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction getPrimaryCategoryFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Update primary category\nfunction updatePrimaryCategoryRequest(payload) {\n    return {\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction updatePrimaryCategorySuccess(payload) {\n    return {\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction updatePrimaryCategoryFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Delete primary category\nfunction deletePrimaryCategoryRequest(payload) {\n    return {\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction deletePrimaryCategorySuccess(payload) {\n    return {\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction deletePrimaryCategoryFailure(payload) {\n    return {\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Create subcategory\nfunction createSubcategoryRequest(payload) {\n    return {\n        type: actionConstants.CREATE_SUBCATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction createSubcategorySuccess(payload) {\n    return {\n        type: actionConstants.CREATE_SUBCATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction createSubcategoryFailure(payload) {\n    return {\n        type: actionConstants.CREATE_SUBCATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Get subcategory\nfunction getSubcategoryRequest(payload) {\n    return {\n        type: actionConstants.GET_SUBCATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction getSubcategorySuccess(payload) {\n    return {\n        type: actionConstants.GET_SUBCATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction getSubcategoryFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Update subcategory\nfunction updateSubcategoryRequest(payload) {\n    return {\n        type: actionConstants.UPDATE_SUBCATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction updateSubcategorySuccess(payload) {\n    return {\n        type: actionConstants.UPDATE_SUBCATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction updateSubcategoryFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Delete subcategory\nfunction deleteSubcategoryRequest(payload) {\n    return {\n        type: actionConstants.DELETE_SUBCATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction deleteSubcategorySuccess(payload) {\n    return {\n        type: actionConstants.DELETE_SUBCATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction deleteSubcategoryFailure(payload) {\n    return {\n        type: actionConstants.DELETE_SUBCATEGORY_FAILURE,\n        payload\n    }\n}\n\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport actionConstants from \"../actionConstants\";\nimport { categoryActions } from \"../actions/categoryActions\";\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n    var nameEQ = \"token\" + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0){\n            return c.substring(nameEQ.length,c.length);\n        } \n    }\n    return null;\n}\n\n// Create primary cat\nexport function* watchCreatePrimaryCategory() {\n    yield takeLatest(actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST, workerCreatePrimaryCategory);\n}\nfunction* workerCreatePrimaryCategory(params) {\n    try {\n        const response = yield call(createPrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.createPrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(categoryActions.createPrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.createPrimaryCategoryFailure(err));\n    }\n}\nasync function createPrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category`, {\n            credentials: \"same-origin\",\n            method: \"post\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get primary cat\nexport function* watchGetPrimaryCategory() {\n    yield takeLatest(actionConstants.GET_PRIMARY_CATEGORY_REQUEST, workerGetPrimaryCategory);\n}\nfunction* workerGetPrimaryCategory(params) {\n    try {\n        const response = yield call(getPrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.getPrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(categoryActions.getPrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.getPrimaryCategoryFailure(err));\n    }\n}\nasync function getPrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Update primary cat\nexport function* watchUpdatePrimaryCategory() {\n    yield takeLatest(actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST, workerUpdatePrimaryCategory);\n}\nfunction* workerUpdatePrimaryCategory(params) {\n    try {\n        const response = yield call(updatePrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.updatePrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(categoryActions.updatePrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.updatePrimaryCategoryFailure(err));\n    }\n}\nasync function updatePrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category/${payload.cat_id}`, {\n            credentials: \"same-origin\",\n            method: \"put\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Delete primary cat\nexport function* watchDeletePrimaryCategory() {\n    yield takeLatest(actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST, workerDeletePrimaryCategory);\n}\nfunction* workerDeletePrimaryCategory(params) {\n    try {\n        const response = yield call(deletePrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.deletePrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(categoryActions.deletePrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.deletePrimaryCategoryFailure(err));\n    }\n}\nasync function deletePrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category/${payload}`, {\n            credentials: \"same-origin\",\n            method: \"delete\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Create subcat\nexport function* watchCreateSubcategory() {\n    yield takeLatest(actionConstants.CREATE_SUBCATEGORY_REQUEST, workerCreateSubcategory);\n}\nfunction* workerCreateSubcategory(params) {\n    try {\n        const response = yield call(createSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.createSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(categoryActions.createSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.createSubcategoryFailure(err));\n    }\n}\nasync function createSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory`, {\n            credentials: \"same-origin\",\n            method: \"post\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get subcat\nexport function* watchGetSubcategory() {\n    yield takeLatest(actionConstants.GET_SUBCATEGORY_REQUEST, workerGetSubcategory);\n}\nfunction* workerGetSubcategory(params) {\n    try {\n        const response = yield call(getSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.getSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(categoryActions.getSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.getSubcategoryFailure(err));\n    }\n}\nasync function getSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Update subcat\nexport function* watchUpdateSubcategory() {\n    yield takeLatest(actionConstants.UPDATE_SUBCATEGORY_REQUEST, workerUpdateSubcategory);\n}\nfunction* workerUpdateSubcategory(params) {\n    try {\n        const response = yield call(updateSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.updateSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(categoryActions.updateSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.updateSubcategoryFailure(err));\n    }\n}\nasync function updateSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory/${payload.subcat_id}`, {\n            credentials: \"same-origin\",\n            method: \"put\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Delete subcat\nexport function* watchDeleteSubcategory() {\n    yield takeLatest(actionConstants.DELETE_SUBCATEGORY_REQUEST, workerDeleteSubcategory);\n}\nfunction* workerDeleteSubcategory(params) {\n    try {\n        const response = yield call(deleteSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.deleteSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(categoryActions.deleteSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.deleteSubcategoryFailure(err));\n    }\n}\nasync function deleteSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory/${payload}`, {\n            credentials: \"same-origin\",\n            method: \"delete\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n","import actionConstants from \"../actionConstants\";\n\nexport const insuranceActions = {\n    createInsuranceRequest, createInsuranceSuccess, createInsuranceFailure,\n    getInsuranceRequest, getInsuranceSuccess, getInsuranceFailure,\n    updateInsuranceRequest, updateInsuranceSuccess, updateInsuranceFailure,\n    deleteInsuranceRequest, deleteInsuranceSuccess, deleteInsuranceFailure,\n};\n\n// Create insurance\nfunction createInsuranceRequest(payload) {\n    return {\n        type: actionConstants.CREATE_INSURANCE_REQUEST,\n        payload\n    }\n}\n\nfunction createInsuranceSuccess(payload) {\n    return {\n        type: actionConstants.CREATE_INSURANCE_SUCCESS,\n        payload\n    }\n}\n\nfunction createInsuranceFailure(payload) {\n    return {\n        type: actionConstants.CREATE_INSURANCE_FAILURE,\n        payload\n    }\n}\n\n// Get insurance\nfunction getInsuranceRequest(payload) {\n    return {\n        type: actionConstants.GET_INSURANCE_REQUEST,\n        payload\n    }\n}\n\nfunction getInsuranceSuccess(payload) {\n    return {\n        type: actionConstants.GET_INSURANCE_SUCCESS,\n        payload\n    }\n}\n\nfunction getInsuranceFailure(payload) {\n    return {\n        type: actionConstants.GET_INSURANCE_FAILURE,\n        payload\n    }\n}\n\n// Update insurance\nfunction updateInsuranceRequest(payload) {\n    return {\n        type: actionConstants.UPDATE_INSURANCE_REQUEST,\n        payload\n    }\n}\n\nfunction updateInsuranceSuccess(payload) {\n    return {\n        type: actionConstants.UPDATE_INSURANCE_SUCCESS,\n        payload\n    }\n}\n\nfunction updateInsuranceFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_INSURANCE_FAILURE,\n        payload\n    }\n}\n\n// Delete insurance\nfunction deleteInsuranceRequest(payload) {\n    return {\n        type: actionConstants.DELETE_INSURANCE_REQUEST,\n        payload\n    }\n}\n\nfunction deleteInsuranceSuccess(payload) {\n    return {\n        type: actionConstants.DELETE_INSURANCE_SUCCESS,\n        payload\n    }\n}\n\nfunction deleteInsuranceFailure(payload) {\n    return {\n        type: actionConstants.DELETE_INSURANCE_FAILURE,\n        payload\n    }\n}\n\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport actionConstants from \"../actionConstants\";\nimport { insuranceActions } from \"../actions/insuranceActions\";\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n    var nameEQ = \"token\" + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0){\n            return c.substring(nameEQ.length,c.length);\n        } \n    }\n    return null;\n}\n\n// Create subcat\nexport function* watchCreateInsurance() {\n    yield takeLatest(actionConstants.CREATE_INSURANCE_REQUEST, workerCreateInsurance);\n}\nfunction* workerCreateInsurance(params) {\n    try {\n        const response = yield call(createInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(insuranceActions.createInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(insuranceActions.createInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(insuranceActions.createInsuranceFailure(err));\n    }\n}\nasync function createInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance`, {\n            credentials: \"same-origin\",\n            method: \"post\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get subcat\nexport function* watchGetInsurance() {\n    yield takeLatest(actionConstants.GET_INSURANCE_REQUEST, workerGetInsurance);\n}\nfunction* workerGetInsurance(params) {\n    try {\n        const response = yield call(getInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(insuranceActions.getInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(insuranceActions.getInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(insuranceActions.getInsuranceFailure(err));\n    }\n}\nasync function getInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Update subcat\nexport function* watchUpdateInsurance() {\n    yield takeLatest(actionConstants.UPDATE_INSURANCE_REQUEST, workerUpdateInsurance);\n}\nfunction* workerUpdateInsurance(params) {\n    try {\n        const response = yield call(updateInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(insuranceActions.updateInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(insuranceActions.updateInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(insuranceActions.updateInsuranceFailure(err));\n    }\n}\nasync function updateInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance/${payload.subcat_id}`, {\n            credentials: \"same-origin\",\n            method: \"put\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Delete subcat\nexport function* watchDeleteInsurance() {\n    yield takeLatest(actionConstants.DELETE_INSURANCE_REQUEST, workerDeleteInsurance);\n}\nfunction* workerDeleteInsurance(params) {\n    try {\n        const response = yield call(deleteInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(insuranceActions.deleteInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=\"/\"\n        }\n        else {\n            yield put(insuranceActions.deleteInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(insuranceActions.deleteInsuranceFailure(err));\n    }\n}\nasync function deleteInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance/${payload}`, {\n            credentials: \"same-origin\",\n            method: \"delete\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}","import { all } from \"redux-saga/effects\";\nimport { watchCreateService, watchGetService, watchEditService } from \"../sagas/serviceSagas\";\nimport { watchSignIn, watchGetAuth, watchSignOut } from \"./authSagas\"\nimport { watchCreatePrimaryCategory, watchGetPrimaryCategory, watchUpdatePrimaryCategory, watchDeletePrimaryCategory, watchCreateSubcategory, watchGetSubcategory, watchUpdateSubcategory, watchDeleteSubcategory } from './categorySagas';\nimport { watchCreateInsurance, watchGetInsurance, watchUpdateInsurance, watchDeleteInsurance } from \"./insuranceSagas\";\n\nexport default function* rootSaga() {\n    yield all([\n        watchCreateService(),\n        watchGetService(),\n        watchEditService(),\n        watchSignIn(),\n        watchSignOut(),\n\n        watchCreatePrimaryCategory(),\n        watchGetPrimaryCategory(),\n        watchUpdatePrimaryCategory(), \n        watchDeletePrimaryCategory(), \n        watchCreateSubcategory(), \n        watchGetSubcategory(), \n        watchUpdateSubcategory(),\n        watchDeleteSubcategory(),\n\n        watchCreateInsurance(),\n        watchGetInsurance(),\n        watchUpdateInsurance(),\n        watchDeleteInsurance()\n    ]);\n}","export const serviceInitialState = {\n    status: \"\",\n    error: \"\",\n    primary_category: [],\n    subcategory: [],\n    insurance: [],\n    service: {},\n    listing: {},\n    newEdit: []\n}\n\nexport const authInitialState = {\n    loggedin: false,\n    authMessage: '',\n    authError: '',\n    loggedInUser: {},\n    loadingSignIn: false,\n    loadingSignUp: false,\n    loadingSignOut: false,\n};\n\nexport const categoryInitialState = {\n    status: \"\",\n    error: \"\",\n    primary_category: [],\n    subcategory: []\n}\n\nexport const insuranceInitialState = {\n    status: \"\",\n    error: \"\",\n    insurance: []\n}","import { serviceInitialState } from \"./initialState\";\nimport actionConstants from \"../actionConstants\";\n\nexport default function test(state=serviceInitialState, action) {\n    switch (action.type) {\n        // get primary category\n        case actionConstants.GET_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.GET_PRIMARY_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: action.payload\n            }\n        case actionConstants.GET_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // get subcategory\n        case actionConstants.GET_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.GET_SUBCATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_SUCCESS,\n                subcategory: action.payload\n            }\n        case actionConstants.GET_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // get insurance\n        case actionConstants.GET_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_REQUEST\n            }\n        case actionConstants.GET_INSURANCE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_SUCCESS,\n                insurance: action.payload\n            }\n        case actionConstants.GET_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_FAILURE,\n                error: action.payload\n            }\n\n        // create service\n        case actionConstants.CREATE_SERVICE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SERVICE_REQUEST\n            }\n        case actionConstants.CREATE_SERVICE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SERVICE_SUCCESS,\n                service: action.payload\n            }\n        case actionConstants.CREATE_SERVICE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SERVICE_FAILURE,\n                error: action.payload\n            }\n        \n        // get service\n        case actionConstants.GET_SERVICE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_SERVICE_REQUEST\n            }\n        case actionConstants.GET_SERVICE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_SERVICE_SUCCESS,\n                listing: action.payload\n            }\n        case actionConstants.GET_SERVICE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_SERVICE_FAILURE,\n                error: action.payload\n            }\n        \n        // edit service\n        case actionConstants.EDIT_SERVICE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.EDIT_SERVICE_REQUEST\n            }\n        case actionConstants.EDIT_SERVICE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.EDIT_SERVICE_SUCCESS,\n                newEdit: action.payload\n            }\n        case actionConstants.EDIT_SERVICE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.EDIT_SERVICE_FAILURE,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","import  actionConstants  from '../actionConstants';\nimport { authInitialState } from './initialState';\n\nexport default function auth(state = authInitialState, action) {\n  switch (action.type) {\n    //Sign out\n    case actionConstants.SIGN_OUT_REQUEST:\n      return {\n        ...state,\n        loadingSignOut: true,\n        authMessage: actionConstants.SIGN_OUT_REQUEST\n      };\n    case actionConstants.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        authMessage: actionConstants.SIGN_OUT_SUCCESS\n      };\n    case actionConstants.SIGN_OUT_FAILURE:\n      return {\n        ...state,\n        loadingSignOut: false,\n        authMessage: action.error\n      };\n    \n    //Sign in\n    case actionConstants.SIGN_IN_REQUEST:\n      return {\n          ...state,\n          loadingSignIn: true,\n          authMessage: actionConstants.SIGN_IN_REQUEST\n      }\n    case actionConstants.SIGN_IN_SUCCESS:\n      return {\n          ...state,\n          loggedin: true,\n          authMessage: actionConstants.SIGN_IN_SUCCESS,\n          loadingSignIn: false,\n          loggedInUser: action.payload,\n      }\n    case actionConstants.SIGN_IN_FAILURE:\n      return {\n          ...state,\n          authError: action.error,\n          authMessage: actionConstants.SIGN_IN_FAILURE,\n          loadingSignIn: false\n      }\n    default:\n      return state;\n  }\n}\n","import { categoryInitialState } from \"./initialState\";\nimport actionConstants from \"../actionConstants\";\n\nexport default function category(state=categoryInitialState, action) {\n    switch (action.type) {\n        // create primary category\n        case actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: state.primary_category.concat(action.payload)\n            }\n        case actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // get primary category\n        case actionConstants.GET_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.GET_PRIMARY_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: action.payload\n            }\n        case actionConstants.GET_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // update primary category\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS:\n            var newPrimaryCategory = state.primary_category;\n            var index = newPrimaryCategory.findIndex(c => { return c.cat_id === action.payload.cat_id});\n            newPrimaryCategory[index] = action.payload;\n            return {\n                ...state,\n                status: actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: newPrimaryCategory\n            }\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // delete primary category\n        case actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS:\n            newPrimaryCategory = state.primary_category.filter(item => item.cat_id !== action.payload.cat_id)\n            return {\n                ...state,\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: newPrimaryCategory\n            }\n        case actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // create subcategory\n        case actionConstants.CREATE_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.CREATE_SUBCATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SUBCATEGORY_SUCCESS,\n                subcategory: state.subcategory.concat(action.payload)\n            }\n        case actionConstants.CREATE_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // get subcategory\n        case actionConstants.GET_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.GET_SUBCATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_SUCCESS,\n                subcategory: action.payload\n            }\n        case actionConstants.GET_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // update subcategory\n        case actionConstants.UPDATE_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.UPDATE_SUBCATEGORY_SUCCESS:\n            var newSubcategory = state.subcategory;\n            var index = newSubcategory.findIndex(c => { return c.subcat_id === action.payload.subcat_id});\n            newSubcategory[index] = action.payload;\n            return {\n                ...state,\n                status: actionConstants.UPDATE_SUBCATEGORY_SUCCESS,\n                subcategory: newSubcategory\n            }\n        case actionConstants.UPDATE_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // delete primary category\n        case actionConstants.DELETE_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.DELETE_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.DELETE_SUBCATEGORY_SUCCESS:\n            newSubcategory = state.subcategory.filter(item => item.subcat_id !== action.payload.subcat_id)\n            return {\n                ...state,\n                status: actionConstants.DELETE_SUBCATEGORY_SUCCESS,\n                subcategory: newSubcategory\n            }\n        case actionConstants.DELETE_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.DELETE_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        \n        default:\n            return state;\n    }\n}","import { insuranceInitialState } from \"./initialState\";\nimport actionConstants from \"../actionConstants\";\n\nexport default function test(state=insuranceInitialState, action) {\n    switch (action.type) {\n       // create primary category\n       case actionConstants.CREATE_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_INSURANCE_REQUEST\n            }\n        case actionConstants.CREATE_INSURANCE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.CREATE_INSURANCE_SUCCESS,\n                insurance: state.insurance.concat(action.payload)\n            }\n        case actionConstants.CREATE_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.CREATE_INSURANCE_FAILURE,\n                error: action.payload\n            }\n\n\n        // get insurance\n        case actionConstants.GET_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_REQUEST\n            }\n        case actionConstants.GET_INSURANCE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_SUCCESS,\n                insurance: action.payload\n            }\n        case actionConstants.GET_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_FAILURE,\n                error: action.payload\n            }\n\n        // update primary category\n        case actionConstants.UPDATE_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_INSURANCE_REQUEST\n            }\n        case actionConstants.UPDATE_INSURANCE_SUCCESS:\n            var newInsurance = state.insurance;\n            var index = newInsurance.findIndex(c => { return c.insur_id === action.payload.insur_id});\n            newInsurance[index] = action.payload;\n            return {\n                ...state,\n                status: actionConstants.UPDATE_INSURANCE_SUCCESS,\n                insurance: newInsurance\n            }\n        case actionConstants.UPDATE_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.UPDATE_INSURANCE_FAILURE,\n                error: action.payload\n            }\n\n        // delete primary category\n        case actionConstants.DELETE_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.DELETE_INSURANCE_REQUEST\n            }\n        case actionConstants.DELETE_INSURANCE_SUCCESS:\n            newInsurance = state.insurance.filter(item => item.insur_id !== action.payload.insur_id)\n            return {\n                ...state,\n                status: actionConstants.DELETE_INSURANCE_SUCCESS,\n                insurance: newInsurance\n            }\n        case actionConstants.DELETE_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.DELETE_INSURANCE_FAILURE,\n                error: action.payload\n            }\n       \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\n\nimport serviceReducer from \"./serviceReducer\";\nimport auth from \"./authReducers\"\nimport categoryReducer from \"./categoryReducer\";\nimport insuranceReducer from \"./insuranceReducer\";\n\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    serviceReducer,\n    auth,\n    categoryReducer,\n    insuranceReducer\n})","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authActions } from './redux/actions/authActions';\nimport { withRouter } from 'react-router';\nimport actionConstants from './redux/actionConstants';\n\n\n//Style\nimport './login.css'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\nclass LogInClass extends React.Component{\n    constructor(props) {\n        super(props);\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            const { dispatch } = this.props;\n            const payload = {\n              email: values.email, \n              password: values.password\n            }\n            dispatch(authActions.signInRequest(payload));\n          }\n        });\n      } \n    \n    componentDidUpdate(prevProps) {\n        if (this.props.loggedin != prevProps.loggedin && this.props.loggedin == true) {\n            window.location.href = '/home';\n        }\n        if (this.props.authMessage !== prevProps.authMessage && this.props.authMessage === actionConstants.SIGN_IN_FAILURE) {\n            alert(this.props.authError);\n        }\n    }\n    \n    render(){\n        const { getFieldDecorator } = this.props.form;\n     \n        return (\n\n        <div> \n            \n            <Form onSubmit={this.handleSubmit} className=\"login-form\" >\n                <h1>Admin Login</h1>\n\n                <Form.Item>\n                    {getFieldDecorator('email', {\n                        rules: [{ required: true, message: 'Please input your email!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Email\"\n                        />,\n                    )}\n                </Form.Item>    \n\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        />,\n                    )}\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={this.props.loadingSignIn}>\n                        Log in\n                    </Button>\n                </Form.Item>\n\n            </Form> \n        \n        </div>\n        )\n\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    const { authMessage, loadingSignIn, loggedin, authError } = state.auth;\n    return {\n       loadingSignIn, loggedin, authMessage, authError\n    };\n}\n\n\nconst LogInForm = Form.create()(LogInClass);\nconst LogIn = withRouter(connect(mapStateToProps)(LogInForm));\n\nexport default LogIn;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\n\n//Global\nimport moment from 'moment';\n//style\nimport \"./CardTemplate.css\"\nimport { Row, Collapse, Card, Button } from 'antd';\nconst { Panel } = Collapse;\nclass CardTemplateComponent extends React.Component {\n    constructor(props){\n      super(props)\n    }\n\n    componentDidMount() {\n       \n    }\n    \n    render() {\n        const { listing, primary_category, subcategory, insurance } = this.props;\n        \n        let insuranceName =  insurance.find(\n            i => i.insur_id === listing.insur_id\n        );\n        let primaryCategory = primary_category.find(\n            i => i.cat_id === listing.primary_cat_id\n        );\n        let subCategory = subcategory.find(\n            i => i.subcat_id === listing.sub_cat_id\n        );\n        return (\n            <Row>\n                <Card>\n                    <Collapse\n                        bordered={false}\n                    >\n                        <Panel header={listing.name} style={{border:0}}>\n                            <Row>\n                                <Link to={`/editService/${listing.service_id}`}>\n                                    <Button>\n                                        Modify Service\n                                    </Button>\n                                </Link>\n                            </Row>\n                            <Row className=\"last_modified\">\n                                Last Modified Date: {moment(listing.last_verified, \"YYYY-MM-DDTHH:mm:ss.sssZ\").format('LLLL')}\n                            </Row>\n                            <table>\n                                <tbody>\n                                    <tr className=\"light-row\">\n                                        <td>Service ID:</td>\n                                        <td>{listing.service_id}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Service Name:</td>\n                                        <td>{listing.name}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Primary Category:</td>\n                                        <td>{primaryCategory ? primaryCategory.cat_name : \"\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Subcategory:</td>\n                                        <td>{subCategory ? subCategory.subcat_name : \"\"}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Insurance:</td>\n                                        <td>{insuranceName ? insuranceName.insur_name : \"\" }</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Languages Spoken:</td>\n                                        <td>{listing.languages_spoken}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Address:</td>\n                                        <td>{listing.adress}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Latitude:</td>\n                                        <td>{listing.lat}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Longitude:</td>\n                                        <td>{listing.lon}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Transit:</td>\n                                        <td>{listing.transit}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Website:</td>\n                                        <td>{listing.website}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Phone Number:</td>\n                                        <td>{listing.phone_num}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Emergency Number:</td>\n                                        <td>{listing.emergency_num}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Drop In:</td>\n                                        <td>{listing.drop_in}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Services:</td>\n                                        <td>{listing.services}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Services (FR):</td>\n                                        <td>{listing.services_fr}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Notes:</td>\n                                        <td>{listing.notes}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Notes (FR):</td>\n                                        <td>{listing.notes_fr}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Verified By:</td>\n                                        <td>{listing.verified_by}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Hours(Monday):</td>\n                                        <td>{listing.hours[1]}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Business Hours(Tuesday):</td>\n                                        <td>{listing.hours[2]}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Hours(Wednesday):</td>\n                                        <td>{listing.hours[3]}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Business Hours(Thursday):</td>\n                                        <td>{listing.hours[4]}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Hours(Friday):</td>\n                                        <td>{listing.hours[5]}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Business Hours(Saturday):</td>\n                                        <td>{listing.hours[6]}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Hours(Sunday):</td>\n                                        <td>{listing.hours[0]}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </Panel>\n                    </Collapse>\n                </Card>\n            </Row>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    const { primary_category, subcategory, insurance } = state.serviceReducer;\n    return {\n        primary_category, subcategory, insurance\n    }\n};\n\nconst NewCardTemplateComponent = withRouter(connect(mapStateToProps)(CardTemplateComponent));\nexport default NewCardTemplateComponent;","// React, Routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { serviceActions } from './redux/actions/serviceActions';\nimport { categoryActions } from './redux/actions/categoryActions';\nimport { insuranceActions } from './redux/actions/insuranceActions';\nimport actionConstants from './redux/actionConstants';\nimport CardTemplate from './CardTemplate.jsx';\n//Style\nimport { Input } from 'antd';\nconst { Search } = Input;\nclass ListServiceClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filter: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.props.dispatch(serviceActions.getServiceRequest());\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\n    }\n\n    render() {\n        return (\n            <div className=\"Card_Container\">\n                <Search\n                    placeholder=\"search service\"\n                    onChange={event => {\n                        this.setState({filter: event.target.value})\n                        console.log(event.target.value)\n                    }}\n                    className=\"search-bar\"\n                />\n                {this.props.listing.length > 0 && this.props.listing.map((service, i) => {\n                    if (this.props.listing[i].name) {\n                        let lowerCaseFilter = this.state.filter.toLowerCase();\n                        if ((this.props.listing[i].name).toLowerCase().indexOf(lowerCaseFilter)>-1) {\n                            return(\n                                <CardTemplate \n                                    listing={service}\n                                    key={i}\n                                />\n                            )\n                        }\n                    }\n                })\n                }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    const { listing, primary_category, subcategory, insurance } = state.serviceReducer;\n    return {\n        listing, primary_category, subcategory, insurance\n    }\n}\nconst ListService = connect(mapStateToProps)(ListServiceClass);\nexport default ListService;","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport  LogIn  from './login.jsx';\n\n// Style\nimport { Link } from 'react-router-dom';\n\nimport ListService from './listService.jsx';\n// Style\nimport './home.css';\nimport { Button, Input } from 'antd';\n\nclass HomeClass extends React.Component {\n    constructor(props) {\n        super(props);\n       \n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.loggedin != prevProps.loggedin && this.props.loggedin == true) {\n            window.location.href = '/home';\n        }\n\n    }\n    render() {\n            return ( \n           \n                <div className=\"home-wrapper\">\n                    <div className=\"newService\">\n                        <Link to=\"/newService\">\n                            <Button>Create New Service</Button>\n                        </Link>\n                        <Link to=\"/category\">\n                            <Button>Manage Primary Categories</Button>\n                        </Link>\n                        <Link to=\"/subcategory\">\n                            <Button>Manage Subcategories</Button>\n                        </Link>\n                        <Link to=\"/insurance\">\n                            <Button>Manage Insurances</Button>\n                        </Link>\n                    </div>\n                    <ListService />\n                </div>\n             \n            )\n        }\n}\nconst mapStateToProps = (state) => {\n    const { loggedInUser } = state.auth\n    return {\n        loggedInUser\n    }\n}\nconst Home = withRouter(connect(mapStateToProps)(HomeClass));\nexport default Home;","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { serviceActions } from './redux/actions/serviceActions';\nimport { categoryActions } from './redux/actions/categoryActions';\nimport { insuranceActions } from './redux/actions/insuranceActions';\nimport actionConstants from './redux/actionConstants';\n\n// Style\nimport \"./newService.css\";\nimport { Form, Input, InputNumber, Button, Select, Tag, Tooltip, Icon } from 'antd';\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst InputGroup = Input.Group;\n\nclass NewServiceClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: {\n                lang: [],\n                services: [],\n                servicesFr: []\n            },\n            inputVisible: {\n                lang: false,\n                services: false,\n                servicesFr: false\n            },\n            inputValue: {\n                lang: '',\n                services: '',\n                servicesFr: ''\n            },\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.CREATE_SERVICE_FAILURE) {\n            alert(this.props.error.detail ? this.props.error.detail : this.props.error);\n        }\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.CREATE_SERVICE_SUCCESS) {\n            alert(\"Service created successfully\");\n            window.location.href = \"/home\";\n        }\n    }\n\n    // TAG INPUT\n    handleClose = (removedTag, type) => {\n        const newTags = this.state.tags[type].filter(tag => tag !== removedTag);\n        let { tags } = this.state;\n        tags[type] = newTags;\n        this.setState({ tags });\n    };\n\n    showInput = (type) => {\n        let { inputVisible } = this.state;\n        inputVisible[type] = true\n        let input = \"input\" + type;\n        this.setState({ inputVisible }, () => this[input].focus());\n    };\n\n    handleInputChange = (e, type) => {\n        let { inputValue } = this.state;\n        inputValue[type] = e.target.value;\n        this.setState({ inputValue });\n    };\n\n    handleInputConfirm = (type) => {\n        let { tags, inputValue, inputVisible } = this.state;\n        if (inputValue[type] && tags[type].indexOf(inputValue[type]) === -1) {\n            tags[type] = [...tags[type], inputValue[type]];\n        }\n        inputVisible[type] = false;\n        inputValue[type] = '';\n        this.setState({\n            tags,\n            inputVisible,\n            inputValue,\n        });\n    };\n\n    saveInputRefLang = (input) => (this.inputlang = input);\n    saveInputRefServices = (input) => (this.inputservices = input);\n    saveInputRefServicesFr = (input) => (this.inputservicesFr = input);\n\n    parseTime(time) {\n        if (!time) {\n            return true;\n        }\n\n        let parsed = time.split('-');\n        if (parsed.length !== 2) {\n            return false;\n        }\n\n        let start = parsed[0].split(':');\n        if (start.length !== 2 || isNaN(start[0]) || isNaN(start[1])) {\n            return false;\n        }\n        let end = parsed[1].split(':');\n        if (end.length !== 2 || isNaN(end[0]) || isNaN(end[1])) {\n            return false;\n        }\n        return true;\n    }\n\n    getHours(time, last) {\n        if (time) {\n            if (this.parseTime(time)) {\n                if (last) {\n                    return `{${time}}`;\n                }\n                else {\n                    return `{${time}},`;\n                }\n            }\n            else {\n                return false\n            }\n        }\n        else {\n            if (last) {\n                return `{NA}`;\n            }\n            else {\n                return `{NA},`;\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n\n            // Build business hours string\n            let hours = \"{\";\n            if (this.getHours(values.hours_sun) && this.getHours(values.hours_mon) && this.getHours(values.hours_tue) && this.getHours(values.hours_wed) && this.getHours(values.hours_thu) && this.getHours(values.hours_fri) && this.getHours(values.hours_sat)) {\n                hours += this.getHours(values.hours_sun, false);\n                hours += this.getHours(values.hours_mon, false);\n                hours += this.getHours(values.hours_tue, false);\n                hours += this.getHours(values.hours_wed, false);\n                hours += this.getHours(values.hours_thu, false);\n                hours += this.getHours(values.hours_fri, false);\n                hours += this.getHours(values.hours_sat, true);\n            }\n            else {\n                return alert(\"Business hours must follow the format HH:mm-HH:mm\");\n            }\n            hours += \"}\";\n            values.hours = hours;\n\n            // Build languages and services string\n            let lang = this.state.tags.lang.join(',');\n            let services = this.state.tags.services.join(',');\n            let servicesFr = this.state.tags.servicesFr.join(',');\n            \n            values.languages_spoken = lang;\n            values.services = services;\n            values.services_fr = servicesFr;\n\n            this.props.dispatch(serviceActions.createServiceRequest(values));\n          }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { tags, inputVisible, inputValue } = this.state;\n\n            return (\n                <div className=\"service-form-wrapper\">\n                    <h1>Create a new service</h1>\n                    <Form \n                        onSubmit={this.handleSubmit} \n                    >\n                        <Form.Item label=\"Service Name\">\n                            {getFieldDecorator('name', {})(\n                                <Input\n                                    placeholder=\"eg. CLSC du Parc\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Primary category\">\n                            {getFieldDecorator('primary_cat_id', {})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.primary_category.map((cat, i) => {\n                                        return (\n                                            <Option key={i} value={cat.cat_id}>{cat.cat_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Subcategory\">\n                            {getFieldDecorator('sub_cat_id', {})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.subcategory.map((cat, i) => {\n                                        return (\n                                            <Option key={i} value={cat.subcat_id}>{cat.subcat_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Insurance\">\n                            {getFieldDecorator('insur_id', {})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.insurance.map((insur, i) => {\n                                        return (\n                                            <Option key={i} value={insur.insur_id}>{insur.insur_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Languages Spoken\">\n                            <div>Please indicate the full language name (ex: \"English\", \"French\")</div>\n                            <div>\n                                {tags[\"lang\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"lang\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"lang\"] && (\n                                    <Input\n                                        ref={this.saveInputRefLang}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue[\"lang\"]}\n                                        onChange={e => this.handleInputChange(e, \"lang\")}\n                                        onBlur={() => this.handleInputConfirm(\"lang\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"lang\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"lang\"] && (\n                                    <Tag onClick={() => this.showInput(\"lang\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Language\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Address\">\n                            {getFieldDecorator('address', {})(\n                                <Input\n                                    placeholder=\"eg. 123 Avenue du Parc\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Latitude\">\n                            {getFieldDecorator('lat', {})(\n                                <InputNumber\n                                    style={{width: \"100%\"}}\n                                    placeholder=\"eg. 45.23424\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Longitude\">\n                            {getFieldDecorator('lon', {})(\n                                <InputNumber\n                                    style={{width: \"100%\"}}\n                                    placeholder=\"eg. -73.34535\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Transit\">\n                            {getFieldDecorator('transit', {})(\n                                <Input\n                                    placeholder=\"eg. Yes, near Place des Arts\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Website\">\n                            {getFieldDecorator('website', {})(\n                                <Input\n                                    placeholder=\"eg. www.example.com\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Phone number\">\n                            {getFieldDecorator('phone_num', {})(\n                                <Input\n                                    placeholder=\"eg. 514-555-4444\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Emergency Number\">\n                            {getFieldDecorator('emergency_num', {})(\n                                <Input\n                                    placeholder=\"eg. 514-555-4444\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Drop In\">\n                            {getFieldDecorator('drop_in', {})(\n                                <Input\n                                    placeholder=\"eg. Yes\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Services\">\n                            <div>\n                                {tags[\"services\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"services\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"services\"] && (\n                                    <Input\n                                        ref={this.saveInputRefServices}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue[\"services\"]}\n                                        onChange={e => this.handleInputChange(e, \"services\")}\n                                        onBlur={() => this.handleInputConfirm(\"services\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"services\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"services\"] && (\n                                    <Tag onClick={() => this.showInput(\"services\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Service\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Services (FR)\">\n                            <div>\n                                {tags[\"servicesFr\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"servicesFr\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"servicesFr\"] && (\n                                    <Input\n                                        ref={this.saveInputRefServicesFr}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 120 }}\n                                        value={inputValue[\"servicesFr\"]}\n                                        onChange={e => this.handleInputChange(e, \"servicesFr\")}\n                                        onBlur={() => this.handleInputConfirm(\"servicesFr\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"servicesFr\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"servicesFr\"] && (\n                                    <Tag onClick={() => this.showInput(\"servicesFr\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Service (FR)\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Notes\">\n                            {getFieldDecorator('notes', {})(\n                                <TextArea\n                                    rows={10}\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Notes (FR)\">\n                            {getFieldDecorator('notes_fr', {})(\n                                <TextArea\n                                    rows={10}\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Verified by\">\n                            {getFieldDecorator('verified_by', {})(\n                                <Input\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        Business Hours:\n                        <InputGroup compact>\n                            <Form.Item>\n                                {getFieldDecorator('hours_sun', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Sun\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_mon', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Mon\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_tue', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Tue\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_wed', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Wed\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_thu', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Thu\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_fri', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Fri\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_sat', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Sat\" />,\n                                )}\n                            </Form.Item>\n                        </InputGroup>\n                        \n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Create Service\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            )\n        }\n}\nconst mapStateToProps = (state) => {\n    const {loggedInUser} = state.auth;\n    const { status, error, primary_category, subcategory, insurance } = state.serviceReducer;\n    return {\n        status, error, primary_category, subcategory, insurance, loggedInUser\n    }\n}\nconst ServiceForm = Form.create()(NewServiceClass);\nconst NewService = withRouter(connect(mapStateToProps)(ServiceForm));\nexport default NewService;","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { serviceActions } from './redux/actions/serviceActions';\nimport actionConstants from './redux/actionConstants';\n\n// Style\nimport \"./editService.css\";\nimport { Form, Input, InputNumber, Button, Select, Tag, Icon } from 'antd';\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst InputGroup = Input.Group;\nclass EditServiceClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: {\n                lang: [],\n                services: [],\n                servicesFr: []\n            },\n            inputVisible: {\n                lang: false,\n                services: false,\n                servicesFr: false\n            },\n            inputValue: {\n                lang: '',\n                services: '',\n                servicesFr: ''\n            },\n        }\n    }\n    \n    componentDidMount() {\n        const { listing } = this.props;\n        const { service_id } = this.props.match.params;\n        let service = [];\n        for(var i = 0; i < listing.length; i++) {\n            if (listing[i].service_id == service_id) {\n                service.push(listing[i]);\n            } \n        }\n        const currentService = service[0];\n        const languages = currentService.languages_spoken ? (currentService.languages_spoken).split(\",\") : [];\n        const Service = currentService.services ? (currentService.services).split(\",\") : [];\n        const Services_fr = currentService.services_fr ? (currentService.services_fr).split(\",\") : [];\n        this.setState({\n            tags: {\n                lang: languages,\n                services: Service,\n                servicesFr: Services_fr\n            }\n        });\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_FAILURE) {\n            alert(\"ERROR SAVING\");\n        }\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_SUCCESS) {\n            alert(\"Service modified successfully\");\n            window.location.href = \"/home\";\n        }\n    }\n\n    // TAG INPUT\n    handleClose = (removedTag, type) => {\n        const newTags = this.state.tags[type].filter(tag => tag !== removedTag);\n        let { tags } = this.state;\n        tags[type] = newTags;\n        this.setState({ tags });\n    };\n\n    showInput = (type) => {\n        let { inputVisible } = this.state;\n        inputVisible[type] = true\n        let input = \"input\" + type;\n        this.setState({ inputVisible }, () => this[input].focus());\n    };\n\n    handleInputChange = (e, type) => {\n        let { inputValue } = this.state;\n        inputValue[type] = e.target.value;\n        this.setState({ inputValue });\n    };\n\n    handleInputConfirm = (type) => {\n        let { tags, inputValue, inputVisible } = this.state;\n        if (inputValue[type] && tags[type].indexOf(inputValue[type]) === -1) {\n            tags[type] = [...tags[type], inputValue[type]];\n        }\n        inputVisible[type] = false;\n        inputValue[type] = '';\n        this.setState({\n            tags,\n            inputVisible,\n            inputValue,\n        });\n    };\n\n    saveInputRefLang = (input) => (this.inputlang = input);\n    saveInputRefServices = (input) => (this.inputservices = input);\n    saveInputRefServicesFr = (input) => (this.inputservicesFr = input);\n\n    parseTime(time) {\n        if (time !=\"NA\") {\n            if (!time) {\n                return true;\n            }\n            let parsed = time.split('-');\n            if (parsed.length !== 2) {\n                return false;\n            }\n\n            let start = parsed[0].split(':');\n            if (start.length !== 2 || isNaN(start[0]) || isNaN(start[1])) {\n                return false;\n            }\n            let end = parsed[1].split(':');\n            if (end.length !== 2 || isNaN(end[0]) || isNaN(end[1])) {\n                return false;\n            }\n            return true;\n        }\n    }\n\n    getHours(time, last) {\n        if (time) {\n            if (this.parseTime(time)) {\n                if (last) {\n                    return `{${time}}`;\n                }\n                else {\n                    return `{${time}},`;\n                }\n            }\n            else {\n                return false\n            }\n        }\n        else {\n            if (last) {\n                return `{NA}`;\n            }\n            else {\n                return `{NA},`;\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n\n            // Build business hours string\n            let hours = \"{\";\n            \n            if (Array.isArray(values.hours_sun)) {\n                values.hours_sun = values.hours_sun[0];\n            }\n            if (Array.isArray(values.hours_mon)) {\n                values.hours_mon = values.hours_mon[0];\n            }\n            if (Array.isArray(values.hours_tue)) {\n                values.hours_tue = values.hours_tue[0];\n            }\n            if (Array.isArray(values.hours_wed)) {\n                values.hours_wed = values.hours_wed[0];\n            }\n            if (Array.isArray(values.hours_thu)) {\n                values.hours_thu = values.hours_thu[0];\n            }\n            if (Array.isArray(values.hours_fri)) {\n                values.hours_fri = values.hours_fri[0];\n            }\n            if (Array.isArray(values.hours_sat)) {\n                values.hours_sat = values.hours_sat[0];\n            }\n            if (this.getHours(values.hours_sun) && this.getHours(values.hours_mon) && this.getHours(values.hours_tue) && this.getHours(values.hours_wed) && this.getHours(values.hours_thu) && this.getHours(values.hours_fri) && this.getHours(values.hours_sat)) {\n                hours += this.getHours(values.hours_sun, false);\n                hours += this.getHours(values.hours_mon, false);\n                hours += this.getHours(values.hours_tue, false);\n                hours += this.getHours(values.hours_wed, false);\n                hours += this.getHours(values.hours_thu, false);\n                hours += this.getHours(values.hours_fri, false);\n                hours += this.getHours(values.hours_sat, true);\n            }\n            else {\n                return alert(\"Business hours must follow the format HH:mm-HH:mm\");\n            }\n            hours += \"}\";\n            values.hours = hours;\n\n            // Build languages and services string\n            let lang = this.state.tags.lang.join(',');\n            let services = this.state.tags.services.join(',');\n            let servicesFr = this.state.tags.servicesFr.join(',');\n            \n            values.languages_spoken = lang;\n            values.services = services;\n            values.services_fr = servicesFr;\n            const { service_id } = this.props.match.params;\n            this.props.dispatch(serviceActions.editServiceRequest({values:values,serviceId:service_id}));\n        }\n      });\n  };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { tags, inputVisible, inputValue } = this.state;\n        const { listing } = this.props;\n        const { service_id } = this.props.match.params;\n        let service = [];\n        for(var i = 0; i < listing.length; i++) {\n            if (listing[i].service_id == service_id) {\n                service.push(listing[i]);\n            } \n        }\n        const currentService = service[0];\n        if (true) {\n            return (\n                <div className=\"service-form-wrapper\">\n                    <h1>Edit Service</h1>\n                    <Form\n                        onSubmit={this.handleSubmit}\n                    >\n                        <Form.Item label=\"Service Name\">\n                            {\n                                getFieldDecorator('name', {initialValue: currentService.name})(\n                                    <Input\n                                        style={{width: \"100%\"}}\n                                    />\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item label=\"Primary category\">\n                            {getFieldDecorator('primary_cat_id', {initialValue: currentService.primary_cat_id})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.primary_category.map((cat, i) => {\n                                        return (\n                                            <Option key={i} value={cat.cat_id}>{cat.cat_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Subcategory\">\n                            {getFieldDecorator('sub_cat_id', {initialValue: currentService.sub_cat_id})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.subcategory.map((cat, i) => {\n                                        return (\n                                            <Option key={i} value={cat.subcat_id}>{cat.subcat_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Insurance\">\n                            {getFieldDecorator('insur_id', {initialValue: currentService.insur_id})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.insurance.map((insur, i) => {\n                                        return (\n                                            <Option key={i} value={insur.insur_id}>{insur.insur_name}</Option>\n                                        );\n                                    })}\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Languages Spoken\">\n                            <div>\n                                {tags[\"lang\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"lang\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"lang\"] && (\n                                    <Input\n                                        ref={this.saveInputRefLang}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue[\"lang\"]}\n                                        onChange={e => this.handleInputChange(e, \"lang\")}\n                                        onBlur={() => this.handleInputConfirm(\"lang\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"lang\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"lang\"] && (\n                                    <Tag onClick={() => this.showInput(\"lang\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Language\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Address\">\n                            {getFieldDecorator('address', {initialValue: currentService.address})(\n                                <Input\n                                    placeholder=\"eg. 123 Avenue du Parc\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Latitude\">\n                            {getFieldDecorator('lat', {initialValue: currentService.lat})(\n                                <InputNumber\n                                    style={{width: \"100%\"}}\n                                    placeholder=\"eg. 45.23424\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Longitude\">\n                            {getFieldDecorator('lon', {initialValue: currentService.lon})(\n                                <InputNumber\n                                    style={{width: \"100%\"}}\n                                    placeholder=\"eg. -73.34535\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Transit\">\n                            {getFieldDecorator('transit', {initialValue: currentService.transit})(\n                                <Input\n                                    placeholder=\"eg. Yes, near Place des Arts\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Website\">\n                            {getFieldDecorator('website', {initialValue: currentService.website})(\n                                <Input\n                                    placeholder=\"eg. www.example.com\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Phone number\">\n                            {getFieldDecorator('phone_num', {initialValue: currentService.phone_num})(\n                                <Input\n                                    placeholder=\"eg. 514-555-4444\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Emergency Number\">\n                            {getFieldDecorator('emergency_num', {initialValue: currentService.emergency_num})(\n                                <Input\n                                    placeholder=\"eg. 514-555-4444\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Drop In\">\n                            {getFieldDecorator('drop_in', {initialValue: currentService.drop_in})(\n                                <Input\n                                    placeholder=\"eg. Yes\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Services\">\n                            <div>\n                                {tags[\"services\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"services\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"services\"] && (\n                                    <Input\n                                        ref={this.saveInputRefServices}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue[\"services\"]}\n                                        onChange={e => this.handleInputChange(e, \"services\")}\n                                        onBlur={() => this.handleInputConfirm(\"services\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"services\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"services\"] && (\n                                    <Tag onClick={() => this.showInput(\"services\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Service\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Services (FR)\">\n                            <div>\n                                {tags[\"servicesFr\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"servicesFr\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"servicesFr\"] && (\n                                    <Input\n                                        ref={this.saveInputRefServicesFr}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 120 }}\n                                        value={inputValue[\"servicesFr\"]}\n                                        onChange={e => this.handleInputChange(e, \"servicesFr\")}\n                                        onBlur={() => this.handleInputConfirm(\"servicesFr\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"servicesFr\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"servicesFr\"] && (\n                                    <Tag onClick={() => this.showInput(\"servicesFr\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Service (FR)\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Notes\">\n                            {getFieldDecorator('notes', {initialValue: currentService.notes})(\n                                <TextArea\n                                    rows={10}\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Notes (FR)\">\n                            {getFieldDecorator('notes_fr', {initialValue: currentService.notes_fr})(\n                                <TextArea\n                                    rows={10}\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Verified by\">\n                            {getFieldDecorator('verified_by', {initialValue: currentService.verified_by})(\n                                <Input\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        Business Hours:\n                        <InputGroup compact>\n                            <Form.Item>\n                                {getFieldDecorator('hours_sun', {initialValue: currentService.hours[0] == 'NA' ? \"\" : currentService.hours[0]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Sun\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_mon', {initialValue: currentService.hours[1] == 'NA' ? \"\" : currentService.hours[1]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Mon\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_tue', {initialValue: currentService.hours[2] == 'NA' ? \"\" : currentService.hours[2]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Tue\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_wed', {initialValue: currentService.hours[3] == 'NA' ? \"\" : currentService.hours[3]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Wed\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_thu', {initialValue: currentService.hours[4] == 'NA' ? \"\" : currentService.hours[4]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Thu\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_fri', {initialValue: currentService.hours[5] == 'NA' ? \"\" : currentService.hours[5]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Fri\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_sat', {initialValue: currentService.hours[6] == 'NA' ? \"\" : currentService.hours[6]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Sat\" />,\n                                )}\n                            </Form.Item>\n                        </InputGroup>\n                        <Form.Item className=\"cancel-button\">\n                            <Button\n                                onClick={()=>window.history.back()}\n                            >\n                                Cancel\n                            </Button>\n                        </Form.Item>\n                        <Form.Item className=\"button\">\n                            <Button\n                                type=\"primary\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div> \n            )\n        }\n        else {\n            return (\n                <div>You are not allowed to access this page</div>\n            );\n        }\n    \n    }\n}\nconst mapStateToProps = ( state ) => {\n    const { listing, primary_category, subcategory, insurance, newEdit, status } = state.serviceReducer;\n    const { loggedInUser } = state.auth\n    return {\n        listing, primary_category, subcategory, insurance, loggedInUser, newEdit, status\n    }\n}\nconst EditServiceForm = Form.create()(EditServiceClass);\nconst EditService = withRouter(connect(mapStateToProps)(EditServiceForm));\nexport default EditService;","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport actionConstants from './redux/actionConstants';\nimport { categoryActions } from './redux/actions/categoryActions';\n\n// Style\nimport './home.css';\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n    constructor(props) {\n      super(props);\n      this.columns = [\n        {\n          title: 'Category ID',\n          dataIndex: 'cat_id',\n          width: '20%',\n          editable: false,\n        },\n        {\n          title: 'Category Name',\n          dataIndex: 'cat_name',\n          editable: true\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          width: '20%',\n          render: (text, record) =>\n            this.state.dataSource.length >= 1 ? (\n              <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.cat_id)}>\n                <a>Delete</a>\n              </Popconfirm>\n            ) : null,\n        },\n      ];\n  \n      this.state = {\n        dataSource: [],\n        count: 0,\n        adding: false\n      };\n\n      this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS)) {\n            let dataSource = [];\n            for (let i=0; i<this.props.primary_category.length; i++) {\n                dataSource.push(this.props.primary_category[i]);\n                dataSource[i].key = i;\n            }\n            this.setState({\n                dataSource: dataSource,\n                count: this.props.primary_category.length\n            })\n        }\n    }\n  \n    handleDelete = cat_id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({ dataSource: dataSource.filter(item => item.cat_id !== cat_id) });\n      this.props.dispatch(categoryActions.deletePrimaryCategoryRequest(cat_id))\n    };\n  \n    handleAdd = () => {\n      const { count, dataSource } = this.state;\n      const newData = {\n        key: count,\n        cat_id: \"\",\n        cat_name: \"\"\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1,\n        adding: true\n      });\n    };\n  \n    handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        ...row,\n      });\n\n      if (this.state.adding) {\n        this.props.dispatch(categoryActions.createPrimaryCategoryRequest(row));\n      }\n      else {\n        this.props.dispatch(categoryActions.updatePrimaryCategoryRequest(row));\n      }\n      \n      this.setState({ \n          dataSource: newData,\n          adding: false\n      });\n    };\n  \n    render() {\n      const { dataSource } = this.state;\n      const components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell,\n        },\n      };\n      const columns = this.columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave,\n          }),\n        };\n      });\n      return (\n        <div>\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n            pagination={false}\n          />\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { status, primary_category } = state.categoryReducer\n    return {\n        status, primary_category\n    }\n}\nconst TableComponent = connect(mapStateToProps)(EditableTable);\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            count: 0\n        }\n        \n    }\n\n    render() {\n        return ( \n            <div className=\"home-wrapper\">\n                <TableComponent \n                    dataSource={this.state.dataSource}\n                    count={this.state.count}\n                />\n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter(Category);","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport actionConstants from './redux/actionConstants';\nimport { categoryActions } from './redux/actions/categoryActions';\n\n// Style\nimport './home.css';\nimport { Table, Input, Button, Popconfirm, Form, Select, Divider } from 'antd';\nconst { Option } = Select;\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n    constructor(props) {\n      super(props);\n      this.columns = [\n        {\n          title: 'Category ID',\n          dataIndex: 'subcat_id',\n          width: '20%',\n          editable: false,\n        },\n        {\n          title: 'Category Name',\n          dataIndex: 'subcat_name',\n          editable: true\n        },\n        {\n            title: 'Primary Category',\n            dataIndex: 'pc_id',\n            render: (record) => (\n                <Select defaultValue={record} style={{width: 200}} onChange={this.changePrimaryCategory}>\n                    {this.props.primary_category.map((pc, i) => {\n                        return (\n                            <Option key={i} value={pc.cat_id}>{pc.cat_name}</Option>\n                        );\n                    })}\n                </Select>\n            )\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          width: '20%',\n          render: (text, record) =>\n            this.state.dataSource.length >= 1 ? (\n                <div>   \n                    <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.subcat_id)}>\n                        <a>Delete</a>\n                    </Popconfirm>\n                    <Divider type=\"vertical\"/>\n                    <a onClick={()=>this.handleSubmit(record)}>Save</a>\n                </div>\n              \n            ) : null,\n        },\n      ];\n  \n      this.state = {\n        dataSource: [],\n        count: 0,\n        adding: false,\n        pc_id: 0\n      };\n\n      this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n      this.props.dispatch(categoryActions.getSubcategoryRequest());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.CREATE_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.UPDATE_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.DELETE_SUBCATEGORY_SUCCESS)) {\n            let dataSource = [];\n            for (let i=0; i<this.props.subcategory.length; i++) {\n                dataSource.push(this.props.subcategory[i]);\n                dataSource[i].key = i;\n            }\n            this.setState({\n                dataSource: dataSource,\n                count: this.props.subcategory.length,\n                adding: false\n            })\n        }\n    }\n\n    changePrimaryCategory = (value) => {\n        this.setState({\n            pc_id: value\n        })\n    }\n  \n    handleDelete = subcat_id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({ dataSource: dataSource.filter(item => item.subcat_id !== subcat_id) });\n      this.props.dispatch(categoryActions.deleteSubcategoryRequest(subcat_id))\n    };\n  \n    handleAdd = () => {\n      const { count, dataSource } = this.state;\n      const newData = {\n        key: count,\n        subcat_id: \"\",\n        subcat_name: \"\",\n        pc_id: \"\"\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1,\n        adding: true\n      });\n    };\n  \n    handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        ...row,\n      });\n      \n      this.setState({ \n          dataSource: newData\n      });\n    };\n\n    handleSubmit = row => {\n        row.pc_id = this.state.pc_id;\n\n        if (this.state.adding) {\n            this.props.dispatch(categoryActions.createSubcategoryRequest(row));\n        }\n        else {\n            this.props.dispatch(categoryActions.updateSubcategoryRequest(row));\n        }\n    }\n  \n    render() {\n      const { dataSource } = this.state;\n      const components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell,\n        },\n      };\n      const columns = this.columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave\n          }),\n        };\n      });\n      return (\n        <div>\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n            pagination={false}\n          />\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { status, primary_category, subcategory } = state.categoryReducer\n    return {\n        status, primary_category, subcategory\n    }\n}\nconst TableComponent = connect(mapStateToProps)(EditableTable);\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            count: 0\n        }\n        \n    }\n\n    render() {\n        return ( \n            <div className=\"home-wrapper\">\n                <TableComponent \n                    dataSource={this.state.dataSource}\n                    count={this.state.count}\n                />\n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter(Category);","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport actionConstants from './redux/actionConstants';\nimport { insuranceActions } from './redux/actions/insuranceActions';\n\n// Style\nimport './home.css';\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n    constructor(props) {\n      super(props);\n      this.columns = [\n        {\n          title: 'Insurance ID',\n          dataIndex: 'insur_id',\n          width: '20%',\n          editable: false,\n        },\n        {\n          title: 'Insurance Name',\n          dataIndex: 'insur_name',\n          editable: true\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          width: '20%',\n          render: (text, record) =>\n            this.state.dataSource.length >= 1 ? (\n              <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.insur_id)}>\n                <a>Delete</a>\n              </Popconfirm>\n            ) : null,\n        },\n      ];\n  \n      this.state = {\n        dataSource: [],\n        count: 0,\n        adding: false\n      };\n\n      this.props.dispatch(insuranceActions.getInsuranceRequest());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_INSURANCE_SUCCESS || this.props.status === actionConstants.CREATE_INSURANCE_SUCCESS || this.props.status === actionConstants.UPDATE_INSURANCE_SUCCESS || this.props.status === actionConstants.DELETE_INSURANCE_SUCCESS)) {\n            let dataSource = [];\n            for (let i=0; i<this.props.insurance.length; i++) {\n                dataSource.push(this.props.insurance[i]);\n                dataSource[i].key = i;\n            }\n            this.setState({\n                dataSource: dataSource,\n                count: this.props.insurance.length\n            })\n        }\n    }\n  \n    handleDelete = insur_id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({ dataSource: dataSource.filter(item => item.insur_id !== insur_id) });\n      this.props.dispatch(insuranceActions.deleteInsuranceRequest(insur_id))\n    };\n  \n    handleAdd = () => {\n      const { count, dataSource } = this.state;\n      const newData = {\n        key: count,\n        insur_id: \"\",\n        insur_name: \"\"\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1,\n        adding: true\n      });\n    };\n  \n    handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        ...row,\n      });\n\n      if (this.state.adding) {\n        this.props.dispatch(insuranceActions.createInsuranceRequest(row));\n      }\n      else {\n        this.props.dispatch(insuranceActions.updateInsuranceRequest(row));\n      }\n      \n      this.setState({ \n          dataSource: newData,\n          adding: false\n      });\n    };\n  \n    render() {\n      const { dataSource } = this.state;\n      const components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell,\n        },\n      };\n      const columns = this.columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave,\n          }),\n        };\n      });\n      return (\n        <div>\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n            pagination={false}\n          />\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { status, insurance } = state.insuranceReducer\n    return {\n        status, insurance\n    }\n}\nconst TableComponent = connect(mapStateToProps)(EditableTable);\n\nclass Insurance extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        console.log(\"insurancerander\")\n        return ( \n            <div className=\"home-wrapper\">\n                <TableComponent/>\n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter(Insurance);","// React, routing\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch} from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { withRouter, Router } from 'react-router';\n\n// Redux\nimport { createStore, applyMiddleware } from 'redux';\nimport {Provider, connect } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './redux/sagas/rootSaga.js';\nimport rootReducer from './redux/reducers/rootReducer.js';\nimport { authActions } from './redux/actions/authActions';\nimport  actionConstants from './redux/actionConstants';\n\n// Style\nimport { Layout, ConfigProvider, Row, Col, Button } from 'antd';\nimport en_US from 'antd/lib/locale-provider/en_US';\n\n// Components\nimport Home from \"./home.jsx\";\nimport NewService from \"./newService.jsx\";\nimport Login from \"./login.jsx\";\nimport EditService from \"./editService.jsx\";\nimport Category from \"./category.jsx\";\nimport Subcategory from \"./subcategory.jsx\";\nimport Insurance from \"./insurance.jsx\";\n\nconst { Header, Content, Sider } = Layout;\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    rootReducer(history),\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\n// (na) console log the state\nconst unsubscribe = store.subscribe(()=>console.log(store.getState()));\n\nclass IndexClass extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    signOut = () => {\n        const { dispatch } = this.props;\n        dispatch(authActions.signOutRequest());\n    }\n\n    backHome = () => {\n         window.location.href= \"/home\";\n    }\n\n    getCookie() {\n        var nameEQ = \"token\" + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i=0;i < ca.length;i++) {\n            var c = ca[i];\n            while (c.charAt(0)==' ') c = c.substring(1,c.length);\n            if (c.indexOf(nameEQ) == 0){\n                return c.substring(nameEQ.length,c.length);\n            } \n        }\n        return null;\n    }\n    \n    showButton(){\n        if (this.getCookie() && this.getCookie() != \"null\"){\n            return ( \n                <div style={{ display: \"inline-block\", float:\"right\"}}>\n                    <Button\n\n                        style={{ marginRight:\"50px\"}}\n                        className=\"menu-option\"\n                        onClick={this.backHome}\n                    >\n                        Home\n                    </Button>\n                    <Button\n                        style={{}}\n                        className=\"menu-option\"\n                        onClick={this.signOut}\n                    >\n                        Logout\n                    </Button>\n                </div>\n            )  \n        }\n    }\n\n    render() {\n        return(\n            <Layout style={{minHeight: \"100vh\"}}>\n                <Header\n                align=\"middle\"\n                >\n                    <div style={{color:\"white\"}}>\n                    <span  style={{float:\"left\", fontSize:\"25px\"}}>Health & Wellness Map Admin</span>\n                    {this.showButton()}\n                    </div>\n                \n                </Header>\n                <Content>\n                    <Switch>\n                        <Route exact path=\"/\" component={Login} />\n                    </Switch>\n                    <Switch>\n                        <Route exact path=\"/home\" component={Home} />\n                    </Switch>\n                    <Switch>\n                        <Route exact path=\"/newService\" component={NewService} />\n                    </Switch>\n                    <Switch>\n                        <Route exact path=\"/category\" component={Category} />\n                    </Switch>\n                    <Switch>\n                        <Route exact path=\"/subcategory\" component={Subcategory} />\n                    </Switch>\n                    <Switch>\n                        <Route exact path=\"/insurance\" component={Insurance} />\n                    </Switch>\n                    <Switch>\n                        <Route exact path=\"/editService/:service_id\" component={EditService} />\n                    </Switch>\n                </Content>\n            </Layout>\n                        \n        )\n        \n    }\n}\nconst mapStateToProps = (state) => {\n    return {}\n}\nconst Index = connect(mapStateToProps)(IndexClass);\nexport default Index;\n","// React, routing\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch} from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { withRouter, Router } from 'react-router';\n\n// Redux\nimport { createStore, applyMiddleware } from 'redux';\nimport {Provider, connect } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './redux/sagas/rootSaga.js';\nimport rootReducer from './redux/reducers/rootReducer.js';\nimport { authActions } from './redux/actions/authActions';\nimport  actionConstants from './redux/actionConstants';\n\n// Style\nimport en_US from 'antd/lib/locale-provider/en_US';\nimport { Layout, ConfigProvider, Row, Col, Button } from 'antd';\nimport Index from './index.jsx';\nimport './App.css';\n\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    rootReducer(history),\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\n// (na) console log the state\nconst unsubscribe = store.subscribe(()=>console.log(store.getState()));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ConfigProvider locale={en_US}>\n          <Provider store={store}>\n              <ConnectedRouter history={history}> \n                <Index />\n              </ConnectedRouter>\n          </Provider>\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}