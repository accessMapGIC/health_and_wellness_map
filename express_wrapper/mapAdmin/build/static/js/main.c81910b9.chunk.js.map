{"version":3,"sources":["redux/actionConstants.js","redux/actions/serviceActions.js","redux/sagas/serviceSagas.js","redux/actions/authActions.js","redux/sagas/authSagas.js","redux/actions/categoryActions.js","redux/sagas/categorySagas.js","redux/actions/insuranceActions.js","redux/sagas/insuranceSagas.js","redux/actions/feedbackActions.js","redux/sagas/feedbackSagas.js","redux/actions/searchTermActions.js","redux/sagas/searchTermSagas.js","redux/sagas/rootSaga.js","redux/reducers/initialState.js","redux/reducers/serviceReducer.js","redux/reducers/authReducers.js","redux/reducers/categoryReducer.js","redux/reducers/insuranceReducer.js","redux/reducers/feedbackReducers.js","redux/reducers/searchTermReducers.js","redux/reducers/rootReducer.js","CardTemplate.jsx","listService.jsx","home.jsx","newService.jsx","login.jsx","editService.jsx","category.jsx","subcategory.jsx","insurance.jsx","listServiceSuggestion.jsx","listReportedError.jsx","listSearchTerm.jsx","index.jsx","App.js","serviceWorker.js","index.js"],"names":["CREATE_PRIMARY_CATEGORY_REQUEST","CREATE_PRIMARY_CATEGORY_SUCCESS","CREATE_PRIMARY_CATEGORY_FAILURE","GET_PRIMARY_CATEGORY_REQUEST","GET_PRIMARY_CATEGORY_SUCCESS","GET_PRIMARY_CATEGORY_FAILURE","UPDATE_PRIMARY_CATEGORY_REQUEST","UPDATE_PRIMARY_CATEGORY_SUCCESS","UPDATE_PRIMARY_CATEGORY_FAILURE","DELETE_PRIMARY_CATEGORY_REQUEST","DELETE_PRIMARY_CATEGORY_SUCCESS","DELETE_PRIMARY_CATEGORY_FAILURE","CREATE_SUBCATEGORY_REQUEST","CREATE_SUBCATEGORY_SUCCESS","CREATE_SUBCATEGORY_FAILURE","GET_SUBCATEGORY_REQUEST","GET_SUBCATEGORY_SUCCESS","GET_SUBCATEGORY_FAILURE","UPDATE_SUBCATEGORY_REQUEST","UPDATE_SUBCATEGORY_SUCCESS","UPDATE_SUBCATEGORY_FAILURE","DELETE_SUBCATEGORY_REQUEST","DELETE_SUBCATEGORY_SUCCESS","DELETE_SUBCATEGORY_FAILURE","CREATE_INSURANCE_REQUEST","CREATE_INSURANCE_SUCCESS","CREATE_INSURANCE_FAILURE","GET_INSURANCE_REQUEST","GET_INSURANCE_SUCCESS","GET_INSURANCE_FAILURE","UPDATE_INSURANCE_REQUEST","UPDATE_INSURANCE_SUCCESS","UPDATE_INSURANCE_FAILURE","DELETE_INSURANCE_REQUEST","DELETE_INSURANCE_SUCCESS","DELETE_INSURANCE_FAILURE","CREATE_SERVICE_REQUEST","CREATE_SERVICE_SUCCESS","CREATE_SERVICE_FAILURE","GET_SERVICE_REQUEST","GET_SERVICE_SUCCESS","GET_SERVICE_FAILURE","EDIT_SERVICE_REQUEST","EDIT_SERVICE_SUCCESS","EDIT_SERVICE_FAILURE","DELETE_SERVICE_REQUEST","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_FAILURE","GET_REPORTED_ERROR_REQUEST","GET_REPORTED_ERROR_SUCCESS","GET_REPORTED_ERROR_FAILURE","DELETE_REPORTED_ERROR_REQUEST","DELETE_REPORTED_ERROR_SUCCESS","DELETE_REPORTED_ERROR_FAILURE","GET_SEARCH_TERM_REQUEST","GET_SEARCH_TERM_SUCCESS","GET_SEARCH_TERM_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","GET_AUTH_REQUEST","GET_AUTH_SUCCESS","GET_AUTH_FAILURE","serviceActions","createServiceRequest","payload","type","actionConstants","createServiceSuccess","createServiceFailure","getServiceRequest","getServiceSuccess","getServiceFailure","editServiceRequest","editServiceSuccess","editServiceFailure","deleteServiceRequest","deleteServiceSuccess","deleteServiceFailure","watchCreateService","workerCreateService","watchGetService","workerGetService","watchEditService","workerEditService","watchDeleteService","workerDeleteService","base_url","process","getCookie","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","takeLatest","params","call","createService","response","status","put","message","window","location","href","a","fetch","credentials","method","body","JSON","stringify","headers","resp","json","respBody","getService","editService","serviceId","deleteService","authActions","signInRequest","signInSuccess","signInFailure","error","getAuthRequest","getAuthSuccess","getAuthFailure","signOutRequest","signOutSuccess","signOutFailure","watchSignIn","workerSignIn","watchSignOut","workerSignOut","watchGetAuth","workerGetAuth","signIn","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","token","signOut","getAuth","email","categoryActions","createPrimaryCategoryRequest","createPrimaryCategorySuccess","createPrimaryCategoryFailure","getPrimaryCategoryRequest","getPrimaryCategorySuccess","getPrimaryCategoryFailure","updatePrimaryCategoryRequest","updatePrimaryCategorySuccess","updatePrimaryCategoryFailure","deletePrimaryCategoryRequest","deletePrimaryCategorySuccess","deletePrimaryCategoryFailure","createSubcategoryRequest","createSubcategorySuccess","createSubcategoryFailure","getSubcategoryRequest","getSubcategorySuccess","getSubcategoryFailure","updateSubcategoryRequest","updateSubcategorySuccess","updateSubcategoryFailure","deleteSubcategoryRequest","deleteSubcategorySuccess","deleteSubcategoryFailure","watchCreatePrimaryCategory","workerCreatePrimaryCategory","watchGetPrimaryCategory","workerGetPrimaryCategory","watchUpdatePrimaryCategory","workerUpdatePrimaryCategory","watchDeletePrimaryCategory","workerDeletePrimaryCategory","watchCreateSubcategory","workerCreateSubcategory","watchGetSubcategory","workerGetSubcategory","watchUpdateSubcategory","workerUpdateSubcategory","watchDeleteSubcategory","workerDeleteSubcategory","createPrimaryCategory","getPrimaryCategory","updatePrimaryCategory","cat_id","deletePrimaryCategory","createSubcategory","getSubcategory","updateSubcategory","subcat_id","deleteSubcategory","insuranceActions","createInsuranceRequest","createInsuranceSuccess","createInsuranceFailure","getInsuranceRequest","getInsuranceSuccess","getInsuranceFailure","updateInsuranceRequest","updateInsuranceSuccess","updateInsuranceFailure","deleteInsuranceRequest","deleteInsuranceSuccess","deleteInsuranceFailure","watchCreateInsurance","workerCreateInsurance","watchGetInsurance","workerGetInsurance","watchUpdateInsurance","workerUpdateInsurance","watchDeleteInsurance","workerDeleteInsurance","createInsurance","getInsurance","updateInsurance","deleteInsurance","feedbackActions","getReportedErrorRequest","getReportedErrorSuccess","getReportedErrorFailure","deleteReportedErrorRequest","deleteReportedErrorSuccess","deleteReportedErrorFailure","watchGetReportedError","workerGetReportedError","watchDeleteReportedError","workerDeleteReportedError","getReportedError","deleteReportedError","Id","searchTermActions","getSearchTermRequest","getSearchTermSuccess","getSearchTermFailure","watchGetSearchTerm","workerGetSearchTerm","getSearchTerm","rootSaga","all","serviceInitialState","primary_category","subcategory","insurance","service","listing","newEdit","authInitialState","loggedin","authMessage","authError","loggedInUser","loadingSignIn","loadingSignUp","loadingSignOut","categoryInitialState","insuranceInitialState","feedbackInitialState","searchTermInitialState","test","state","action","newService","filter","item","service_id","auth","category","concat","newPrimaryCategory","index","findIndex","newSubcategory","newInsurance","insur_id","feedback","reported_Error","newReported_Error","id","searchTerm","Search_Term","history","combineReducers","router","connectRouter","serviceReducer","categoryReducer","insuranceReducer","feedbackReducer","searchTermReducers","Panel","Collapse","CardTemplateComponent","props","this","pageBelonging","bordered","header","style","border","onClick","dispatch","approveBy","to","className","moment","last_verified","format","cat_name","map","key","subcat_name","insur_name","languages_spoken","adress","lat","lon","transit","website","phone_num","emergency_num","drop_in","services","services_fr","notes","notes_fr","verified_by","hours","React","Component","NewCardTemplateComponent","withRouter","connect","Search","Input","ListServiceClass","placeholder","onChange","event","setState","target","console","log","lowerCaseFilter","toLowerCase","ListService","HomeClass","countSuggestionService","suggestionServiceNumber","countReportedError","reportedErrorNumber","content","prevProps","count","Home","Option","Select","TextArea","InputGroup","Group","NewServiceClass","handleClose","removedTag","newTags","tags","tag","showInput","inputVisible","input","focus","handleInputChange","e","inputValue","handleInputConfirm","saveInputRefLang","inputlang","saveInputRefServices","inputservices","saveInputRefServicesFr","inputservicesFr","handleSubmit","preventDefault","form","validateFields","err","values","getHours","hours_sun","hours_mon","hours_tue","hours_wed","hours_thu","hours_fri","hours_sat","alert","lang","join","servicesFr","detail","time","parsed","start","isNaN","end","last","parseTime","getFieldDecorator","onSubmit","Item","label","mode","cat","insur","closable","onClose","ref","size","width","onBlur","onPressEnter","background","borderStyle","rows","initialValue","compact","htmlType","ServiceForm","Form","create","NewService","LogInClass","password","rules","required","prefix","color","loading","LogInForm","LogIn","EditServiceClass","Array","isArray","match","push","currentService","languages","Service","Services_fr","Object","keys","currentServiceSetUp","prevState","address","back","EditServiceForm","EditService","EditableContext","createContext","EditableFormRow","Provider","EditableCell","editing","toggleEdit","save","record","handleSave","currentTarget","renderCell","children","dataIndex","title","margin","node","paddingRight","editable","restProps","Consumer","EditableTable","handleDelete","dataSource","handleAdd","newData","adding","row","splice","columns","render","text","onConfirm","components","cell","col","onCell","marginBottom","rowClassName","pagination","TableComponent","Category","changePrimaryCategory","pc_id","defaultValue","pc","Insurance","reload","ListReportedErrorClass","ListReportedError","Column","Table","ListSearchTermClass","formatedSearchTerms","formatedSearchTerm","forEach","searchTermData","data","frequency","ListSearchTerm","Header","Layout","Content","Sider","createBrowserHistory","basename","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","subscribe","getState","IndexClass","backHome","countSearchTerm","display","float","marginRight","marginLeft","minHeight","align","fontSize","showButton","exact","path","component","Login","ListServiceSuggestion","Subcategory","Index","App","locale","en_US","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c81910b9.chunk.js","sourcesContent":["export default {\r\n    CREATE_PRIMARY_CATEGORY_REQUEST: \"CREATE_PRIMARY_CATEGORY_REQUEST\",\r\n    CREATE_PRIMARY_CATEGORY_SUCCESS: \"CREATE_PRIMARY_CATEGORY_SUCCESS\",\r\n    CREATE_PRIMARY_CATEGORY_FAILURE: \"CREATE_PRIMARY_CATEGORY_FAILURE\",\r\n    \r\n    GET_PRIMARY_CATEGORY_REQUEST: \"GET_PRIMARY_CATEGORY_REQUEST\",\r\n    GET_PRIMARY_CATEGORY_SUCCESS: \"GET_PRIMARY_CATEGORY_SUCCESS\",\r\n    GET_PRIMARY_CATEGORY_FAILURE: \"GET_PRIMARY_CATEGORY_FAILURE\",\r\n\r\n    UPDATE_PRIMARY_CATEGORY_REQUEST: \"UPDATE_PRIMARY_CATEGORY_REQUEST\",\r\n    UPDATE_PRIMARY_CATEGORY_SUCCESS: \"UPDATE_PRIMARY_CATEGORY_SUCCESS\",\r\n    UPDATE_PRIMARY_CATEGORY_FAILURE: \"UPDATE_PRIMARY_CATEGORY_FAILURE\",\r\n\r\n    DELETE_PRIMARY_CATEGORY_REQUEST: \"DELETE_PRIMARY_CATEGORY_REQUEST\",\r\n    DELETE_PRIMARY_CATEGORY_SUCCESS: \"DELETE_PRIMARY_CATEGORY_SUCCESS\",\r\n    DELETE_PRIMARY_CATEGORY_FAILURE: \"DELETE_PRIMARY_CATEGORY_FAILURE\",\r\n\r\n    CREATE_SUBCATEGORY_REQUEST: \"CREATE_SUBCATEGORY_REQUEST\",\r\n    CREATE_SUBCATEGORY_SUCCESS: \"CREATE_SUBCATEGORY_SUCCESS\",\r\n    CREATE_SUBCATEGORY_FAILURE: \"CREATE_SUBCATEGORY_FAILURE\",\r\n\r\n    GET_SUBCATEGORY_REQUEST: \"GET_SUBCATEGORY_REQUEST\",\r\n    GET_SUBCATEGORY_SUCCESS: \"GET_SUBCATEGORY_SUCCESS\",\r\n    GET_SUBCATEGORY_FAILURE: \"GET_SUBCATEGORY_FAILURE\",\r\n\r\n    UPDATE_SUBCATEGORY_REQUEST: \"UPDATE_SUBCATEGORY_REQUEST\",\r\n    UPDATE_SUBCATEGORY_SUCCESS: \"UPDATE_SUBCATEGORY_SUCCESS\",\r\n    UPDATE_SUBCATEGORY_FAILURE: \"UPDATE_SUBCATEGORY_FAILURE\",\r\n\r\n    DELETE_SUBCATEGORY_REQUEST: \"DELETE_SUBCATEGORY_REQUEST\",\r\n    DELETE_SUBCATEGORY_SUCCESS: \"DELETE_SUBCATEGORY_SUCCESS\",\r\n    DELETE_SUBCATEGORY_FAILURE: \"DELETE_SUBCATEGORY_FAILURE\",\r\n\r\n    CREATE_INSURANCE_REQUEST: \"CREATE_INSURANCE_REQUEST\",\r\n    CREATE_INSURANCE_SUCCESS: \"CREATE_INSURANCE_SUCCESS\",\r\n    CREATE_INSURANCE_FAILURE: \"CREATE_INSURANCE_FAILURE\",\r\n\r\n    GET_INSURANCE_REQUEST: \"GET_INSURANCE_REQUEST\",\r\n    GET_INSURANCE_SUCCESS: \"GET_INSURANCE_SUCCESS\",\r\n    GET_INSURANCE_FAILURE: \"GET_INSURANCE_FAILURE\",\r\n\r\n    UPDATE_INSURANCE_REQUEST: \"UPDATE_INSURANCE_REQUEST\",\r\n    UPDATE_INSURANCE_SUCCESS: \"UPDATE_INSURANCE_SUCCESS\",\r\n    UPDATE_INSURANCE_FAILURE: \"UPDATE_INSURANCE_FAILURE\",\r\n\r\n    DELETE_INSURANCE_REQUEST: \"DELETE_INSURANCE_REQUEST\",\r\n    DELETE_INSURANCE_SUCCESS: \"DELETE_INSURANCE_SUCCESS\",\r\n    DELETE_INSURANCE_FAILURE: \"DELETE_INSURANCE_FAILURE\",\r\n\r\n    CREATE_SERVICE_REQUEST: \"CREATE_SERVICE_REQUEST\",\r\n    CREATE_SERVICE_SUCCESS: \"CREATE_SERVICE_SUCCESS\",\r\n    CREATE_SERVICE_FAILURE: \"CREATE_SERVICE_FAILURE\",\r\n\r\n    GET_SERVICE_REQUEST: \"GET_SERVICE_REQUEST\",\r\n    GET_SERVICE_SUCCESS: \"GET_SERVICE_SUCCESS\",\r\n    GET_SERVICE_FAILURE: \"GET_SERVICE_FAILURE\",\r\n\r\n    EDIT_SERVICE_REQUEST: \"EDIT_SERVICE_REQUEST\",\r\n    EDIT_SERVICE_SUCCESS: \"EDIT_SERVICE_SUCCESS\",\r\n    EDIT_SERVICE_FAILURE: \"EDIT_SERVICE_FAILURE\", \r\n\r\n    DELETE_SERVICE_REQUEST: \"DELETE_SERVICE_REQUEST\",\r\n    DELETE_SERVICE_SUCCESS: \"DELETE_SERVICE_SUCCESS\",\r\n    DELETE_SERVICE_FAILURE: \"DELETE_SERVICE_FAILURE\",\r\n    \r\n    GET_REPORTED_ERROR_REQUEST: \"GET_REPORTED_ERROR_REQUEST\",\r\n    GET_REPORTED_ERROR_SUCCESS: \"GET_REPORTED_ERROR_SUCCESS\",\r\n    GET_REPORTED_ERROR_FAILURE: \"GET_REPORTED_ERROR_FAILURE\",\r\n\r\n    DELETE_REPORTED_ERROR_REQUEST: \"DELETE_REPORTED_ERROR_REQUEST\",\r\n    DELETE_REPORTED_ERROR_SUCCESS: \"DELETE_REPORTED_ERROR_SUCCESS\",\r\n    DELETE_REPORTED_ERROR_FAILURE: \"DELETE_REPORTED_ERROR_FAILURE\",\r\n\r\n    GET_SEARCH_TERM_REQUEST: \"GET_SEARCH_TERM_REQUEST\",\r\n    GET_SEARCH_TERM_SUCCESS: \"GET_SEARCH_TERM_SUCCESS\",\r\n    GET_SEARCH_TERM_FAILURE: \"GET_SEARCH_TERM_FAILURE\",\r\n\r\n    // Auth\r\n    SIGN_IN_REQUEST: 'SIGN_IN_REQUEST',\r\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\r\n    SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\r\n\r\n    SIGN_OUT_REQUEST: 'SIGN_OUT_REQUEST',\r\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\r\n    SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\r\n\r\n    GET_AUTH_REQUEST: 'GET_AUTH_REQUEST',\r\n    GET_AUTH_SUCCESS: 'GET_AUTH_SUCCESS',\r\n    GET_AUTH_FAILURE: 'GET_AUTH_FAILURE',\r\n\r\n\r\n}","import actionConstants from \"../actionConstants\";\r\n\r\nexport const serviceActions = {\r\n    createServiceRequest, createServiceSuccess, createServiceFailure,\r\n    getServiceRequest, getServiceSuccess, getServiceFailure,\r\n    editServiceRequest, editServiceSuccess, editServiceFailure,\r\n    deleteServiceRequest, deleteServiceSuccess, deleteServiceFailure\r\n};\r\n\r\n// Create service\r\nfunction createServiceRequest(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_SERVICE_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction createServiceSuccess(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_SERVICE_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction createServiceFailure(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_SERVICE_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Get service\r\nfunction getServiceRequest(payload) {\r\n    return {\r\n        type: actionConstants.GET_SERVICE_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getServiceSuccess(payload) {\r\n    return {\r\n        type: actionConstants.GET_SERVICE_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getServiceFailure(payload) {\r\n    return {\r\n        type: actionConstants.GET_SERVICE_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n//Edit service\r\nfunction editServiceRequest(payload) {\r\n    return {\r\n        type: actionConstants.EDIT_SERVICE_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction editServiceSuccess(payload) {\r\n    return {\r\n        type: actionConstants.EDIT_SERVICE_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction editServiceFailure(payload) {\r\n    return {\r\n        type: actionConstants.EDIT_SERVICE_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n//Delete Service\r\nfunction deleteServiceRequest(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_SERVICE_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deleteServiceSuccess(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_SERVICE_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deleteServiceFailure(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_SERVICE_FAILURE,\r\n        payload\r\n    }\r\n}","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport actionConstants from \"../actionConstants\";\r\nimport { serviceActions } from \"../actions/serviceActions\";\r\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\r\n\r\nfunction getCookie() {\r\n            var nameEQ = \"token\" + \"=\";\r\n            var ca = document.cookie.split(';');\r\n            for(var i=0;i < ca.length;i++) {\r\n                var c = ca[i];\r\n                while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n                if (c.indexOf(nameEQ) == 0){\r\n                    return c.substring(nameEQ.length,c.length);\r\n                } \r\n            }\r\n            return null;\r\n}\r\n\r\n// Get primary cat\r\nexport function* watchGetPrimaryCategory() {\r\n    yield takeLatest(actionConstants.GET_PRIMARY_CATEGORY_REQUEST, workerGetPrimaryCategory);\r\n}\r\nfunction* workerGetPrimaryCategory(params) {\r\n    try {\r\n        const response = yield call(getPrimaryCategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(serviceActions.getPrimaryCategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(serviceActions.getPrimaryCategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(serviceActions.getPrimaryCategoryFailure(err));\r\n    }\r\n}\r\nasync function getPrimaryCategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/primary_category`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Get subcat\r\nexport function* watchGetSubcategory() {\r\n    yield takeLatest(actionConstants.GET_SUBCATEGORY_REQUEST, workerGetSubcategory);\r\n}\r\nfunction* workerGetSubcategory(params) {\r\n    try {\r\n        const response = yield call(getSubcategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(serviceActions.getSubcategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(serviceActions.getSubcategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(serviceActions.getSubcategoryFailure(err));\r\n    }\r\n}\r\nasync function getSubcategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/subcategory`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Get insurance\r\nexport function* watchGetInsurance() {\r\n    yield takeLatest(actionConstants.GET_INSURANCE_REQUEST, workerGetInsurance);\r\n}\r\nfunction* workerGetInsurance(params) {\r\n    try {\r\n        const response = yield call(getInsurance, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(serviceActions.getInsuranceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(serviceActions.getInsuranceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(serviceActions.getInsuranceFailure(err));\r\n    }\r\n}\r\nasync function getInsurance(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/insurance`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Create service\r\nexport function* watchCreateService() {\r\n    yield takeLatest(actionConstants.CREATE_SERVICE_REQUEST, workerCreateService);\r\n}\r\nfunction* workerCreateService(params) {\r\n    try {\r\n        const response = yield call(createService, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(serviceActions.createServiceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(serviceActions.createServiceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(serviceActions.createServiceFailure(err));\r\n    }\r\n}\r\nasync function createService(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/service`, {\r\n            credentials: \"same-origin\",\r\n            method: \"post\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Get service\r\nexport function* watchGetService() {\r\n    yield takeLatest(actionConstants.GET_SERVICE_REQUEST, workerGetService);\r\n}\r\nfunction* workerGetService(params) {\r\n    try {\r\n        const response = yield call(getService, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(serviceActions.getServiceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(serviceActions.getServiceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(serviceActions.getServiceFailure(err));\r\n    }\r\n}\r\nasync function getService(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/services`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Edit service\r\nexport function* watchEditService() {\r\n    yield takeLatest(actionConstants.EDIT_SERVICE_REQUEST, workerEditService);\r\n}\r\nfunction* workerEditService(params) {\r\n    try {\r\n        const response = yield call(editService, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(serviceActions.editServiceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(serviceActions.editServiceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(serviceActions.editServiceFailure(err));\r\n    }\r\n}\r\nasync function editService(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/service/${payload.serviceId}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"put\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Delete service\r\nexport function* watchDeleteService() {\r\n    yield takeLatest(actionConstants.DELETE_SERVICE_REQUEST, workerDeleteService);\r\n}\r\nfunction* workerDeleteService(params) {\r\n    try {\r\n        const response = yield call(deleteService, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(serviceActions.deleteServiceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(serviceActions.deleteServiceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(serviceActions.deleteServiceFailure(err));\r\n    }\r\n}\r\nasync function deleteService(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/service/${payload.serviceId}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"delete\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}","import actionConstants from \"../actionConstants\";\r\nexport const authActions = {\r\n    signInRequest, signInSuccess, signInFailure,\r\n    getAuthRequest, getAuthSuccess, getAuthFailure,\r\n    signOutRequest, signOutSuccess, signOutFailure,\r\n};\r\n\r\n\r\n//Sign in\r\nfunction signInRequest(payload) {\r\n    return { \r\n        type: actionConstants.SIGN_IN_REQUEST, \r\n        payload\r\n    } \r\n}\r\nfunction signInSuccess(payload) {\r\n    return { \r\n        type: actionConstants.SIGN_IN_SUCCESS, \r\n        payload\r\n    } \r\n}\r\nfunction signInFailure(error) {\r\n    return { \r\n        type: actionConstants.SIGN_IN_FAILURE, \r\n        error\r\n    } \r\n}\r\n    \r\n//Get auth\r\nfunction getAuthRequest() {\r\n    return { \r\n        type: actionConstants.GET_AUTH_REQUEST, \r\n    }\r\n}\r\nfunction getAuthSuccess(payload) {\r\n    return { \r\n        type: actionConstants.GET_AUTH_SUCCESS,\r\n        payload,\r\n    } \r\n}\r\nfunction getAuthFailure(error) {\r\n    return { \r\n        type: actionConstants.GET_AUTH_FAILURE, \r\n        error\r\n    } \r\n}\r\n\r\n//Sign out\r\nfunction signOutRequest() {\r\n    return {\r\n        type: actionConstants.SIGN_OUT_REQUEST\r\n    }\r\n}\r\nfunction signOutSuccess() {\r\n    return { \r\n        type: actionConstants.SIGN_OUT_SUCCESS\r\n    } \r\n}\r\nfunction signOutFailure(error) {\r\n    return { \r\n        type: actionConstants.SIGN_OUT_FAILURE,\r\n        error\r\n    } \r\n}\r\n\r\n","import 'whatwg-fetch';\r\nimport { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport  actionConstants from '../actionConstants';\r\nimport { authActions } from '../actions/authActions';\r\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\r\n\r\nfunction getCookie() {\r\n    var nameEQ = \"token\" + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for(var i=0;i < ca.length;i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n        if (c.indexOf(nameEQ) == 0){\r\n            return c.substring(nameEQ.length,c.length);\r\n        } \r\n    }\r\n    return null;\r\n}\r\n\r\n// Sign in\r\nexport function* watchSignIn() {\r\n    yield takeLatest(actionConstants.SIGN_IN_REQUEST, workerSignIn);\r\n}\r\n\r\n// Make signIn API request and check if email/password are correct\r\nasync function signIn(payload) {\r\n     \r\n    try {\r\n        let resp = await fetch(`${base_url}/signin`, {\r\n            credentials: \"same-origin\",\r\n            method: 'post',\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n            }\r\n        })\r\n        let status = resp.status;\r\n        let respBody = await resp.json();\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch (err) {\r\n        return err;\r\n    }\r\n    \r\n  \r\n}\r\n\r\nfunction setCookie(name,value,days) {\r\n    var expires = \"\";\r\n    if (days) {\r\n        var date = new Date();\r\n        date.setTime(date.getTime() + (days*24*60*60*1000));\r\n        expires = \"; expires=\" + date.toUTCString();\r\n    }\r\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=\" + process.env.REACT_APP_BASE_URL + (process.env.REACT_APP_BASE_NAME || \"\");\r\n}\r\n\r\n// Make the api call when watcher saga sees the action\r\nfunction* workerSignIn(params) {\r\n    try {\r\n\r\n        const response = yield call(signIn, params.payload);\r\n\r\n        // dispatch a success action to the store \r\n        if (response.status == 200) {\r\n            setCookie('token', response.message.token, 60); \r\n            yield put(authActions.signInSuccess(response.message));\r\n        }\r\n        else {\r\n            yield put(authActions.signInFailure(response.message));\r\n        }\r\n    } \r\n    catch (error) {\r\n        // dispatch a failure action to the store with the error\r\n        yield put(authActions.signInFailure(error));\r\n    }\r\n}\r\n\r\n// Sign out\r\nexport function* watchSignOut() {\r\n    yield takeLatest(actionConstants.SIGN_OUT_REQUEST, workerSignOut);\r\n}\r\n\r\nasync function signOut() {\r\n    try {\r\n        let resp = await fetch(`${base_url}/logout`, {\r\n            credentials: \"same-origin\",\r\n            method: 'get',  \r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        if (resp.status == 200) {\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + '/';\r\n            document.cookie =  `token=; expires=${new Date()}; path=${process.env.REACT_APP_BASE_NAME || \"/\"};`;\r\n        }\r\n        return resp;\r\n    }\r\n    catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Make the api call when watcher saga sees the action\r\nfunction* workerSignOut() {\r\n    const response = yield call(signOut);\r\n    \r\n    try {\r\n        if (response.status == 200) {\r\n            yield put(authActions.signOutSuccess());\r\n        } else {\r\n            yield put(authActions.signOutFailure(response.message.error));\r\n        }\r\n    } \r\n    catch (error) {\r\n        yield put(authActions.signOutFailure(error));\r\n    }\r\n}\r\n\r\n//Get authentication info\r\nexport function* watchGetAuth() {\r\n    yield takeLatest(actionConstants.GET_AUTH_REQUEST, workerGetAuth);\r\n}\r\n\r\nasync function getAuth() {\r\n    try {\r\n        let resp = await fetch(`${base_url}/auth`, {\r\n            credentials: \"same-origin\",\r\n            method: 'post',\r\n            body: JSON.stringify({type: \"getUserInfo\"}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            },\r\n        });\r\n        let respBody = await resp.json();\r\n        return respBody.email;\r\n    }\r\n    catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Make the api call when watcher saga sees the action\r\nfunction* workerGetAuth() {\r\n    try {\r\n        //Get auth status and username\r\n        const response = yield call(getAuth);\r\n        if(response){\r\n            yield put(authActions.getAuthSuccess(response));\r\n        }\r\n        else {\r\n            yield put(authActions.getAuthFailure(\"Error in Authentication\"));\r\n        }\r\n       \r\n    } \r\n    catch (error) {\r\n        // dispatch a failure action to the store with the error\r\n        yield put(authActions.getAuthFailure(error));\r\n    }\r\n}\r\n","import actionConstants from \"../actionConstants\";\r\n\r\nexport const categoryActions = {\r\n    createPrimaryCategoryRequest, createPrimaryCategorySuccess, createPrimaryCategoryFailure,\r\n    getPrimaryCategoryRequest, getPrimaryCategorySuccess, getPrimaryCategoryFailure,\r\n    updatePrimaryCategoryRequest, updatePrimaryCategorySuccess, updatePrimaryCategoryFailure,\r\n    deletePrimaryCategoryRequest, deletePrimaryCategorySuccess, deletePrimaryCategoryFailure,\r\n\r\n    createSubcategoryRequest, createSubcategorySuccess, createSubcategoryFailure,\r\n    getSubcategoryRequest, getSubcategorySuccess, getSubcategoryFailure,\r\n    updateSubcategoryRequest, updateSubcategorySuccess, updateSubcategoryFailure,\r\n    deleteSubcategoryRequest, deleteSubcategorySuccess, deleteSubcategoryFailure,\r\n};\r\n\r\n// Create primary category\r\nfunction createPrimaryCategoryRequest(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction createPrimaryCategorySuccess(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction createPrimaryCategoryFailure(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Get primary category\r\nfunction getPrimaryCategoryRequest(payload) {\r\n    return {\r\n        type: actionConstants.GET_PRIMARY_CATEGORY_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getPrimaryCategorySuccess(payload) {\r\n    return {\r\n        type: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getPrimaryCategoryFailure(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Update primary category\r\nfunction updatePrimaryCategoryRequest(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction updatePrimaryCategorySuccess(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction updatePrimaryCategoryFailure(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Delete primary category\r\nfunction deletePrimaryCategoryRequest(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deletePrimaryCategorySuccess(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deletePrimaryCategoryFailure(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Create subcategory\r\nfunction createSubcategoryRequest(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_SUBCATEGORY_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction createSubcategorySuccess(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_SUBCATEGORY_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction createSubcategoryFailure(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_SUBCATEGORY_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Get subcategory\r\nfunction getSubcategoryRequest(payload) {\r\n    return {\r\n        type: actionConstants.GET_SUBCATEGORY_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getSubcategorySuccess(payload) {\r\n    return {\r\n        type: actionConstants.GET_SUBCATEGORY_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getSubcategoryFailure(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Update subcategory\r\nfunction updateSubcategoryRequest(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_SUBCATEGORY_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction updateSubcategorySuccess(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_SUBCATEGORY_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction updateSubcategoryFailure(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Delete subcategory\r\nfunction deleteSubcategoryRequest(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_SUBCATEGORY_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deleteSubcategorySuccess(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_SUBCATEGORY_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deleteSubcategoryFailure(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_SUBCATEGORY_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport actionConstants from \"../actionConstants\";\r\nimport { categoryActions } from \"../actions/categoryActions\";\r\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\r\n\r\nfunction getCookie() {\r\n    var nameEQ = \"token\" + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for(var i=0;i < ca.length;i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n        if (c.indexOf(nameEQ) == 0){\r\n            return c.substring(nameEQ.length,c.length);\r\n        } \r\n    }\r\n    return null;\r\n}\r\n\r\n// Create primary cat\r\nexport function* watchCreatePrimaryCategory() {\r\n    yield takeLatest(actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST, workerCreatePrimaryCategory);\r\n}\r\nfunction* workerCreatePrimaryCategory(params) {\r\n    try {\r\n        const response = yield call(createPrimaryCategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(categoryActions.createPrimaryCategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(categoryActions.createPrimaryCategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(categoryActions.createPrimaryCategoryFailure(err));\r\n    }\r\n}\r\nasync function createPrimaryCategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/primary_category`, {\r\n            credentials: \"same-origin\",\r\n            method: \"post\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Get primary cat\r\nexport function* watchGetPrimaryCategory() {\r\n    yield takeLatest(actionConstants.GET_PRIMARY_CATEGORY_REQUEST, workerGetPrimaryCategory);\r\n}\r\nfunction* workerGetPrimaryCategory(params) {\r\n    try {\r\n        const response = yield call(getPrimaryCategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(categoryActions.getPrimaryCategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(categoryActions.getPrimaryCategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(categoryActions.getPrimaryCategoryFailure(err));\r\n    }\r\n}\r\nasync function getPrimaryCategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/primary_category`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Update primary cat\r\nexport function* watchUpdatePrimaryCategory() {\r\n    yield takeLatest(actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST, workerUpdatePrimaryCategory);\r\n}\r\nfunction* workerUpdatePrimaryCategory(params) {\r\n    try {\r\n        const response = yield call(updatePrimaryCategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(categoryActions.updatePrimaryCategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(categoryActions.updatePrimaryCategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(categoryActions.updatePrimaryCategoryFailure(err));\r\n    }\r\n}\r\nasync function updatePrimaryCategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/primary_category/${payload.cat_id}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"put\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Delete primary cat\r\nexport function* watchDeletePrimaryCategory() {\r\n    yield takeLatest(actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST, workerDeletePrimaryCategory);\r\n}\r\nfunction* workerDeletePrimaryCategory(params) {\r\n    try {\r\n        const response = yield call(deletePrimaryCategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(categoryActions.deletePrimaryCategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\r\n        }\r\n        else {\r\n            yield put(categoryActions.deletePrimaryCategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(categoryActions.deletePrimaryCategoryFailure(err));\r\n    }\r\n}\r\nasync function deletePrimaryCategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/primary_category/${payload}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"delete\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Create subcat\r\nexport function* watchCreateSubcategory() {\r\n    yield takeLatest(actionConstants.CREATE_SUBCATEGORY_REQUEST, workerCreateSubcategory);\r\n}\r\nfunction* workerCreateSubcategory(params) {\r\n    try {\r\n        const response = yield call(createSubcategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(categoryActions.createSubcategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\r\n        }\r\n        else {\r\n            yield put(categoryActions.createSubcategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(categoryActions.createSubcategoryFailure(err));\r\n    }\r\n}\r\nasync function createSubcategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/subcategory`, {\r\n            credentials: \"same-origin\",\r\n            method: \"post\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Get subcat\r\nexport function* watchGetSubcategory() {\r\n    yield takeLatest(actionConstants.GET_SUBCATEGORY_REQUEST, workerGetSubcategory);\r\n}\r\nfunction* workerGetSubcategory(params) {\r\n    try {\r\n        const response = yield call(getSubcategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(categoryActions.getSubcategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\r\n        }\r\n        else {\r\n            yield put(categoryActions.getSubcategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(categoryActions.getSubcategoryFailure(err));\r\n    }\r\n}\r\nasync function getSubcategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/subcategory`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Update subcat\r\nexport function* watchUpdateSubcategory() {\r\n    yield takeLatest(actionConstants.UPDATE_SUBCATEGORY_REQUEST, workerUpdateSubcategory);\r\n}\r\nfunction* workerUpdateSubcategory(params) {\r\n    try {\r\n        const response = yield call(updateSubcategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(categoryActions.updateSubcategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\r\n        }\r\n        else {\r\n            yield put(categoryActions.updateSubcategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(categoryActions.updateSubcategoryFailure(err));\r\n    }\r\n}\r\nasync function updateSubcategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/subcategory/${payload.subcat_id}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"put\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Delete subcat\r\nexport function* watchDeleteSubcategory() {\r\n    yield takeLatest(actionConstants.DELETE_SUBCATEGORY_REQUEST, workerDeleteSubcategory);\r\n}\r\nfunction* workerDeleteSubcategory(params) {\r\n    try {\r\n        const response = yield call(deleteSubcategory, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(categoryActions.deleteSubcategorySuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\r\n        }\r\n        else {\r\n            yield put(categoryActions.deleteSubcategoryFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(categoryActions.deleteSubcategoryFailure(err));\r\n    }\r\n}\r\nasync function deleteSubcategory(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/subcategory/${payload}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"delete\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n","import actionConstants from \"../actionConstants\";\r\n\r\nexport const insuranceActions = {\r\n    createInsuranceRequest, createInsuranceSuccess, createInsuranceFailure,\r\n    getInsuranceRequest, getInsuranceSuccess, getInsuranceFailure,\r\n    updateInsuranceRequest, updateInsuranceSuccess, updateInsuranceFailure,\r\n    deleteInsuranceRequest, deleteInsuranceSuccess, deleteInsuranceFailure,\r\n};\r\n\r\n// Create insurance\r\nfunction createInsuranceRequest(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_INSURANCE_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction createInsuranceSuccess(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_INSURANCE_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction createInsuranceFailure(payload) {\r\n    return {\r\n        type: actionConstants.CREATE_INSURANCE_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Get insurance\r\nfunction getInsuranceRequest(payload) {\r\n    return {\r\n        type: actionConstants.GET_INSURANCE_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getInsuranceSuccess(payload) {\r\n    return {\r\n        type: actionConstants.GET_INSURANCE_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getInsuranceFailure(payload) {\r\n    return {\r\n        type: actionConstants.GET_INSURANCE_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Update insurance\r\nfunction updateInsuranceRequest(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_INSURANCE_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction updateInsuranceSuccess(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_INSURANCE_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction updateInsuranceFailure(payload) {\r\n    return {\r\n        type: actionConstants.UPDATE_INSURANCE_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Delete insurance\r\nfunction deleteInsuranceRequest(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_INSURANCE_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deleteInsuranceSuccess(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_INSURANCE_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deleteInsuranceFailure(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_INSURANCE_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport actionConstants from \"../actionConstants\";\r\nimport { insuranceActions } from \"../actions/insuranceActions\";\r\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\r\n\r\nfunction getCookie() {\r\n    var nameEQ = \"token\" + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for(var i=0;i < ca.length;i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n        if (c.indexOf(nameEQ) == 0){\r\n            return c.substring(nameEQ.length,c.length);\r\n        } \r\n    }\r\n    return null;\r\n}\r\n\r\n// Create subcat\r\nexport function* watchCreateInsurance() {\r\n    yield takeLatest(actionConstants.CREATE_INSURANCE_REQUEST, workerCreateInsurance);\r\n}\r\nfunction* workerCreateInsurance(params) {\r\n    try {\r\n        const response = yield call(createInsurance, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(insuranceActions.createInsuranceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\r\n        }\r\n        else {\r\n            yield put(insuranceActions.createInsuranceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(insuranceActions.createInsuranceFailure(err));\r\n    }\r\n}\r\nasync function createInsurance(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/insurance`, {\r\n            credentials: \"same-origin\",\r\n            method: \"post\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Get subcat\r\nexport function* watchGetInsurance() {\r\n    yield takeLatest(actionConstants.GET_INSURANCE_REQUEST, workerGetInsurance);\r\n}\r\nfunction* workerGetInsurance(params) {\r\n    try {\r\n        const response = yield call(getInsurance, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(insuranceActions.getInsuranceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(insuranceActions.getInsuranceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(insuranceActions.getInsuranceFailure(err));\r\n    }\r\n}\r\nasync function getInsurance(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/insurance`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Update subcat\r\nexport function* watchUpdateInsurance() {\r\n    yield takeLatest(actionConstants.UPDATE_INSURANCE_REQUEST, workerUpdateInsurance);\r\n}\r\nfunction* workerUpdateInsurance(params) {\r\n    try {\r\n        const response = yield call(updateInsurance, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(insuranceActions.updateInsuranceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(insuranceActions.updateInsuranceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(insuranceActions.updateInsuranceFailure(err));\r\n    }\r\n}\r\nasync function updateInsurance(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/insurance/${payload.subcat_id}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"put\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Delete subcat\r\nexport function* watchDeleteInsurance() {\r\n    yield takeLatest(actionConstants.DELETE_INSURANCE_REQUEST, workerDeleteInsurance);\r\n}\r\nfunction* workerDeleteInsurance(params) {\r\n    try {\r\n        const response = yield call(deleteInsurance, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(insuranceActions.deleteInsuranceSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(insuranceActions.deleteInsuranceFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(insuranceActions.deleteInsuranceFailure(err));\r\n    }\r\n}\r\nasync function deleteInsurance(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/insurance/${payload}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"delete\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}","import actionConstants from \"../actionConstants\";\r\n\r\nexport const feedbackActions = {\r\n    getReportedErrorRequest, getReportedErrorSuccess, getReportedErrorFailure,\r\n    deleteReportedErrorRequest, deleteReportedErrorSuccess, deleteReportedErrorFailure\r\n};\r\n\r\n// Get Rported Errors\r\nfunction getReportedErrorRequest(payload) {\r\n    return {\r\n        type: actionConstants.GET_REPORTED_ERROR_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getReportedErrorSuccess(payload) {\r\n    return {\r\n        type: actionConstants.GET_REPORTED_ERROR_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getReportedErrorFailure(payload) {\r\n    return {\r\n        type: actionConstants.GET_REPORTED_ERROR_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\n// Delete Rported Errors\r\nfunction deleteReportedErrorRequest(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_REPORTED_ERROR_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deleteReportedErrorSuccess(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_REPORTED_ERROR_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction deleteReportedErrorFailure(payload) {\r\n    return {\r\n        type: actionConstants.DELETE_REPORTED_ERROR_FAILURE,\r\n        payload\r\n    }\r\n}","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport actionConstants from \"../actionConstants\";\r\nimport { feedbackActions } from \"../actions/feedbackActions\";\r\n\r\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\r\n\r\nfunction getCookie() {\r\n            var nameEQ = \"token\" + \"=\";\r\n            var ca = document.cookie.split(';');\r\n            for(var i=0;i < ca.length;i++) {\r\n                var c = ca[i];\r\n                while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n                if (c.indexOf(nameEQ) == 0){\r\n                    return c.substring(nameEQ.length,c.length);\r\n                } \r\n            }\r\n            return null;\r\n}\r\n\r\n// Get reported error\r\nexport function* watchGetReportedError() {\r\n    yield takeLatest(actionConstants.GET_REPORTED_ERROR_REQUEST, workerGetReportedError);\r\n}\r\nfunction* workerGetReportedError(params) {\r\n    try {\r\n        const response = yield call(getReportedError, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(feedbackActions.getReportedErrorSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(feedbackActions.getReportedErrorFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(feedbackActions.getReportedErrorFailure(err));\r\n    }\r\n}\r\nasync function getReportedError(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/reportedError`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n// Delete reported error\r\nexport function* watchDeleteReportedError() {\r\n    yield takeLatest(actionConstants.DELETE_REPORTED_ERROR_REQUEST, workerDeleteReportedError);\r\n}\r\nfunction* workerDeleteReportedError(params) {\r\n    try {\r\n        const response = yield call(deleteReportedError, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(feedbackActions.deleteReportedErrorSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(feedbackActions.deleteReportedErrorFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(feedbackActions.deleteReportedErrorFailure(err));\r\n    }\r\n}\r\nasync function deleteReportedError(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/reportedError/${payload.Id}`, {\r\n            credentials: \"same-origin\",\r\n            method: \"delete\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json()\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}","import actionConstants from \"../actionConstants\";\r\n\r\nexport const searchTermActions = {\r\n    getSearchTermRequest, getSearchTermSuccess, getSearchTermFailure,\r\n};\r\n\r\n// Get Rported Errors\r\nfunction getSearchTermRequest(payload) {\r\n    return {\r\n        type: actionConstants.GET_SEARCH_TERM_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getSearchTermSuccess(payload) {\r\n    return {\r\n        type: actionConstants.GET_SEARCH_TERM_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getSearchTermFailure(payload) {\r\n    return {\r\n        type: actionConstants.GET_SEARCH_TERM_FAILURE,\r\n        payload\r\n    }\r\n}","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport actionConstants from \"../actionConstants\";\r\nimport { searchTermActions } from \"../actions/searchTermActions\";\r\n\r\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\r\n\r\nfunction getCookie() {\r\n            var nameEQ = \"token\" + \"=\";\r\n            var ca = document.cookie.split(';');\r\n            for(var i=0;i < ca.length;i++) {\r\n                var c = ca[i];\r\n                while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n                if (c.indexOf(nameEQ) == 0){\r\n                    return c.substring(nameEQ.length,c.length);\r\n                } \r\n            }\r\n            return null;\r\n}\r\n\r\n// Get Search Term \r\nexport function* watchGetSearchTerm() {\r\n    yield takeLatest(actionConstants.GET_SEARCH_TERM_REQUEST, workerGetSearchTerm);\r\n}\r\nfunction* workerGetSearchTerm(params) {\r\n    try {\r\n        const response = yield call(getSearchTerm, params.payload);\r\n        if (response.status === 200) {\r\n            yield put(searchTermActions.getSearchTermSuccess(response.message));\r\n        }\r\n        else if (response.status === 401) {\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\r\n        }\r\n        else {\r\n            yield put(searchTermActions.getSearchTermFailure(response.message));\r\n        }\r\n    }\r\n    catch(err) {\r\n        yield put(searchTermActions.getSearchTermFailure(err));\r\n    }\r\n}\r\nasync function getSearchTerm(payload) {\r\n    try {\r\n        let resp = await fetch(`${base_url}/searchTerm`, {\r\n            credentials: \"same-origin\",\r\n            method: \"get\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Pragma': 'no-cache',\r\n                'Cache-Control': 'no-cache',\r\n                'Authorization': `${getCookie()}`\r\n            }\r\n        });\r\n        let status = resp.status;\r\n        let respBody = await resp.json();\r\n        return {message: respBody, status: status};\r\n    }\r\n    catch(err) {\r\n        return err;\r\n    }\r\n}","import { all } from \"redux-saga/effects\";\r\nimport { watchCreateService, watchGetService, watchEditService, watchDeleteService } from \"../sagas/serviceSagas\";\r\nimport { watchSignIn, watchGetAuth, watchSignOut } from \"./authSagas\"\r\nimport { watchCreatePrimaryCategory, watchGetPrimaryCategory, watchUpdatePrimaryCategory, watchDeletePrimaryCategory, watchCreateSubcategory, watchGetSubcategory, watchUpdateSubcategory, watchDeleteSubcategory } from './categorySagas';\r\nimport { watchCreateInsurance, watchGetInsurance, watchUpdateInsurance, watchDeleteInsurance } from \"./insuranceSagas\";\r\nimport { watchGetReportedError, watchDeleteReportedError } from \"./feedbackSagas\";\r\nimport { watchGetSearchTerm } from \"./searchTermSagas\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchCreateService(),\r\n        watchGetService(),\r\n        watchEditService(),\r\n        watchDeleteService(),\r\n        watchSignIn(),\r\n        watchSignOut(),\r\n        watchGetAuth(),\r\n\r\n        watchCreatePrimaryCategory(),\r\n        watchGetPrimaryCategory(),\r\n        watchUpdatePrimaryCategory(), \r\n        watchDeletePrimaryCategory(), \r\n        watchCreateSubcategory(), \r\n        watchGetSubcategory(), \r\n        watchUpdateSubcategory(),\r\n        watchDeleteSubcategory(),\r\n\r\n        watchCreateInsurance(),\r\n        watchGetInsurance(),\r\n        watchUpdateInsurance(),\r\n        watchDeleteInsurance(),\r\n\r\n        watchGetReportedError(),\r\n        watchDeleteReportedError(),\r\n\r\n        watchGetSearchTerm()\r\n    ]);\r\n}","export const serviceInitialState = {\r\n    status: \"\",\r\n    error: \"\",\r\n    primary_category: [],\r\n    subcategory: [],\r\n    insurance: [],\r\n    service: {},\r\n    listing: {},\r\n    newEdit: []\r\n}\r\n\r\nexport const authInitialState = {\r\n    loggedin: false,\r\n    authMessage: '',\r\n    authError: '',\r\n    loggedInUser: {},\r\n    loadingSignIn: false,\r\n    loadingSignUp: false,\r\n    loadingSignOut: false,\r\n};\r\n\r\nexport const categoryInitialState = {\r\n    status: \"\",\r\n    error: \"\",\r\n    primary_category: [],\r\n    subcategory: []\r\n}\r\n\r\nexport const insuranceInitialState = {\r\n    status: \"\",\r\n    error: \"\",\r\n    insurance: []\r\n}\r\n\r\nexport const feedbackInitialState = {\r\n    status: \"\",\r\n    error: \"\",\r\n}\r\n\r\nexport const searchTermInitialState = {\r\n    status: \"\",\r\n    error: \"\",\r\n}","import { serviceInitialState } from \"./initialState\";\r\nimport actionConstants from \"../actionConstants\";\r\n\r\nexport default function test(state=serviceInitialState, action) {\r\n    switch (action.type) {\r\n        // get primary category\r\n        case actionConstants.GET_PRIMARY_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_PRIMARY_CATEGORY_REQUEST\r\n            }\r\n        case actionConstants.GET_PRIMARY_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\r\n                primary_category: action.payload\r\n            }\r\n        case actionConstants.GET_PRIMARY_CATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_PRIMARY_CATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // get subcategory\r\n        case actionConstants.GET_SUBCATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SUBCATEGORY_REQUEST\r\n            }\r\n        case actionConstants.GET_SUBCATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SUBCATEGORY_SUCCESS,\r\n                subcategory: action.payload\r\n            }\r\n        case actionConstants.GET_SUBCATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SUBCATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // get insurance\r\n        case actionConstants.GET_INSURANCE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_INSURANCE_REQUEST\r\n            }\r\n        case actionConstants.GET_INSURANCE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_INSURANCE_SUCCESS,\r\n                insurance: action.payload\r\n            }\r\n        case actionConstants.GET_INSURANCE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_INSURANCE_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // create service\r\n        case actionConstants.CREATE_SERVICE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_SERVICE_REQUEST\r\n            }\r\n        case actionConstants.CREATE_SERVICE_SUCCESS:\r\n            \r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_SERVICE_SUCCESS,\r\n                service: action.payload\r\n            }\r\n        case actionConstants.CREATE_SERVICE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_SERVICE_FAILURE,\r\n                error: action.payload\r\n            }\r\n        \r\n\r\n        // get service\r\n        case actionConstants.GET_SERVICE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SERVICE_REQUEST\r\n            }\r\n        case actionConstants.GET_SERVICE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SERVICE_SUCCESS,\r\n                listing: action.payload\r\n            }\r\n        case actionConstants.GET_SERVICE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SERVICE_FAILURE,\r\n                error: action.payload\r\n            }\r\n        \r\n        // edit service\r\n        case actionConstants.EDIT_SERVICE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.EDIT_SERVICE_REQUEST\r\n            }\r\n        case actionConstants.EDIT_SERVICE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.EDIT_SERVICE_SUCCESS,\r\n                newEdit: action.payload\r\n            }\r\n        case actionConstants.EDIT_SERVICE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.EDIT_SERVICE_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        //Delete service\r\n        case actionConstants.DELETE_SERVICE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_SERVICE_REQUEST,\r\n        }\r\n        case actionConstants.DELETE_SERVICE_SUCCESS:\r\n            let newService = state.listing.filter(item => item.service_id !== action.payload.service_id)\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_SERVICE_SUCCESS,\r\n                listing: newService\r\n            }\r\n        case actionConstants.DELETE_SERVICE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_SERVICE_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import  actionConstants  from '../actionConstants';\r\nimport { authInitialState } from './initialState';\r\n\r\nexport default function auth(state = authInitialState, action) {\r\n  switch (action.type) {\r\n    //Sign out\r\n    case actionConstants.SIGN_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingSignOut: true,\r\n        authMessage: actionConstants.SIGN_OUT_REQUEST\r\n      };\r\n    case actionConstants.SIGN_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        authMessage: actionConstants.SIGN_OUT_SUCCESS\r\n      };\r\n    case actionConstants.SIGN_OUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loadingSignOut: false,\r\n        authMessage: action.error\r\n      };\r\n    \r\n    //Sign in\r\n    case actionConstants.SIGN_IN_REQUEST:\r\n      return {\r\n          ...state,\r\n          loadingSignIn: true,\r\n          authMessage: actionConstants.SIGN_IN_REQUEST\r\n      }\r\n    case actionConstants.SIGN_IN_SUCCESS:\r\n      return {\r\n          ...state,\r\n          loggedin: true,\r\n          authError:'',\r\n          authMessage: actionConstants.SIGN_IN_SUCCESS,\r\n          loadingSignIn: false,\r\n          loggedInUser: action.payload.email,\r\n      }\r\n    case actionConstants.SIGN_IN_FAILURE:\r\n      return {\r\n          ...state,\r\n          authError: action.error,\r\n          authMessage: actionConstants.SIGN_IN_FAILURE,\r\n          loadingSignIn: false,\r\n          loggedin: false\r\n\r\n      }\r\n\r\n      //Get authentication state\r\n    case actionConstants.GET_AUTH_REQUEST:\r\n      return {\r\n        ...state,\r\n        authMessage: actionConstants.GET_AUTH_REQUEST\r\n    }\r\n    case actionConstants.GET_AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        authError:'',\r\n        authMessage: actionConstants.GET_AUTH_SUCCESS,\r\n        loggedInUser: action.payload,\r\n        loggedin: true\r\n    }\r\n    case actionConstants.GET_AUTH_FAILURE:\r\n      return {\r\n        ...state,\r\n        authMessage: actionConstants.GET_AUTH_FAILURE,\r\n        authError: action.error\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { categoryInitialState } from \"./initialState\";\r\nimport actionConstants from \"../actionConstants\";\r\n\r\nexport default function category(state=categoryInitialState, action) {\r\n    switch (action.type) {\r\n        // create primary category\r\n        case actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST\r\n            }\r\n        case actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS,\r\n                primary_category: state.primary_category.concat(action.payload)\r\n            }\r\n        case actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // get primary category\r\n        case actionConstants.GET_PRIMARY_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_PRIMARY_CATEGORY_REQUEST\r\n            }\r\n        case actionConstants.GET_PRIMARY_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\r\n                primary_category: action.payload\r\n            }\r\n        case actionConstants.GET_PRIMARY_CATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_PRIMARY_CATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // update primary category\r\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST\r\n            }\r\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS:\r\n            var newPrimaryCategory = state.primary_category;\r\n            var index = newPrimaryCategory.findIndex(c => { return c.cat_id === action.payload.cat_id});\r\n            newPrimaryCategory[index] = action.payload;\r\n            return {\r\n                ...state,\r\n                status: actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS,\r\n                primary_category: newPrimaryCategory\r\n            }\r\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // delete primary category\r\n        case actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST\r\n            }\r\n        case actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS:\r\n            newPrimaryCategory = state.primary_category.filter(item => item.cat_id !== action.payload.cat_id)\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS,\r\n                primary_category: newPrimaryCategory\r\n            }\r\n        case actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // create subcategory\r\n        case actionConstants.CREATE_SUBCATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_SUBCATEGORY_REQUEST\r\n            }\r\n        case actionConstants.CREATE_SUBCATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_SUBCATEGORY_SUCCESS,\r\n                subcategory: state.subcategory.concat(action.payload)\r\n            }\r\n        case actionConstants.CREATE_SUBCATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_SUBCATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // get subcategory\r\n        case actionConstants.GET_SUBCATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SUBCATEGORY_REQUEST\r\n            }\r\n        case actionConstants.GET_SUBCATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SUBCATEGORY_SUCCESS,\r\n                subcategory: action.payload\r\n            }\r\n        case actionConstants.GET_SUBCATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SUBCATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // update subcategory\r\n        case actionConstants.UPDATE_SUBCATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_SUBCATEGORY_REQUEST\r\n            }\r\n        case actionConstants.UPDATE_SUBCATEGORY_SUCCESS:\r\n            var newSubcategory = state.subcategory;\r\n            var index = newSubcategory.findIndex(c => { return c.subcat_id === action.payload.subcat_id});\r\n            newSubcategory[index] = action.payload;\r\n            return {\r\n                ...state,\r\n                status: actionConstants.UPDATE_SUBCATEGORY_SUCCESS,\r\n                subcategory: newSubcategory\r\n            }\r\n        case actionConstants.UPDATE_SUBCATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // delete primary category\r\n        case actionConstants.DELETE_SUBCATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_SUBCATEGORY_REQUEST\r\n            }\r\n        case actionConstants.DELETE_SUBCATEGORY_SUCCESS:\r\n            newSubcategory = state.subcategory.filter(item => item.subcat_id !== action.payload.subcat_id)\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_SUBCATEGORY_SUCCESS,\r\n                subcategory: newSubcategory\r\n            }\r\n        case actionConstants.DELETE_SUBCATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_SUBCATEGORY_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { insuranceInitialState } from \"./initialState\";\r\nimport actionConstants from \"../actionConstants\";\r\n\r\nexport default function test(state=insuranceInitialState, action) {\r\n    switch (action.type) {\r\n       // create primary category\r\n       case actionConstants.CREATE_INSURANCE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_INSURANCE_REQUEST\r\n            }\r\n        case actionConstants.CREATE_INSURANCE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_INSURANCE_SUCCESS,\r\n                insurance: state.insurance.concat(action.payload)\r\n            }\r\n        case actionConstants.CREATE_INSURANCE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_INSURANCE_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        // get insurance\r\n        case actionConstants.GET_INSURANCE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_INSURANCE_REQUEST\r\n            }\r\n        case actionConstants.GET_INSURANCE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_INSURANCE_SUCCESS,\r\n                insurance: action.payload\r\n            }\r\n        case actionConstants.GET_INSURANCE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_INSURANCE_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // update primary category\r\n        case actionConstants.UPDATE_INSURANCE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.CREATE_INSURANCE_REQUEST\r\n            }\r\n        case actionConstants.UPDATE_INSURANCE_SUCCESS:\r\n            var newInsurance = state.insurance;\r\n            var index = newInsurance.findIndex(c => { return c.insur_id === action.payload.insur_id});\r\n            newInsurance[index] = action.payload;\r\n            return {\r\n                ...state,\r\n                status: actionConstants.UPDATE_INSURANCE_SUCCESS,\r\n                insurance: newInsurance\r\n            }\r\n        case actionConstants.UPDATE_INSURANCE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.UPDATE_INSURANCE_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        // delete primary category\r\n        case actionConstants.DELETE_INSURANCE_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_INSURANCE_REQUEST\r\n            }\r\n        case actionConstants.DELETE_INSURANCE_SUCCESS:\r\n            newInsurance = state.insurance.filter(item => item.insur_id !== action.payload.insur_id)\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_INSURANCE_SUCCESS,\r\n                insurance: newInsurance\r\n            }\r\n        case actionConstants.DELETE_INSURANCE_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_INSURANCE_FAILURE,\r\n                error: action.payload\r\n            }\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}","import { feedbackInitialState } from \"./initialState\";\r\nimport actionConstants from \"../actionConstants\";\r\n\r\nexport default function feedback(state=feedbackInitialState, action) {\r\n    switch (action.type) {\r\n        // get feedback\r\n        case actionConstants.GET_REPORTED_ERROR_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_REPORTED_ERROR_REQUEST\r\n            }\r\n        case actionConstants.GET_REPORTED_ERROR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_REPORTED_ERROR_SUCCESS,\r\n                reported_Error: action.payload\r\n            }\r\n        case actionConstants.GET_REPORTED_ERROR_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_REPORTED_ERROR_FAILURE,\r\n                error: action.payload\r\n            }\r\n       \r\n        //Delete feedback\r\n        case actionConstants.DELETE_REPORTED_ERROR_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_REPORTED_ERROR_REQUEST,\r\n        }\r\n        case actionConstants.DELETE_REPORTED_ERROR_SUCCESS:\r\n            let newReported_Error = state.reported_Error.filter(item => item.id !== action.payload.id)\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_REPORTED_ERROR_SUCCESS,\r\n                reported_Error: newReported_Error\r\n            }\r\n        case actionConstants.DELETE_REPORTED_ERROR_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.DELETE_REPORTED_ERROR_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { searchTermInitialState } from \"./initialState\";\r\nimport actionConstants from \"../actionConstants\";\r\n\r\nexport default function searchTerm(state=searchTermInitialState, action) {\r\n    switch (action.type) {\r\n        // get searchTerm\r\n        case actionConstants.GET_SEARCH_TERM_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SEARCH_TERM_REQUEST\r\n            }\r\n        case actionConstants.GET_SEARCH_TERM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SEARCH_TERM_SUCCESS,\r\n                Search_Term: action.payload\r\n            }\r\n        case actionConstants.GET_SEARCH_TERM_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: actionConstants.GET_SEARCH_TERM_FAILURE,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport serviceReducer from \"./serviceReducer\";\r\nimport auth from \"./authReducers\"\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport insuranceReducer from \"./insuranceReducer\";\r\nimport feedbackReducer from \"./feedbackReducers\";\r\nimport searchTermReducers from \"./searchTermReducers\";\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    serviceReducer,\r\n    auth,\r\n    categoryReducer,\r\n    insuranceReducer,\r\n    feedbackReducer,\r\n    searchTermReducers\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { serviceActions } from './redux/actions/serviceActions';\r\nimport actionConstants from './redux/actionConstants';\r\n\r\n//Global\r\nimport moment from 'moment';\r\n//style\r\nimport \"./CardTemplate.css\"\r\nimport { Row, Collapse, Card, Button, Tag } from 'antd';\r\nconst { Panel } = Collapse;\r\nclass CardTemplateComponent extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n    }\r\n\r\n    render() {\r\n        const { listing, primary_category, subcategory, insurance, pageBelonging } = this.props;\r\n\r\n        return (\r\n            <Row>\r\n                <Card>\r\n                    <Collapse\r\n                        bordered={false}\r\n                    >\r\n                        <Panel header={listing.name} style={{border:0}}>                         \r\n                            {    pageBelonging ?\r\n                                        <Row>\r\n                                            <Button \r\n                                                onClick = {() => {\r\n                                                    this.props.dispatch(serviceActions.editServiceRequest({approveBy: this.props.loggedInUser, serviceId:listing.service_id}));\r\n                                                }}\r\n                                            >\r\n                                                Approve Service\r\n                                            </Button>\r\n                                        \r\n                                            <Link to={`/editService/${listing.service_id}?list=ServiceSuggestion`}>\r\n                                                <Button>\r\n                                                    Modify Service\r\n                                                </Button>\r\n                                            </Link>\r\n                        \r\n                                            <Button \r\n                                                onClick = {() => {\r\n                                                        this.props.dispatch(serviceActions.deleteServiceRequest({serviceId:listing.service_id}));\r\n\r\n                                                    }}\r\n                                            >\r\n                                                Delete Service\r\n                                            </Button>\r\n                                        </Row>\r\n                                   \r\n                                :\r\n                                   \r\n                                        <Row>\r\n                                            <Link to={`/editService/${listing.service_id}`}>\r\n                                                <Button>\r\n                                                    Modify Service\r\n                                                </Button>\r\n                                            </Link>\r\n                                            <Button \r\n                                                onClick = {() => {\r\n                                                        this.props.dispatch(serviceActions.deleteServiceRequest({serviceId:listing.service_id}));\r\n\r\n                                                    }}\r\n                                            >\r\n                                                Delete Service\r\n                                            </Button>\r\n                                        </Row>\r\n                                    \r\n                            \r\n                            }\r\n                            <Row className=\"last_modified\">\r\n                                Last Modified Date: {moment(listing.last_verified, \"YYYY-MM-DDTHH:mm:ss.sssZ\").format('LLLL')}\r\n                            </Row>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Service ID:</td>\r\n                                        <td>{listing.service_id}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Service Name:</td>\r\n                                        <td>{listing.name}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Primary Category:</td>\r\n                                        <td>{listing.cat_name ? listing.cat_name.map(cat_name => {\r\n                                            return(\r\n                                                <Tag key={cat_name}>\r\n                                                    {cat_name}\r\n                                                </Tag>\r\n                                            )\r\n                                        }) : \"\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Subcategory:</td>\r\n                                        <td>{listing.subcat_name ? listing.subcat_name.map(subcat_name => {\r\n                                            return(\r\n                                                <Tag key={subcat_name}>\r\n                                                    {subcat_name}\r\n                                                </Tag>\r\n                                            )\r\n                                        }) : \"\"}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Insurance:</td>\r\n                                        <td>{listing.insur_name ? listing.insur_name.map(insur_name => {\r\n                                            return(\r\n                                                <Tag key={insur_name}>\r\n                                                    {insur_name}\r\n                                                </Tag>\r\n                                            )\r\n                                        }) : \"\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Languages Spoken:</td>\r\n                                        <td>{listing.languages_spoken}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Address:</td>\r\n                                        <td>{listing.adress}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Latitude:</td>\r\n                                        <td>{listing.lat}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Longitude:</td>\r\n                                        <td>{listing.lon}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Transit:</td>\r\n                                        <td>{listing.transit}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Website:</td>\r\n                                        <td>{listing.website}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Phone Number:</td>\r\n                                        <td>{listing.phone_num}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Emergency Number:</td>\r\n                                        <td>{listing.emergency_num}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Drop In:</td>\r\n                                        <td>{listing.drop_in}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Services:</td>\r\n                                        <td>{listing.services}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Services (FR):</td>\r\n                                        <td>{listing.services_fr}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Notes:</td>\r\n                                        <td>{listing.notes}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Notes (FR):</td>\r\n                                        <td>{listing.notes_fr}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Verified By:</td>\r\n                                        <td>{listing.verified_by}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Business Hours(Monday):</td>\r\n                                        <td>{listing.hours[1]}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Business Hours(Tuesday):</td>\r\n                                        <td>{listing.hours[2]}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Business Hours(Wednesday):</td>\r\n                                        <td>{listing.hours[3]}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Business Hours(Thursday):</td>\r\n                                        <td>{listing.hours[4]}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Business Hours(Friday):</td>\r\n                                        <td>{listing.hours[5]}</td>\r\n                                    </tr>\r\n                                    <tr className=\"light-row\">\r\n                                        <td>Business Hours(Saturday):</td>\r\n                                        <td>{listing.hours[6]}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Business Hours(Sunday):</td>\r\n                                        <td>{listing.hours[0]}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Panel>\r\n                    </Collapse>\r\n                </Card>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    const { primary_category, subcategory, insurance } = state.serviceReducer;\r\n    const  {loggedInUser} = state.auth;\r\n    return {\r\n        primary_category, subcategory, insurance, loggedInUser\r\n    }\r\n};\r\n\r\nconst NewCardTemplateComponent = withRouter(connect(mapStateToProps)(CardTemplateComponent));\r\nexport default NewCardTemplateComponent;","// React, Routing\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { serviceActions } from './redux/actions/serviceActions';\r\nimport { categoryActions } from './redux/actions/categoryActions';\r\nimport { insuranceActions } from './redux/actions/insuranceActions';\r\nimport CardTemplate from './CardTemplate.jsx';\r\n\r\n//Style\r\nimport { Input } from 'antd';\r\nconst { Search } = Input;\r\nclass ListServiceClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(serviceActions.getServiceRequest());\r\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\r\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\r\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Card_Container\">\r\n                <Search\r\n                    placeholder=\"search service\"\r\n                    onChange={event => {\r\n                        this.setState({filter: event.target.value})\r\n                        console.log(event.target.value)\r\n                    }}\r\n                    className=\"search-bar\"\r\n                />\r\n                {this.props.listing.length > 0 && this.props.listing.map((service, i) => {\r\n                    if (this.props.listing[i].verified_by && this.props.listing[i].name) {\r\n                        let lowerCaseFilter = this.state.filter.toLowerCase();\r\n                        if ((this.props.listing[i].name).toLowerCase().indexOf(lowerCaseFilter)>-1) {\r\n                            return(\r\n                                <CardTemplate \r\n                                    listing={service}\r\n                                    key={i}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { listing, primary_category, subcategory, insurance } = state.serviceReducer;\r\n    return {\r\n        listing, primary_category, subcategory, insurance\r\n    }\r\n}\r\nconst ListService = connect(mapStateToProps)(ListServiceClass);\r\nexport default ListService;","// React, routing\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\n// Style\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ListService from './listService.jsx';\r\n// Style\r\nimport './home.css';\r\nimport { Button, Input, Badge, Icon  } from 'antd';\r\nimport { feedbackActions } from './redux/actions/feedbackActions.js';\r\n\r\nclass HomeClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       this.state = {\r\n      \r\n       }\r\n    }\r\n\r\n    countSuggestionService = (listing) =>{\r\n        let suggestionServiceNumber = 0\r\n        if (listing && listing.length > 0) {\r\n            listing.map((service, i) => {\r\n                if ( !service.verified_by && service.name) {\r\n                    suggestionServiceNumber++\r\n                }\r\n            })\r\n        }\r\n        return suggestionServiceNumber\r\n        }\r\n\r\n    countReportedError = (listing) =>{\r\n        let reportedErrorNumber = 0\r\n        if (listing && listing.length > 0) {\r\n            listing.map((service, i) => {\r\n                if ( service.email && service.content) {\r\n                    reportedErrorNumber++\r\n                }\r\n            })\r\n        }\r\n        return reportedErrorNumber\r\n        }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.loggedin != prevProps.loggedin && this.props.loggedin == true) {\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + '/#/home';\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.dispatch(feedbackActions.getReportedErrorRequest());\r\n    }\r\n    render() {\r\n            return ( \r\n           \r\n                <div className=\"home-wrapper\">\r\n                    <div className=\"newService\">\r\n                        <Link to=\"/newService\">\r\n                            <Button>Create New Service</Button>\r\n                        </Link>\r\n                        <Link to=\"/category\">\r\n                            <Button>Manage Primary Categories</Button>\r\n                        </Link>\r\n                        <Link to=\"/subcategory\">\r\n                            <Button>Manage Subcategories</Button>\r\n                        </Link>\r\n                        <Link to=\"/insurance\">\r\n                            <Button>Manage Insurances</Button>\r\n                        </Link>\r\n                        <Badge count={this.countSuggestionService(this.props.listing)}>\r\n                            <a href=\"/#/ListServiceSuggestion\"> <Button>Review Service Suggestion</Button> </a>\r\n                        </Badge>\r\n                       <Badge count={this.countReportedError(this.props.reported_Error)}>\r\n                            <a href=\"/#/ListReportedError\"> <Button>Review Reported Error</Button> </a>\r\n                        </Badge>\r\n                    </div>\r\n                    <ListService />\r\n                </div>\r\n             \r\n            )\r\n        }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { loggedInUser } = state.auth\r\n    const { listing} = state.serviceReducer;\r\n    const {reported_Error} = state.feedbackReducer\r\n    return {\r\n        loggedInUser, listing, reported_Error\r\n    }\r\n}\r\nconst Home = withRouter(connect(mapStateToProps)(HomeClass));\r\nexport default Home;","// React, routing\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { serviceActions } from './redux/actions/serviceActions';\r\nimport { categoryActions } from './redux/actions/categoryActions';\r\nimport { insuranceActions } from './redux/actions/insuranceActions';\r\nimport actionConstants from './redux/actionConstants';\r\n\r\n// Style\r\nimport \"./newService.css\";\r\nimport { Form, Input, InputNumber, Button, Select, Tag, Icon } from 'antd';\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst InputGroup = Input.Group;\r\n\r\nclass NewServiceClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tags: {\r\n                lang: [],\r\n                services: [],\r\n                servicesFr: []\r\n            },\r\n            inputVisible: {\r\n                lang: false,\r\n                services: false,\r\n                servicesFr: false\r\n            },\r\n            inputValue: {\r\n                lang: '',\r\n                services: '',\r\n                servicesFr: ''\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\r\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\r\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.CREATE_SERVICE_FAILURE) {\r\n            alert(this.props.error.detail ? this.props.error.detail : this.props.error);\r\n        }\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.CREATE_SERVICE_SUCCESS) {\r\n            alert(\"Service created successfully\");\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/#/home\";\r\n        }\r\n    }\r\n\r\n    // TAG INPUT\r\n    handleClose = (removedTag, type) => {\r\n        const newTags = this.state.tags[type].filter(tag => tag !== removedTag);\r\n        let { tags } = this.state;\r\n        tags[type] = newTags;\r\n        this.setState({ tags });\r\n    };\r\n\r\n    showInput = (type) => {\r\n        let { inputVisible } = this.state;\r\n        inputVisible[type] = true\r\n        let input = \"input\" + type;\r\n        this.setState({ inputVisible }, () => this[input].focus());\r\n    };\r\n\r\n    handleInputChange = (e, type) => {\r\n        let { inputValue } = this.state;\r\n        inputValue[type] = e.target.value;\r\n        this.setState({ inputValue });\r\n    };\r\n\r\n    handleInputConfirm = (type) => {\r\n        let { tags, inputValue, inputVisible } = this.state;\r\n        if (inputValue[type] && tags[type].indexOf(inputValue[type]) === -1) {\r\n            tags[type] = [...tags[type], inputValue[type]];\r\n        }\r\n        inputVisible[type] = false;\r\n        inputValue[type] = '';\r\n        this.setState({\r\n            tags,\r\n            inputVisible,\r\n            inputValue,\r\n        });\r\n    };\r\n\r\n    saveInputRefLang = (input) => (this.inputlang = input);\r\n    saveInputRefServices = (input) => (this.inputservices = input);\r\n    saveInputRefServicesFr = (input) => (this.inputservicesFr = input);\r\n\r\n    parseTime(time) {\r\n        if (!time) {\r\n            return true;\r\n        }\r\n\r\n        let parsed = time.split('-');\r\n        if (parsed.length !== 2) {\r\n            return false;\r\n        }\r\n\r\n        let start = parsed[0].split(':');\r\n        if (start.length !== 2 || isNaN(start[0]) || isNaN(start[1])) {\r\n            return false;\r\n        }\r\n        let end = parsed[1].split(':');\r\n        if (end.length !== 2 || isNaN(end[0]) || isNaN(end[1])) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getHours(time, last) {\r\n        if (time) {\r\n            if (this.parseTime(time)) {\r\n                if (last) {\r\n                    return `{${time}}`;\r\n                }\r\n                else {\r\n                    return `{${time}},`;\r\n                }\r\n            }\r\n            else {\r\n                return false\r\n            }\r\n        }\r\n        else {\r\n            if (last) {\r\n                return `{NA}`;\r\n            }\r\n            else {\r\n                return `{NA},`;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n\r\n            // Build business hours string\r\n            let hours = \"{\";\r\n            if (this.getHours(values.hours_sun) && this.getHours(values.hours_mon) && this.getHours(values.hours_tue) && this.getHours(values.hours_wed) && this.getHours(values.hours_thu) && this.getHours(values.hours_fri) && this.getHours(values.hours_sat)) {\r\n                hours += this.getHours(values.hours_sun, false);\r\n                hours += this.getHours(values.hours_mon, false);\r\n                hours += this.getHours(values.hours_tue, false);\r\n                hours += this.getHours(values.hours_wed, false);\r\n                hours += this.getHours(values.hours_thu, false);\r\n                hours += this.getHours(values.hours_fri, false);\r\n                hours += this.getHours(values.hours_sat, true);\r\n            }\r\n            else {\r\n                return alert(\"Business hours must follow the format HH:mm-HH:mm\");\r\n            }\r\n            hours += \"}\";\r\n            values.hours = hours;\r\n\r\n            // Build languages and services string\r\n            let lang = this.state.tags.lang.join(',');\r\n            let services = this.state.tags.services.join(',');\r\n            let servicesFr = this.state.tags.servicesFr.join(',');\r\n            \r\n            values.languages_spoken = lang;\r\n            values.services = services;\r\n            values.services_fr = servicesFr;\r\n            this.props.dispatch(serviceActions.createServiceRequest(values));\r\n          }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { tags, inputVisible, inputValue } = this.state;\r\n            return (\r\n                <div className=\"service-form-wrapper\">\r\n                    <h1>Create a new service</h1>\r\n                    <Form \r\n                        onSubmit={this.handleSubmit} \r\n                    >\r\n                        <Form.Item label=\"Service Name\">\r\n                            {getFieldDecorator('name', {})(\r\n                                <Input\r\n                                    placeholder=\"eg. CLSC du Parc\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Primary category\">\r\n                            {getFieldDecorator('primary_cat_id', {})(\r\n                                <Select\r\n                                    placeholder=\"Select\"\r\n                                    mode=\"multiple\"\r\n                                >\r\n                                    {this.props.primary_category.map((cat, i) => {\r\n                                        return (\r\n                                            <Option key={i} value={cat.cat_id}>{cat.cat_name}</Option>\r\n                                        );\r\n                                    })}\r\n                                </Select>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Subcategory\">\r\n                            {getFieldDecorator('sub_cat_id', {})(\r\n                                <Select\r\n                                    placeholder=\"Select\"\r\n                                    mode=\"multiple\"\r\n                                >\r\n                                    {this.props.subcategory.map((cat, i) => {\r\n                                        return (\r\n                                            <Option key={i} value={cat.subcat_id}>{cat.subcat_name}</Option>\r\n                                        );\r\n                                    })}\r\n                                </Select>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Insurance\">\r\n                            {getFieldDecorator('insur_id', {})(\r\n                                <Select\r\n                                    placeholder=\"Select\"\r\n                                    mode=\"multiple\"\r\n                                >\r\n                                    {this.props.insurance.map((insur, i) => {\r\n                                        return (\r\n                                            <Option key={i} value={insur.insur_id}>{insur.insur_name}</Option>\r\n                                        );\r\n                                    })}\r\n                                </Select>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Languages Spoken\">\r\n                            <div>Please indicate the full language name (ex: \"English\", \"French\")</div>\r\n                            <div>\r\n                                {tags[\"lang\"].map((tag, index) => {\r\n                                    const tagElem = (\r\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"lang\")}>\r\n                                            {tag}\r\n                                        </Tag>\r\n                                    );\r\n                                    return tagElem;\r\n                                })}\r\n                                {inputVisible[\"lang\"] && (\r\n                                    <Input\r\n                                        ref={this.saveInputRefLang}\r\n                                        type=\"text\"\r\n                                        size=\"small\"\r\n                                        style={{ width: 78 }}\r\n                                        value={inputValue[\"lang\"]}\r\n                                        onChange={e => this.handleInputChange(e, \"lang\")}\r\n                                        onBlur={() => this.handleInputConfirm(\"lang\")}\r\n                                        onPressEnter={() => this.handleInputConfirm(\"lang\")}\r\n                                    />\r\n                                    )}\r\n                                {!inputVisible[\"lang\"] && (\r\n                                    <Tag onClick={() => this.showInput(\"lang\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                                        <Icon type=\"plus\" /> Add Language\r\n                                    </Tag>\r\n                                )}\r\n                            </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Address\">\r\n                            {getFieldDecorator('address', {})(\r\n                                <Input\r\n                                    placeholder=\"eg. 123 Avenue du Parc\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Latitude\">\r\n                            {getFieldDecorator('lat', {})(\r\n                                <InputNumber\r\n                                    style={{width: \"100%\"}}\r\n                                    placeholder=\"eg. 45.23424\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Longitude\">\r\n                            {getFieldDecorator('lon', {})(\r\n                                <InputNumber\r\n                                    style={{width: \"100%\"}}\r\n                                    placeholder=\"eg. -73.34535\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Transit\">\r\n                            {getFieldDecorator('transit', {})(\r\n                                <Input\r\n                                    placeholder=\"eg. Yes, near Place des Arts\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Website\">\r\n                            {getFieldDecorator('website', {})(\r\n                                <Input\r\n                                    placeholder=\"eg. www.example.com\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Phone number\">\r\n                            {getFieldDecorator('phone_num', {})(\r\n                                <Input\r\n                                    placeholder=\"eg. 514-555-4444\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Emergency Number\">\r\n                            {getFieldDecorator('emergency_num', {})(\r\n                                <Input\r\n                                    placeholder=\"eg. 514-555-4444\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Drop In\">\r\n                            {getFieldDecorator('drop_in', {})(\r\n                                <Input\r\n                                    placeholder=\"eg. Yes\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Services\">\r\n                            <div>\r\n                                {tags[\"services\"].map((tag, index) => {\r\n                                    const tagElem = (\r\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"services\")}>\r\n                                            {tag}\r\n                                        </Tag>\r\n                                    );\r\n                                    return tagElem;\r\n                                })}\r\n                                {inputVisible[\"services\"] && (\r\n                                    <Input\r\n                                        ref={this.saveInputRefServices}\r\n                                        type=\"text\"\r\n                                        size=\"small\"\r\n                                        style={{ width: 78 }}\r\n                                        value={inputValue[\"services\"]}\r\n                                        onChange={e => this.handleInputChange(e, \"services\")}\r\n                                        onBlur={() => this.handleInputConfirm(\"services\")}\r\n                                        onPressEnter={() => this.handleInputConfirm(\"services\")}\r\n                                    />\r\n                                    )}\r\n                                {!inputVisible[\"services\"] && (\r\n                                    <Tag onClick={() => this.showInput(\"services\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                                        <Icon type=\"plus\" /> Add Service\r\n                                    </Tag>\r\n                                )}\r\n                            </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Services (FR)\">\r\n                            <div>\r\n                                {tags[\"servicesFr\"].map((tag, index) => {\r\n                                    const tagElem = (\r\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"servicesFr\")}>\r\n                                            {tag}\r\n                                        </Tag>\r\n                                    );\r\n                                    return tagElem;\r\n                                })}\r\n                                {inputVisible[\"servicesFr\"] && (\r\n                                    <Input\r\n                                        ref={this.saveInputRefServicesFr}\r\n                                        type=\"text\"\r\n                                        size=\"small\"\r\n                                        style={{ width: 120 }}\r\n                                        value={inputValue[\"servicesFr\"]}\r\n                                        onChange={e => this.handleInputChange(e, \"servicesFr\")}\r\n                                        onBlur={() => this.handleInputConfirm(\"servicesFr\")}\r\n                                        onPressEnter={() => this.handleInputConfirm(\"servicesFr\")}\r\n                                    />\r\n                                    )}\r\n                                {!inputVisible[\"servicesFr\"] && (\r\n                                    <Tag onClick={() => this.showInput(\"servicesFr\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                                        <Icon type=\"plus\" /> Add Service (FR)\r\n                                    </Tag>\r\n                                )}\r\n                            </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Notes\">\r\n                            {getFieldDecorator('notes', {})(\r\n                                <TextArea\r\n                                    rows={10}\r\n                                    placeholder=\"\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Notes (FR)\">\r\n                            {getFieldDecorator('notes_fr', {})(\r\n                                <TextArea\r\n                                    rows={10}\r\n                                    placeholder=\"\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Verified by\">\r\n                            {getFieldDecorator('verified_by', {initialValue: this.props.loggedInUser})(\r\n                                <Input\r\n                                    placeholder=\"\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        Business Hours:\r\n                        <InputGroup compact>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('hours_sun', {})(\r\n                                    <Input style={{ width: 150 }} placeholder=\"Sun\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('hours_mon', {})(\r\n                                    <Input style={{ width: 150 }} placeholder=\"Mon\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('hours_tue', {})(\r\n                                    <Input style={{ width: 150 }} placeholder=\"Tue\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('hours_wed', {})(\r\n                                    <Input style={{ width: 150 }} placeholder=\"Wed\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('hours_thu', {})(\r\n                                    <Input style={{ width: 150 }} placeholder=\"Thu\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('hours_fri', {})(\r\n                                    <Input style={{ width: 150 }} placeholder=\"Fri\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('hours_sat', {})(\r\n                                    <Input style={{ width: 150 }} placeholder=\"Sat\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                        </InputGroup>\r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Create Service\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            )\r\n        }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const {loggedInUser} = state.auth;\r\n    const { status, error, primary_category, subcategory, insurance } = state.serviceReducer;\r\n    return {\r\n        status, error, primary_category, subcategory, insurance, loggedInUser\r\n    }\r\n}\r\nconst ServiceForm = Form.create()(NewServiceClass);\r\nconst NewService = withRouter(connect(mapStateToProps)(ServiceForm));\r\nexport default NewService;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authActions } from './redux/actions/authActions';\r\nimport { withRouter } from 'react-router';\r\nimport actionConstants from './redux/actionConstants';\r\n\r\n\r\n//Style\r\nimport './login.css'\r\nimport { Form, Icon, Input, Button } from 'antd';\r\nimport { stat } from 'fs';\r\n\r\nclass LogInClass extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            const { dispatch } = this.props;\r\n            const payload = {\r\n              email: values.email, \r\n              password: values.password\r\n            }\r\n            dispatch(authActions.signInRequest(payload));\r\n          }\r\n        });\r\n      } \r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.loggedin != prevProps.loggedin && this.props.loggedin == true) {\r\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + '/#/home';\r\n        }\r\n        if (this.props.authMessage !== prevProps.authMessage && this.props.authMessage === actionConstants.SIGN_IN_FAILURE) {\r\n            alert(this.props.authError);\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n     \r\n        return (\r\n\r\n        <div> \r\n            \r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\" >\r\n                <h1>Admin Login</h1>\r\n\r\n                <Form.Item>\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{ required: true, message: 'Please input your email!' }],\r\n                    })(\r\n                        <Input\r\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        placeholder=\"Email\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>    \r\n\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={this.props.loadingSignIn}>\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n\r\n            </Form> \r\n        \r\n        </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { authMessage, loadingSignIn, loggedin, authError } = state.auth;\r\n    return {\r\n       loadingSignIn, loggedin, authMessage, authError\r\n    };\r\n}\r\n\r\n\r\nconst LogInForm = Form.create()(LogInClass);\r\nconst LogIn = withRouter(connect(mapStateToProps)(LogInForm));\r\n\r\nexport default LogIn;","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { serviceActions } from './redux/actions/serviceActions';\r\nimport { categoryActions } from './redux/actions/categoryActions';\r\nimport { insuranceActions } from './redux/actions/insuranceActions';\r\nimport actionConstants from './redux/actionConstants';\r\n\r\n// Style\r\nimport \"./editService.css\";\r\nimport { Form, Input, InputNumber, Button, Select, Tag, Icon } from 'antd';\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst InputGroup = Input.Group;\r\nclass EditServiceClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tags: {\r\n                lang: [],\r\n                services: [],\r\n                servicesFr: []\r\n            },\r\n            inputVisible: {\r\n                lang: false,\r\n                services: false,\r\n                servicesFr: false\r\n            },\r\n            inputValue: {\r\n                lang: '',\r\n                services: '',\r\n                servicesFr: ''\r\n            },\r\n        }\r\n    }\r\n    \r\n    currentServiceSetUp() {\r\n        const { listing } = this.props;\r\n        const { service_id } = this.props.match.params;\r\n        let service = [];\r\n        for(var i = 0; i < listing.length; i++) {\r\n            if (listing[i].service_id == service_id) {\r\n                service.push(listing[i]);\r\n            } \r\n        }\r\n        const currentService = service[0];\r\n        const languages = currentService.languages_spoken ? (currentService.languages_spoken).split(\",\") : [];\r\n        const Service = currentService.services ? (currentService.services).split(\",\") : [];\r\n        const Services_fr = currentService.services_fr ? (currentService.services_fr).split(\",\") : [];\r\n        this.setState({\r\n            tags: {\r\n                lang: languages,\r\n                services: Service,\r\n                servicesFr: Services_fr\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(serviceActions.getServiceRequest());\r\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\r\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\r\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\r\n        if(this.props.listing && Object.keys(this.props.listing).length !== 0) {\r\n            this.currentServiceSetUp();\r\n        };\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_FAILURE) {\r\n            alert(\"ERROR SAVING\");\r\n        }\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.GET_SERVICE_SUCCESS \r\n            && this.props.status === actionConstants.GET_PRIMARY_CATEGORY_SUCCESS && this.props.status === actionConstants.GET_SUBCATEGORY_SUCCESS\r\n            && this.props.status === actionConstants.GET_INSURANCE_SUCCESS) {\r\n            this.currentServiceSetUp()\r\n        }\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_SUCCESS) {\r\n            alert(\"Service modified successfully\");\r\n            if (window.location.href.indexOf(\"ServiceSuggestion\") > 0) {\r\n                window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/#/ListServiceSuggestion\";\r\n            } else {\r\n                window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/#/home\";\r\n            };\r\n        }\r\n    }\r\n\r\n    // TAG INPUT\r\n    handleClose = (removedTag, type) => {\r\n        const newTags = this.state.tags[type].filter(tag => tag !== removedTag);\r\n        let { tags } = this.state;\r\n        tags[type] = newTags;\r\n        this.setState({ tags });\r\n    };\r\n\r\n    showInput = (type) => {\r\n        let { inputVisible } = this.state;\r\n        inputVisible[type] = true\r\n        let input = \"input\" + type;\r\n        this.setState({ inputVisible }, () => this[input].focus());\r\n    };\r\n\r\n    handleInputChange = (e, type) => {\r\n        let { inputValue } = this.state;\r\n        inputValue[type] = e.target.value;\r\n        this.setState({ inputValue });\r\n    };\r\n\r\n    handleInputConfirm = (type) => {\r\n        let { tags, inputValue, inputVisible } = this.state;\r\n        if (inputValue[type] && tags[type].indexOf(inputValue[type]) === -1) {\r\n            tags[type] = [...tags[type], inputValue[type]];\r\n        }\r\n        inputVisible[type] = false;\r\n        inputValue[type] = '';\r\n        this.setState({\r\n            tags,\r\n            inputVisible,\r\n            inputValue,\r\n        });\r\n    };\r\n\r\n    saveInputRefLang = (input) => (this.inputlang = input);\r\n    saveInputRefServices = (input) => (this.inputservices = input);\r\n    saveInputRefServicesFr = (input) => (this.inputservicesFr = input);\r\n\r\n    parseTime(time) {\r\n        if (time !=\"NA\") {\r\n            if (!time) {\r\n                return true;\r\n            }\r\n            let parsed = time.split('-');\r\n            if (parsed.length !== 2) {\r\n                return false;\r\n            }\r\n\r\n            let start = parsed[0].split(':');\r\n            if (start.length !== 2 || isNaN(start[0]) || isNaN(start[1])) {\r\n                return false;\r\n            }\r\n            let end = parsed[1].split(':');\r\n            if (end.length !== 2 || isNaN(end[0]) || isNaN(end[1])) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getHours(time, last) {\r\n        if (time) {\r\n            if (this.parseTime(time)) {\r\n                if (last) {\r\n                    return `{${time}}`;\r\n                }\r\n                else {\r\n                    return `{${time}},`;\r\n                }\r\n            }\r\n            else {\r\n                return false\r\n            }\r\n        }\r\n        else {\r\n            if (last) {\r\n                return `{NA}`;\r\n            }\r\n            else {\r\n                return `{NA},`;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n\r\n            // Build business hours string\r\n            let hours = \"{\";\r\n            \r\n            if (Array.isArray(values.hours_sun)) {\r\n                values.hours_sun = values.hours_sun[0];\r\n            }\r\n            if (Array.isArray(values.hours_mon)) {\r\n                values.hours_mon = values.hours_mon[0];\r\n            }\r\n            if (Array.isArray(values.hours_tue)) {\r\n                values.hours_tue = values.hours_tue[0];\r\n            }\r\n            if (Array.isArray(values.hours_wed)) {\r\n                values.hours_wed = values.hours_wed[0];\r\n            }\r\n            if (Array.isArray(values.hours_thu)) {\r\n                values.hours_thu = values.hours_thu[0];\r\n            }\r\n            if (Array.isArray(values.hours_fri)) {\r\n                values.hours_fri = values.hours_fri[0];\r\n            }\r\n            if (Array.isArray(values.hours_sat)) {\r\n                values.hours_sat = values.hours_sat[0];\r\n            }\r\n            if (this.getHours(values.hours_sun) && this.getHours(values.hours_mon) && this.getHours(values.hours_tue) && this.getHours(values.hours_wed) && this.getHours(values.hours_thu) && this.getHours(values.hours_fri) && this.getHours(values.hours_sat)) {\r\n                hours += this.getHours(values.hours_sun, false);\r\n                hours += this.getHours(values.hours_mon, false);\r\n                hours += this.getHours(values.hours_tue, false);\r\n                hours += this.getHours(values.hours_wed, false);\r\n                hours += this.getHours(values.hours_thu, false);\r\n                hours += this.getHours(values.hours_fri, false);\r\n                hours += this.getHours(values.hours_sat, true);\r\n            }\r\n            else {\r\n                return alert(\"Business hours must follow the format HH:mm-HH:mm\");\r\n            }\r\n            hours += \"}\";\r\n            values.hours = hours;\r\n\r\n            // Build languages and services string\r\n            let lang = this.state.tags.lang.join(',');\r\n            let services = this.state.tags.services.join(',');\r\n            let servicesFr = this.state.tags.servicesFr.join(',');\r\n            \r\n            values.languages_spoken = lang;\r\n            values.services = services;\r\n            values.services_fr = servicesFr;\r\n            const { service_id } = this.props.match.params;\r\n            this.props.dispatch(serviceActions.editServiceRequest({values:values,serviceId:service_id}));\r\n        }\r\n      });\r\n  };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { tags, inputVisible, inputValue } = this.state;\r\n        const { listing } = this.props;\r\n        const { service_id } = this.props.match.params;\r\n        let service = [];\r\n        for(var i = 0; i < listing.length; i++) {\r\n            if (listing[i].service_id == service_id) {\r\n                service.push(listing[i]);\r\n            } \r\n        }\r\n\r\n        const currentService = service[0];\r\n\r\n        if (!currentService) {\r\n            return (<div> No Current Service</div>);\r\n        } \r\n\r\n        return (\r\n        <div className=\"service-form-wrapper\">\r\n            <h1>Edit Service</h1>\r\n            <Form\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                <Form.Item label=\"Service Name\">\r\n                    {\r\n                        getFieldDecorator('name', {initialValue: currentService.name})(\r\n                            <Input\r\n                                style={{width: \"100%\"}}\r\n                            />\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label=\"Primary category\">\r\n                    {getFieldDecorator('primary_cat_id', {initialValue: currentService.cat_id})(\r\n                        <Select\r\n                            placeholder=\"Select\"\r\n                            mode=\"multiple\"\r\n                        >\r\n                            {this.props.primary_category.map((cat, i) => {\r\n                                if(cat !== null ) {\r\n                                    return (\r\n                                        <Option key={i} value={cat.cat_id}>{cat.cat_name}</Option>\r\n                                    );\r\n                                }\r\n                               \r\n                            })}\r\n                        </Select>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Subcategory\">\r\n                    {getFieldDecorator('sub_cat_id', {initialValue: currentService.subcat_id})(\r\n                        <Select\r\n                            placeholder=\"Select\"\r\n                            mode=\"multiple\"\r\n                        >\r\n                            {this.props.subcategory.map((cat, i) => {\r\n                                return (\r\n                                    <Option key={i} value={cat.subcat_id}>{cat.subcat_name}</Option>\r\n                                );\r\n                            })}\r\n                        </Select>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Insurance\">\r\n                    {getFieldDecorator('insur_id', {initialValue: currentService.insur_id})(\r\n                        <Select\r\n                            placeholder=\"Select\"\r\n                            mode=\"multiple\"\r\n                        >\r\n                            {this.props.insurance.map((insur, i) => {\r\n                                return (\r\n                                    <Option key={i} value={insur.insur_id}>{insur.insur_name}</Option>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Languages Spoken\">\r\n                    <div>\r\n                        {tags[\"lang\"].map((tag, index) => {\r\n                            const tagElem = (\r\n                                <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"lang\")}>\r\n                                    {tag}\r\n                                </Tag>\r\n                            );\r\n                            return tagElem;\r\n                        })}\r\n                        {inputVisible[\"lang\"] && (\r\n                            <Input\r\n                                ref={this.saveInputRefLang}\r\n                                type=\"text\"\r\n                                size=\"small\"\r\n                                style={{ width: 78 }}\r\n                                value={inputValue[\"lang\"]}\r\n                                onChange={e => this.handleInputChange(e, \"lang\")}\r\n                                onBlur={() => this.handleInputConfirm(\"lang\")}\r\n                                onPressEnter={() => this.handleInputConfirm(\"lang\")}\r\n                            />\r\n                            )}\r\n                        {!inputVisible[\"lang\"] && (\r\n                            <Tag onClick={() => this.showInput(\"lang\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                                <Icon type=\"plus\" /> Add Language\r\n                            </Tag>\r\n                        )}\r\n                    </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"Address\">\r\n                    {getFieldDecorator('address', {initialValue: currentService.address})(\r\n                        <Input\r\n                            placeholder=\"eg. 123 Avenue du Parc\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Latitude\">\r\n                    {getFieldDecorator('lat', {initialValue: currentService.lat})(\r\n                        <InputNumber\r\n                            style={{width: \"100%\"}}\r\n                            placeholder=\"eg. 45.23424\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Longitude\">\r\n                    {getFieldDecorator('lon', {initialValue: currentService.lon})(\r\n                        <InputNumber\r\n                            style={{width: \"100%\"}}\r\n                            placeholder=\"eg. -73.34535\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Transit\">\r\n                    {getFieldDecorator('transit', {initialValue: currentService.transit})(\r\n                        <Input\r\n                            placeholder=\"eg. Yes, near Place des Arts\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Website\">\r\n                    {getFieldDecorator('website', {initialValue: currentService.website})(\r\n                        <Input\r\n                            placeholder=\"eg. www.example.com\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Phone number\">\r\n                    {getFieldDecorator('phone_num', {initialValue: currentService.phone_num})(\r\n                        <Input\r\n                            placeholder=\"eg. 514-555-4444\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Emergency Number\">\r\n                    {getFieldDecorator('emergency_num', {initialValue: currentService.emergency_num})(\r\n                        <Input\r\n                            placeholder=\"eg. 514-555-4444\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Drop In\">\r\n                    {getFieldDecorator('drop_in', {initialValue: currentService.drop_in})(\r\n                        <Input\r\n                            placeholder=\"eg. Yes\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Services\">\r\n                    <div>\r\n                        {tags[\"services\"].map((tag, index) => {\r\n                            const tagElem = (\r\n                                <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"services\")}>\r\n                                    {tag}\r\n                                </Tag>\r\n                            );\r\n                            return tagElem;\r\n                        })}\r\n                        {inputVisible[\"services\"] && (\r\n                            <Input\r\n                                ref={this.saveInputRefServices}\r\n                                type=\"text\"\r\n                                size=\"small\"\r\n                                style={{ width: 78 }}\r\n                                value={inputValue[\"services\"]}\r\n                                onChange={e => this.handleInputChange(e, \"services\")}\r\n                                onBlur={() => this.handleInputConfirm(\"services\")}\r\n                                onPressEnter={() => this.handleInputConfirm(\"services\")}\r\n                            />\r\n                            )}\r\n                        {!inputVisible[\"services\"] && (\r\n                            <Tag onClick={() => this.showInput(\"services\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                                <Icon type=\"plus\" /> Add Service\r\n                            </Tag>\r\n                        )}\r\n                    </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"Services (FR)\">\r\n                    <div>\r\n                        {tags[\"servicesFr\"].map((tag, index) => {\r\n                            const tagElem = (\r\n                                <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"servicesFr\")}>\r\n                                    {tag}\r\n                                </Tag>\r\n                            );\r\n                            return tagElem;\r\n                        })}\r\n                        {inputVisible[\"servicesFr\"] && (\r\n                            <Input\r\n                                ref={this.saveInputRefServicesFr}\r\n                                type=\"text\"\r\n                                size=\"small\"\r\n                                style={{ width: 120 }}\r\n                                value={inputValue[\"servicesFr\"]}\r\n                                onChange={e => this.handleInputChange(e, \"servicesFr\")}\r\n                                onBlur={() => this.handleInputConfirm(\"servicesFr\")}\r\n                                onPressEnter={() => this.handleInputConfirm(\"servicesFr\")}\r\n                            />\r\n                            )}\r\n                        {!inputVisible[\"servicesFr\"] && (\r\n                            <Tag onClick={() => this.showInput(\"servicesFr\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n                                <Icon type=\"plus\" /> Add Service (FR)\r\n                            </Tag>\r\n                        )}\r\n                    </div>\r\n                </Form.Item>\r\n                <Form.Item label=\"Notes\">\r\n                    {getFieldDecorator('notes', {initialValue: currentService.notes})(\r\n                        <TextArea\r\n                            rows={10}\r\n                            placeholder=\"\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Notes (FR)\">\r\n                    {getFieldDecorator('notes_fr', {initialValue: currentService.notes_fr})(\r\n                        <TextArea\r\n                            rows={10}\r\n                            placeholder=\"\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Verified by\">\r\n                    {getFieldDecorator('verified_by', {initialValue: currentService.verified_by})(\r\n                        <Input\r\n                            placeholder=\"\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                Business Hours:\r\n                <InputGroup compact>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('hours_sun', {initialValue: currentService.hours[0] == 'NA' ? \"\" : currentService.hours[0]})(\r\n                            <Input style={{ width: 150 }} placeholder=\"Sun\" />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('hours_mon', {initialValue: currentService.hours[1] == 'NA' ? \"\" : currentService.hours[1]})(\r\n                            <Input style={{ width: 150 }} placeholder=\"Mon\" />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('hours_tue', {initialValue: currentService.hours[2] == 'NA' ? \"\" : currentService.hours[2]})(\r\n                            <Input style={{ width: 150 }} placeholder=\"Tue\" />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('hours_wed', {initialValue: currentService.hours[3] == 'NA' ? \"\" : currentService.hours[3]})(\r\n                            <Input style={{ width: 150 }} placeholder=\"Wed\" />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('hours_thu', {initialValue: currentService.hours[4] == 'NA' ? \"\" : currentService.hours[4]})(\r\n                            <Input style={{ width: 150 }} placeholder=\"Thu\" />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('hours_fri', {initialValue: currentService.hours[5] == 'NA' ? \"\" : currentService.hours[5]})(\r\n                            <Input style={{ width: 150 }} placeholder=\"Fri\" />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('hours_sat', {initialValue: currentService.hours[6] == 'NA' ? \"\" : currentService.hours[6]})(\r\n                            <Input style={{ width: 150 }} placeholder=\"Sat\" />,\r\n                        )}\r\n                    </Form.Item>\r\n                </InputGroup>\r\n                <Form.Item className=\"cancel-button\">\r\n                    <Button\r\n                        onClick={()=>window.history.back()}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Form.Item>\r\n                <Form.Item className=\"button\">\r\n                    <Button\r\n                        type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div> \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ( state ) => {\r\n    const { listing, primary_category, subcategory, insurance, newEdit, status } = state.serviceReducer;\r\n    const { loggedInUser } = state.auth\r\n    return {\r\n        listing, primary_category, subcategory, insurance, loggedInUser, newEdit, status\r\n    }\r\n}\r\nconst EditServiceForm = Form.create()(EditServiceClass);\r\nconst EditService = withRouter(connect(mapStateToProps)(EditServiceForm));\r\nexport default EditService;","// React, routing\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport actionConstants from './redux/actionConstants';\r\nimport { categoryActions } from './redux/actions/categoryActions';\r\n\r\n// Style\r\nimport './home.css';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  state = {\r\n    editing: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{ paddingRight: 24 }}\r\n        onClick={this.toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.columns = [\r\n        {\r\n          title: 'Category ID',\r\n          dataIndex: 'cat_id',\r\n          width: '20%',\r\n          editable: false,\r\n        },\r\n        {\r\n          title: 'Category Name',\r\n          dataIndex: 'cat_name',\r\n          editable: true\r\n        },\r\n        {\r\n          title: 'Action',\r\n          dataIndex: 'action',\r\n          width: '20%',\r\n          render: (text, record) =>\r\n            this.state.dataSource.length >= 1 ? (\r\n              <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.cat_id)}>\r\n                <a>Delete</a>\r\n              </Popconfirm>\r\n            ) : null,\r\n        },\r\n      ];\r\n  \r\n      this.state = {\r\n        dataSource: [],\r\n        count: 0,\r\n        adding: false\r\n      };\r\n\r\n      this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS)) {\r\n            let dataSource = [];\r\n            for (let i=0; i<this.props.primary_category.length; i++) {\r\n                dataSource.push(this.props.primary_category[i]);\r\n                dataSource[i].key = i;\r\n            }\r\n            this.setState({\r\n                dataSource: dataSource,\r\n                count: this.props.primary_category.length\r\n            })\r\n        }\r\n    }\r\n  \r\n    handleDelete = cat_id => {\r\n      const dataSource = [...this.state.dataSource];\r\n      this.setState({ dataSource: dataSource.filter(item => item.cat_id !== cat_id) });\r\n      this.props.dispatch(categoryActions.deletePrimaryCategoryRequest(cat_id))\r\n    };\r\n  \r\n    handleAdd = () => {\r\n      const { count, dataSource } = this.state;\r\n      const newData = {\r\n        key: count,\r\n        cat_id: \"\",\r\n        cat_name: \"\"\r\n      };\r\n      this.setState({\r\n        dataSource: [...dataSource, newData],\r\n        count: count + 1,\r\n        adding: true\r\n      });\r\n    };\r\n  \r\n    handleSave = row => {\r\n      const newData = [...this.state.dataSource];\r\n      const index = newData.findIndex(item => row.key === item.key);\r\n      const item = newData[index];\r\n      newData.splice(index, 1, {\r\n        ...item,\r\n        ...row,\r\n      });\r\n\r\n      if (this.state.adding) {\r\n        this.props.dispatch(categoryActions.createPrimaryCategoryRequest(row));\r\n      }\r\n      else {\r\n        this.props.dispatch(categoryActions.updatePrimaryCategoryRequest(row));\r\n      }\r\n      \r\n      this.setState({ \r\n          dataSource: newData,\r\n          adding: false\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const { dataSource } = this.state;\r\n      const components = {\r\n        body: {\r\n          row: EditableFormRow,\r\n          cell: EditableCell,\r\n        },\r\n      };\r\n      const columns = this.columns.map(col => {\r\n        if (!col.editable) {\r\n          return col;\r\n        }\r\n        return {\r\n          ...col,\r\n          onCell: record => ({\r\n            record,\r\n            editable: col.editable,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            handleSave: this.handleSave,\r\n          }),\r\n        };\r\n      });\r\n      return (\r\n        <div>\r\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\r\n            Add a row\r\n          </Button>\r\n          <Table\r\n            components={components}\r\n            rowClassName={() => 'editable-row'}\r\n            bordered\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { status, primary_category } = state.categoryReducer\r\n    return {\r\n        status, primary_category\r\n    }\r\n}\r\nconst TableComponent = connect(mapStateToProps)(EditableTable);\r\n\r\nclass Category extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataSource: [],\r\n            count: 0\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div className=\"home-wrapper\">\r\n                <TableComponent \r\n                    dataSource={this.state.dataSource}\r\n                    count={this.state.count}\r\n                />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Category);","// React, routing\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport actionConstants from './redux/actionConstants';\r\nimport { categoryActions } from './redux/actions/categoryActions';\r\n\r\n// Style\r\nimport './home.css';\r\nimport { Table, Input, Button, Popconfirm, Form, Select, Divider } from 'antd';\r\nconst { Option } = Select;\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  state = {\r\n    editing: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{ paddingRight: 24 }}\r\n        onClick={this.toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.columns = [\r\n        {\r\n          title: 'Category ID',\r\n          dataIndex: 'subcat_id',\r\n          width: '20%',\r\n          editable: false,\r\n        },\r\n        {\r\n          title: 'Category Name',\r\n          dataIndex: 'subcat_name',\r\n          editable: true\r\n        },\r\n        {\r\n            title: 'Primary Category',\r\n            dataIndex: 'pc_id',\r\n            render: (record) => (\r\n                <Select defaultValue={record} style={{width: 200}} onChange={this.changePrimaryCategory}>\r\n                    {this.props.primary_category.map((pc, i) => {\r\n                        return (\r\n                            <Option key={i} value={pc.cat_id}>{pc.cat_name}</Option>\r\n                        );\r\n                    })}\r\n                </Select>\r\n            )\r\n        },\r\n        {\r\n          title: 'Action',\r\n          dataIndex: 'action',\r\n          width: '20%',\r\n          render: (text, record) =>\r\n            this.state.dataSource.length >= 1 ? (\r\n                <div>   \r\n                    <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.subcat_id)}>\r\n                        <a>Delete</a>\r\n                    </Popconfirm>\r\n                    <Divider type=\"vertical\"/>\r\n                    <a onClick={()=>this.handleSubmit(record)}>Save</a>\r\n                </div>\r\n              \r\n            ) : null,\r\n        },\r\n      ];\r\n  \r\n      this.state = {\r\n        dataSource: [],\r\n        count: 0,\r\n        adding: false,\r\n        pc_id: 0\r\n      };\r\n\r\n      this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\r\n      this.props.dispatch(categoryActions.getSubcategoryRequest());\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.CREATE_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.UPDATE_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.DELETE_SUBCATEGORY_SUCCESS)) {\r\n            let dataSource = [];\r\n            for (let i=0; i<this.props.subcategory.length; i++) {\r\n                dataSource.push(this.props.subcategory[i]);\r\n                dataSource[i].key = i;\r\n            }\r\n            this.setState({\r\n                dataSource: dataSource,\r\n                count: this.props.subcategory.length,\r\n                adding: false\r\n            })\r\n        }\r\n    }\r\n\r\n    changePrimaryCategory = (value) => {\r\n        this.setState({\r\n            pc_id: value\r\n        })\r\n    }\r\n  \r\n    handleDelete = subcat_id => {\r\n      const dataSource = [...this.state.dataSource];\r\n      this.setState({ dataSource: dataSource.filter(item => item.subcat_id !== subcat_id) });\r\n      this.props.dispatch(categoryActions.deleteSubcategoryRequest(subcat_id))\r\n    };\r\n  \r\n    handleAdd = () => {\r\n      const { count, dataSource } = this.state;\r\n      const newData = {\r\n        key: count,\r\n        subcat_id: \"\",\r\n        subcat_name: \"\",\r\n        pc_id: \"\"\r\n      };\r\n      this.setState({\r\n        dataSource: [...dataSource, newData],\r\n        count: count + 1,\r\n        adding: true\r\n      });\r\n    };\r\n  \r\n    handleSave = row => {\r\n      const newData = [...this.state.dataSource];\r\n      const index = newData.findIndex(item => row.key === item.key);\r\n      const item = newData[index];\r\n      newData.splice(index, 1, {\r\n        ...item,\r\n        ...row,\r\n      });\r\n      \r\n      this.setState({ \r\n          dataSource: newData\r\n      });\r\n    };\r\n\r\n    handleSubmit = row => {\r\n    if(this.state.pc_id !== 0) row.pc_id = this.state.pc_id;\r\n    if (this.state.adding) {\r\n          this.props.dispatch(categoryActions.createSubcategoryRequest(row));\r\n    } else {\r\n      this.props.dispatch(categoryActions.updateSubcategoryRequest(row));\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      const { dataSource } = this.state;\r\n      const components = {\r\n        body: {\r\n          row: EditableFormRow,\r\n          cell: EditableCell,\r\n        },\r\n      };\r\n      const columns = this.columns.map(col => {\r\n        if (!col.editable) {\r\n          return col;\r\n        }\r\n        return {\r\n          ...col,\r\n          onCell: record => ({\r\n            record,\r\n            editable: col.editable,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            handleSave: this.handleSave\r\n          }),\r\n        };\r\n      });\r\n      return (\r\n        <div>\r\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\r\n            Add a row\r\n          </Button>\r\n          <Table\r\n            components={components}\r\n            rowClassName={() => 'editable-row'}\r\n            bordered\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { status, primary_category, subcategory } = state.categoryReducer\r\n    return {\r\n        status, primary_category, subcategory\r\n    }\r\n}\r\nconst TableComponent = connect(mapStateToProps)(EditableTable);\r\n\r\nclass Category extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataSource: [],\r\n            count: 0\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div className=\"home-wrapper\">\r\n                <TableComponent \r\n                    dataSource={this.state.dataSource}\r\n                    count={this.state.count}\r\n                />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Category);","// React, routing\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport actionConstants from './redux/actionConstants';\r\nimport { insuranceActions } from './redux/actions/insuranceActions';\r\n\r\n// Style\r\nimport './home.css';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  state = {\r\n    editing: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{ paddingRight: 24 }}\r\n        onClick={this.toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.columns = [\r\n        {\r\n          title: 'Insurance ID',\r\n          dataIndex: 'insur_id',\r\n          width: '20%',\r\n          editable: false,\r\n        },\r\n        {\r\n          title: 'Insurance Name',\r\n          dataIndex: 'insur_name',\r\n          editable: true\r\n        },\r\n        {\r\n          title: 'Action',\r\n          dataIndex: 'action',\r\n          width: '20%',\r\n          render: (text, record) =>\r\n            this.state.dataSource.length >= 1 ? (\r\n              <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.insur_id)}>\r\n                <a>Delete</a>\r\n              </Popconfirm>\r\n            ) : null,\r\n        },\r\n      ];\r\n  \r\n      this.state = {\r\n        dataSource: [],\r\n        count: 0,\r\n        adding: false\r\n      };\r\n\r\n      this.props.dispatch(insuranceActions.getInsuranceRequest());\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_INSURANCE_SUCCESS || this.props.status === actionConstants.CREATE_INSURANCE_SUCCESS || this.props.status === actionConstants.UPDATE_INSURANCE_SUCCESS || this.props.status === actionConstants.DELETE_INSURANCE_SUCCESS)) {\r\n            let dataSource = [];\r\n            for (let i=0; i<this.props.insurance.length; i++) {\r\n                dataSource.push(this.props.insurance[i]);\r\n                dataSource[i].key = i;\r\n            }\r\n            this.setState({\r\n                dataSource: dataSource,\r\n                count: this.props.insurance.length\r\n            })\r\n        }\r\n    }\r\n  \r\n    handleDelete = insur_id => {\r\n      const dataSource = [...this.state.dataSource];\r\n      this.setState({ dataSource: dataSource.filter(item => item.insur_id !== insur_id) });\r\n      this.props.dispatch(insuranceActions.deleteInsuranceRequest(insur_id))\r\n    };\r\n  \r\n    handleAdd = () => {\r\n      const { count, dataSource } = this.state;\r\n      const newData = {\r\n        key: count,\r\n        insur_id: \"\",\r\n        insur_name: \"\"\r\n      };\r\n      this.setState({\r\n        dataSource: [...dataSource, newData],\r\n        count: count + 1,\r\n        adding: true\r\n      });\r\n    };\r\n  \r\n    handleSave = row => {\r\n      const newData = [...this.state.dataSource];\r\n      const index = newData.findIndex(item => row.key === item.key);\r\n      const item = newData[index];\r\n      newData.splice(index, 1, {\r\n        ...item,\r\n        ...row,\r\n      });\r\n\r\n      if (this.state.adding) {\r\n        this.props.dispatch(insuranceActions.createInsuranceRequest(row));\r\n      }\r\n      else {\r\n        this.props.dispatch(insuranceActions.updateInsuranceRequest(row));\r\n      }\r\n      \r\n      this.setState({ \r\n          dataSource: newData,\r\n          adding: false\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const { dataSource } = this.state;\r\n      const components = {\r\n        body: {\r\n          row: EditableFormRow,\r\n          cell: EditableCell,\r\n        },\r\n      };\r\n      const columns = this.columns.map(col => {\r\n        if (!col.editable) {\r\n          return col;\r\n        }\r\n        return {\r\n          ...col,\r\n          onCell: record => ({\r\n            record,\r\n            editable: col.editable,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            handleSave: this.handleSave,\r\n          }),\r\n        };\r\n      });\r\n      return (\r\n        <div>\r\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\r\n            Add a row\r\n          </Button>\r\n          <Table\r\n            components={components}\r\n            rowClassName={() => 'editable-row'}\r\n            bordered\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { status, insurance } = state.insuranceReducer\r\n    return {\r\n        status, insurance\r\n    }\r\n}\r\nconst TableComponent = connect(mapStateToProps)(EditableTable);\r\n\r\nclass Insurance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"insurancerander\")\r\n        return ( \r\n            <div className=\"home-wrapper\">\r\n                <TableComponent/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Insurance);","// React, Routing\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { serviceActions } from './redux/actions/serviceActions';\r\nimport { categoryActions } from './redux/actions/categoryActions';\r\nimport { insuranceActions } from './redux/actions/insuranceActions';\r\nimport actionConstants from './redux/actionConstants';\r\nimport CardTemplate from './CardTemplate.jsx';\r\n//Style\r\nimport { Input } from 'antd';\r\nconst { Search } = Input;\r\nclass ListServiceClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(serviceActions.getServiceRequest());\r\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\r\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\r\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_FAILURE) {\r\n            alert(\"ERROR SAVING\");\r\n        }\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_SUCCESS ) {\r\n            alert(\"Service verifying successfully\");\r\n            window.location.reload(true); \r\n        }\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.DELETE_SERVICE_SUCCESS ) {\r\n            alert(\"Service delelting successfully\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Card_Container\">\r\n                <Search\r\n                    placeholder=\"search service\"\r\n                    onChange={event => {\r\n                        this.setState({filter: event.target.value})\r\n                    }}\r\n                    className=\"search-bar\"\r\n                />\r\n                {this.props.listing.length > 0 \r\n                    ?    \r\n                        this.props.listing.map((service, i) => {\r\n                            if (!this.props.listing[i].verified_by && this.props.listing[i].name) {\r\n                                let lowerCaseFilter = this.state.filter.toLowerCase();\r\n                                if ((this.props.listing[i].name).toLowerCase().indexOf(lowerCaseFilter)>-1) {\r\n                                    return(\r\n                                        <CardTemplate \r\n                                            pageBelonging={\"listServiceSuggestionPage\"}\r\n                                            listing={service}\r\n                                            key={i}\r\n                                        />\r\n                                    )\r\n                                }\r\n                            }\r\n                        })\r\n                    \r\n                    : <h1>No Suggestion service</h1>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { listing, primary_category, subcategory, insurance, status } = state.serviceReducer;\r\n    return {\r\n        listing, primary_category, subcategory, insurance, status\r\n    }\r\n}\r\nconst ListService = connect(mapStateToProps)(ListServiceClass);\r\nexport default ListService;","// React, Routing\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { feedbackActions } from './redux/actions/feedbackActions';\r\nimport actionConstants from './redux/actionConstants';\r\n//Style\r\nimport { Row, Collapse, Card, Button } from 'antd';\r\nconst { Panel } = Collapse;\r\n\r\nclass ListReportedErrorClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(feedbackActions.getReportedErrorRequest());\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.DELETE_REPORTED_ERROR_SUCCESS ) {\r\n            alert(\"Item delelting successfully\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                {this.props.reported_Error && this.props.reported_Error.map((item, i) => {\r\n                    if (item.email && item.content) {\r\n                        return(\r\n                            <Row  key={i}>\r\n                                <Card>\r\n                                    <Collapse\r\n                                        bordered={false}\r\n                                    >\r\n                                        <Panel header={i+1} style={{border:0}}>                         \r\n                                            <Row>\r\n                                                <Button \r\n                                                    onClick = {() => {\r\n                                                            this.props.dispatch(feedbackActions.deleteReportedErrorRequest({Id: item.id}));\r\n                                                        }}\r\n                                                >\r\n                                                    Delete Reported Error\r\n                                                </Button>\r\n                                            </Row>\r\n\r\n                                            <table>\r\n                                                <tbody>\r\n                                                    <tr className=\"light-row\">\r\n                                                        <td>Email:</td>\r\n                                                        <td>{item.email}</td>\r\n                                                    </tr>\r\n                                                    <tr className=\"light-row\">\r\n                                                        <td>Message:</td>\r\n                                                        <td>{item.content}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </Panel>\r\n                                    </Collapse>\r\n                                </Card>\r\n                            </Row>  \r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { reported_Error } = state.feedbackReducer;\r\n    return {\r\n        reported_Error\r\n    }\r\n}\r\nconst ListReportedError = connect(mapStateToProps)(ListReportedErrorClass);\r\nexport default ListReportedError;","// React, Routing\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchTermActions } from './redux/actions/searchTermActions';\r\n\r\n//Style\r\nimport { Table, Tag } from 'antd';\r\n\r\nconst { Column } = Table;\r\n\r\n\r\nclass ListSearchTermClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formatedSearchTerms : null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(searchTermActions.getSearchTermRequest());\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        if (this.props.searchTerm && this.props.searchTerm.length !== 0 && this.props.searchTerm !== prevProps.searchTerm) {\r\n            let formatedSearchTerm = [];\r\n            const keys = Object.keys(this.props.searchTerm[0]);\r\n            this.props.searchTerm.forEach(searchTerm => {\r\n                let searchTermData = { data:[] };\r\n                searchTermData.frequency = searchTerm[\"frequency\"];\r\n                keys.forEach ( key => {\r\n                    if (searchTerm[key] && key !== 'frequency' && key !== 'id' ) {\r\n                        searchTermData.data.push(`${[key]} : ${searchTerm[key]} `);\r\n                    }\r\n                })\r\n                if (searchTermData.data && searchTermData.data.length !== 0) {\r\n                    formatedSearchTerm.push(searchTermData);\r\n                }\r\n            })\r\n            this.setState({formatedSearchTerms : formatedSearchTerm});\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.formatedSearchTerms\r\n                ? (\r\n                    <Table dataSource={this.state.formatedSearchTerms}>\r\n                            <Column\r\n                                title=\"Term\"\r\n                                dataIndex=\"data\"\r\n                                key=\"term\"\r\n                                render={(data) => (\r\n                                        <span>\r\n                                            {data.map(tag => ( \r\n                                                <Tag color=\"blue\">\r\n                                                    {tag}\r\n                                                </Tag>\r\n                                            ))}\r\n                                        </span>\r\n                                )}\r\n                            />\r\n                            <Column title=\"Frequency\" dataIndex=\"frequency\" key=\"frequency\" />\r\n                    </Table>\r\n                    ) \r\n                :(\r\n                    <div>No Searching Term History</div>\r\n                )\r\n                }      \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const searchTerm = state.searchTermReducers.Search_Term;\r\n    return {searchTerm};\r\n}\r\nconst ListSearchTerm = connect(mapStateToProps)(ListSearchTermClass);\r\nexport default ListSearchTerm;","// React, routing\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Switch, HashRouter} from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\r\nimport { withRouter, Router } from 'react-router';\r\n\r\n// Redux\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport {Provider, connect } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './redux/sagas/rootSaga.js';\r\nimport rootReducer from './redux/reducers/rootReducer.js';\r\nimport { authActions } from './redux/actions/authActions';\r\nimport { searchTermActions } from './redux/actions/searchTermActions';\r\nimport  actionConstants from './redux/actionConstants';\r\n\r\n// Style\r\nimport { Layout, ConfigProvider, Row, Col, Button, Badge } from 'antd';\r\nimport en_US from 'antd/lib/locale-provider/en_US';\r\n\r\n// Components\r\nimport Home from \"./home.jsx\";\r\nimport NewService from \"./newService.jsx\";\r\nimport Login from \"./login.jsx\";\r\nimport EditService from \"./editService.jsx\";\r\nimport Category from \"./category.jsx\";\r\nimport Subcategory from \"./subcategory.jsx\";\r\nimport Insurance from \"./insurance.jsx\";\r\nimport ListServiceSuggestion from './listServiceSuggestion';\r\nimport ListReportedError from './listReportedError';\r\nimport ListSearchTerm from './listSearchTerm';\r\nimport { stat } from 'fs';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\nconst history = createBrowserHistory({basename: process.env.REACT_APP_BASE_NAME || \"\"});\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n    rootReducer(history),\r\n    applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// (na) console log the state\r\nconst unsubscribe = store.subscribe(()=>console.log(store.getState()));\r\n\r\nclass IndexClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    signOut = () => {\r\n        const { dispatch } = this.props;\r\n        dispatch(authActions.signOutRequest());\r\n    }\r\n\r\n    backHome = () => {\r\n         window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/#/home\";\r\n    }\r\n\r\n    getCookie() {\r\n        var nameEQ = \"token\" + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for(var i=0;i < ca.length;i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n            if (c.indexOf(nameEQ) == 0){\r\n                return c.substring(nameEQ.length,c.length);\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n    \r\n    countSearchTerm = (listing) =>{\r\n        let suggestionServiceNumber = 0;\r\n        if (listing){\r\n            suggestionServiceNumber = listing.length;\r\n        }\r\n        return suggestionServiceNumber;\r\n    }\r\n\r\n    showButton(){\r\n        if (this.props.loggedin){\r\n            return ( \r\n                <div style={{ display: \"inline-block\", float:\"right\"}}>\r\n                    <Button\r\n                        style={{ marginRight:\"20px\"}}\r\n                        className=\"menu-option\"\r\n                        onClick={this.backHome}\r\n                    >\r\n                        Home\r\n                    </Button>\r\n                    <Badge count={this.countSearchTerm(this.props.searchTerm)}>\r\n                        <a href=\"/#/ListSearchTerm\"> <Button >Review Search Term</Button> </a>\r\n                    </Badge>\r\n                    <Button\r\n                        style={{ marginLeft:\"20px\"}}\r\n                        className=\"menu-option\"\r\n                        onClick={this.signOut}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </div>\r\n            )  \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(authActions.getAuthRequest()); \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.authMessage !== this.props.authMessage && this.props.loggedin) {\r\n                this.props.dispatch(searchTermActions.getSearchTermRequest());       \r\n        };\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <Layout style={{minHeight: \"100vh\"}}>\r\n                <Header\r\n                align=\"middle\"\r\n                >\r\n                    <div style={{color:\"white\"}}>\r\n                    <span  style={{float:\"left\", fontSize:\"25px\"}}>Health & Wellness Map Admin</span>\r\n                    {this.showButton()}\r\n                    </div>\r\n                \r\n                </Header>\r\n                <Content>\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Login} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/home\" component={Home} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/newService\" component={NewService} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/ListServiceSuggestion\" component={ListServiceSuggestion} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/ListReportedError\" component={ListReportedError} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/ListSearchTerm\" component={ListSearchTerm} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/category\" component={Category} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/subcategory\" component={Subcategory} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/insurance\" component={Insurance} />\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route exact path=\"/editService/:service_id\" component={EditService} />\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </Content>\r\n            </Layout>\r\n                        \r\n        )\r\n        \r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const {loggedin, authMessage} = state.auth;\r\n    const searchTerm = state.searchTermReducers.Search_Term;\r\n    return {loggedin, searchTerm, authMessage};\r\n}\r\nconst Index = connect(mapStateToProps)(IndexClass);\r\nexport default Index;\r\n","// React, routing\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Switch} from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\r\nimport { withRouter, Router } from 'react-router';\r\n\r\n// Redux\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport {Provider, connect } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './redux/sagas/rootSaga.js';\r\nimport rootReducer from './redux/reducers/rootReducer.js';\r\nimport { authActions } from './redux/actions/authActions';\r\nimport  actionConstants from './redux/actionConstants';\r\n\r\n// Style\r\nimport en_US from 'antd/lib/locale-provider/en_US';\r\nimport { Layout, ConfigProvider, Row, Col, Button } from 'antd';\r\nimport Index from './index.jsx';\r\nimport './App.css';\r\n\r\nconst history = createBrowserHistory({basename: process.env.REACT_APP_BASE_NAME || \"\"});\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n    rootReducer(history),\r\n    applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// (na) console log the state\r\n// const unsubscribe = store.subscribe(()=>console.log(store.getState()));\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ConfigProvider locale={en_US}>\r\n          <Provider store={store}>\r\n              <ConnectedRouter history={history}> \r\n                <Index />\r\n              </ConnectedRouter>\r\n          </Provider>\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}