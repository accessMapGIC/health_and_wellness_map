{"version":3,"sources":["redux/actionConstants.js","redux/actions/serviceActions.js","redux/sagas/serviceSagas.js","redux/actions/authActions.js","redux/sagas/authSagas.js","redux/actions/categoryActions.js","redux/sagas/categorySagas.js","redux/actions/insuranceActions.js","redux/sagas/insuranceSagas.js","redux/actions/feedbackActions.js","redux/sagas/feedbackSagas.js","redux/actions/searchTermActions.js","redux/sagas/searchTermSagas.js","redux/sagas/rootSaga.js","redux/reducers/initialState.js","redux/reducers/serviceReducer.js","redux/reducers/authReducers.js","redux/reducers/categoryReducer.js","redux/reducers/insuranceReducer.js","redux/reducers/feedbackReducers.js","redux/reducers/searchTermReducers.js","redux/reducers/rootReducer.js","CardTemplate.jsx","listService.jsx","home.jsx","newService.jsx","login.jsx","editService.jsx","category.jsx","subcategory.jsx","insurance.jsx","listServiceSuggestion.jsx","listReportedError.jsx","listSearchTerm.jsx","index.jsx","App.js","serviceWorker.js","index.js"],"names":["CREATE_PRIMARY_CATEGORY_REQUEST","CREATE_PRIMARY_CATEGORY_SUCCESS","CREATE_PRIMARY_CATEGORY_FAILURE","GET_PRIMARY_CATEGORY_REQUEST","GET_PRIMARY_CATEGORY_SUCCESS","GET_PRIMARY_CATEGORY_FAILURE","UPDATE_PRIMARY_CATEGORY_REQUEST","UPDATE_PRIMARY_CATEGORY_SUCCESS","UPDATE_PRIMARY_CATEGORY_FAILURE","DELETE_PRIMARY_CATEGORY_REQUEST","DELETE_PRIMARY_CATEGORY_SUCCESS","DELETE_PRIMARY_CATEGORY_FAILURE","CREATE_SUBCATEGORY_REQUEST","CREATE_SUBCATEGORY_SUCCESS","CREATE_SUBCATEGORY_FAILURE","GET_SUBCATEGORY_REQUEST","GET_SUBCATEGORY_SUCCESS","GET_SUBCATEGORY_FAILURE","UPDATE_SUBCATEGORY_REQUEST","UPDATE_SUBCATEGORY_SUCCESS","UPDATE_SUBCATEGORY_FAILURE","DELETE_SUBCATEGORY_REQUEST","DELETE_SUBCATEGORY_SUCCESS","DELETE_SUBCATEGORY_FAILURE","CREATE_INSURANCE_REQUEST","CREATE_INSURANCE_SUCCESS","CREATE_INSURANCE_FAILURE","GET_INSURANCE_REQUEST","GET_INSURANCE_SUCCESS","GET_INSURANCE_FAILURE","UPDATE_INSURANCE_REQUEST","UPDATE_INSURANCE_SUCCESS","UPDATE_INSURANCE_FAILURE","DELETE_INSURANCE_REQUEST","DELETE_INSURANCE_SUCCESS","DELETE_INSURANCE_FAILURE","CREATE_SERVICE_REQUEST","CREATE_SERVICE_SUCCESS","CREATE_SERVICE_FAILURE","GET_SERVICE_REQUEST","GET_SERVICE_SUCCESS","GET_SERVICE_FAILURE","EDIT_SERVICE_REQUEST","EDIT_SERVICE_SUCCESS","EDIT_SERVICE_FAILURE","DELETE_SERVICE_REQUEST","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_FAILURE","GET_REPORTED_ERROR_REQUEST","GET_REPORTED_ERROR_SUCCESS","GET_REPORTED_ERROR_FAILURE","DELETE_REPORTED_ERROR_REQUEST","DELETE_REPORTED_ERROR_SUCCESS","DELETE_REPORTED_ERROR_FAILURE","GET_SEARCH_TERM_REQUEST","GET_SEARCH_TERM_SUCCESS","GET_SEARCH_TERM_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","GET_AUTH_REQUEST","GET_AUTH_SUCCESS","GET_AUTH_FAILURE","serviceActions","createServiceRequest","payload","type","actionConstants","createServiceSuccess","createServiceFailure","getServiceRequest","getServiceSuccess","getServiceFailure","editServiceRequest","editServiceSuccess","editServiceFailure","deleteServiceRequest","deleteServiceSuccess","deleteServiceFailure","watchCreateService","workerCreateService","watchGetService","workerGetService","watchEditService","workerEditService","watchDeleteService","workerDeleteService","base_url","process","getCookie","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","takeLatest","params","call","createService","response","status","put","message","window","location","href","a","fetch","credentials","method","body","JSON","stringify","headers","resp","json","respBody","getService","editService","serviceId","deleteService","authActions","signInRequest","signInSuccess","signInFailure","error","getAuthRequest","getAuthSuccess","getAuthFailure","signOutRequest","signOutSuccess","signOutFailure","watchSignIn","workerSignIn","watchSignOut","workerSignOut","watchGetAuth","workerGetAuth","signIn","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","token","signOut","getAuth","email","categoryActions","createPrimaryCategoryRequest","createPrimaryCategorySuccess","createPrimaryCategoryFailure","getPrimaryCategoryRequest","getPrimaryCategorySuccess","getPrimaryCategoryFailure","updatePrimaryCategoryRequest","updatePrimaryCategorySuccess","updatePrimaryCategoryFailure","deletePrimaryCategoryRequest","deletePrimaryCategorySuccess","deletePrimaryCategoryFailure","createSubcategoryRequest","createSubcategorySuccess","createSubcategoryFailure","getSubcategoryRequest","getSubcategorySuccess","getSubcategoryFailure","updateSubcategoryRequest","updateSubcategorySuccess","updateSubcategoryFailure","deleteSubcategoryRequest","deleteSubcategorySuccess","deleteSubcategoryFailure","watchCreatePrimaryCategory","workerCreatePrimaryCategory","watchGetPrimaryCategory","workerGetPrimaryCategory","watchUpdatePrimaryCategory","workerUpdatePrimaryCategory","watchDeletePrimaryCategory","workerDeletePrimaryCategory","watchCreateSubcategory","workerCreateSubcategory","watchGetSubcategory","workerGetSubcategory","watchUpdateSubcategory","workerUpdateSubcategory","watchDeleteSubcategory","workerDeleteSubcategory","createPrimaryCategory","getPrimaryCategory","updatePrimaryCategory","cat_id","deletePrimaryCategory","createSubcategory","getSubcategory","updateSubcategory","subcat_id","deleteSubcategory","insuranceActions","createInsuranceRequest","createInsuranceSuccess","createInsuranceFailure","getInsuranceRequest","getInsuranceSuccess","getInsuranceFailure","updateInsuranceRequest","updateInsuranceSuccess","updateInsuranceFailure","deleteInsuranceRequest","deleteInsuranceSuccess","deleteInsuranceFailure","watchCreateInsurance","workerCreateInsurance","watchGetInsurance","workerGetInsurance","watchUpdateInsurance","workerUpdateInsurance","watchDeleteInsurance","workerDeleteInsurance","createInsurance","getInsurance","updateInsurance","deleteInsurance","feedbackActions","getReportedErrorRequest","getReportedErrorSuccess","getReportedErrorFailure","deleteReportedErrorRequest","deleteReportedErrorSuccess","deleteReportedErrorFailure","watchGetReportedError","workerGetReportedError","watchDeleteReportedError","workerDeleteReportedError","getReportedError","deleteReportedError","Id","searchTermActions","getSearchTermRequest","getSearchTermSuccess","getSearchTermFailure","watchGetSearchTerm","workerGetSearchTerm","getSearchTerm","rootSaga","all","serviceInitialState","primary_category","subcategory","insurance","service","listing","newEdit","authInitialState","loggedin","authMessage","authError","loggedInUser","loadingSignIn","loadingSignUp","loadingSignOut","categoryInitialState","insuranceInitialState","feedbackInitialState","searchTermInitialState","test","state","action","newService","filter","item","service_id","auth","category","concat","newPrimaryCategory","index","findIndex","newSubcategory","newInsurance","insur_id","feedback","reported_Error","newReported_Error","id","searchTerm","Search_Term","history","combineReducers","router","connectRouter","serviceReducer","categoryReducer","insuranceReducer","feedbackReducer","searchTermReducers","Panel","Collapse","CardTemplateComponent","props","this","pageBelonging","insuranceName","find","primaryCategory","primary_cat_id","subCategory","sub_cat_id","bordered","header","style","border","onClick","verified_by","dispatch","values","to","className","moment","last_verified","format","cat_name","subcat_name","insur_name","languages_spoken","adress","lat","lon","transit","website","phone_num","emergency_num","drop_in","services","services_fr","notes","notes_fr","hours","React","Component","NewCardTemplateComponent","withRouter","connect","Search","Input","ListServiceClass","placeholder","onChange","event","setState","target","console","log","map","lowerCaseFilter","toLowerCase","key","ListService","HomeClass","countSuggestionService","suggestionServiceNumber","countReportedError","reportedErrorNumber","content","prevProps","count","Home","Option","Select","TextArea","InputGroup","Group","NewServiceClass","handleClose","removedTag","newTags","tags","tag","showInput","inputVisible","input","focus","handleInputChange","e","inputValue","handleInputConfirm","saveInputRefLang","inputlang","saveInputRefServices","inputservices","saveInputRefServicesFr","inputservicesFr","handleSubmit","preventDefault","form","validateFields","err","getHours","hours_sun","hours_mon","hours_tue","hours_wed","hours_thu","hours_fri","hours_sat","alert","lang","join","servicesFr","detail","time","parsed","start","isNaN","end","last","parseTime","getFieldDecorator","onSubmit","Item","label","cat","insur","closable","onClose","ref","size","width","onBlur","onPressEnter","background","borderStyle","rows","compact","htmlType","ServiceForm","Form","create","NewService","LogInClass","password","rules","required","prefix","color","loading","LogInForm","LogIn","EditServiceClass","Array","isArray","match","push","currentService","languages","Service","Services_fr","prevState","initialValue","address","back","EditServiceForm","EditService","EditableContext","createContext","EditableFormRow","Provider","EditableCell","editing","toggleEdit","save","record","handleSave","currentTarget","renderCell","children","dataIndex","title","margin","node","paddingRight","editable","restProps","Consumer","EditableTable","handleDelete","dataSource","handleAdd","newData","adding","row","splice","columns","render","text","onConfirm","components","cell","col","onCell","marginBottom","rowClassName","pagination","TableComponent","Category","changePrimaryCategory","pc_id","defaultValue","pc","Insurance","ListReportedErrorClass","ListReportedError","Column","Table","ListSearchTermClass","formatedSearchTerms","formatedSearchTerm","keys","Object","forEach","searchTermData","data","frequency","ListSearchTerm","Header","Layout","Content","Sider","createBrowserHistory","basename","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","subscribe","getState","IndexClass","backHome","countSearchTerm","display","float","marginRight","marginLeft","minHeight","align","fontSize","showButton","exact","path","component","Login","ListServiceSuggestion","Subcategory","Index","App","locale","en_US","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53858ec3.chunk.js","sourcesContent":["export default {\n    CREATE_PRIMARY_CATEGORY_REQUEST: \"CREATE_PRIMARY_CATEGORY_REQUEST\",\n    CREATE_PRIMARY_CATEGORY_SUCCESS: \"CREATE_PRIMARY_CATEGORY_SUCCESS\",\n    CREATE_PRIMARY_CATEGORY_FAILURE: \"CREATE_PRIMARY_CATEGORY_FAILURE\",\n    \n    GET_PRIMARY_CATEGORY_REQUEST: \"GET_PRIMARY_CATEGORY_REQUEST\",\n    GET_PRIMARY_CATEGORY_SUCCESS: \"GET_PRIMARY_CATEGORY_SUCCESS\",\n    GET_PRIMARY_CATEGORY_FAILURE: \"GET_PRIMARY_CATEGORY_FAILURE\",\n\n    UPDATE_PRIMARY_CATEGORY_REQUEST: \"UPDATE_PRIMARY_CATEGORY_REQUEST\",\n    UPDATE_PRIMARY_CATEGORY_SUCCESS: \"UPDATE_PRIMARY_CATEGORY_SUCCESS\",\n    UPDATE_PRIMARY_CATEGORY_FAILURE: \"UPDATE_PRIMARY_CATEGORY_FAILURE\",\n\n    DELETE_PRIMARY_CATEGORY_REQUEST: \"DELETE_PRIMARY_CATEGORY_REQUEST\",\n    DELETE_PRIMARY_CATEGORY_SUCCESS: \"DELETE_PRIMARY_CATEGORY_SUCCESS\",\n    DELETE_PRIMARY_CATEGORY_FAILURE: \"DELETE_PRIMARY_CATEGORY_FAILURE\",\n\n    CREATE_SUBCATEGORY_REQUEST: \"CREATE_SUBCATEGORY_REQUEST\",\n    CREATE_SUBCATEGORY_SUCCESS: \"CREATE_SUBCATEGORY_SUCCESS\",\n    CREATE_SUBCATEGORY_FAILURE: \"CREATE_SUBCATEGORY_FAILURE\",\n\n    GET_SUBCATEGORY_REQUEST: \"GET_SUBCATEGORY_REQUEST\",\n    GET_SUBCATEGORY_SUCCESS: \"GET_SUBCATEGORY_SUCCESS\",\n    GET_SUBCATEGORY_FAILURE: \"GET_SUBCATEGORY_FAILURE\",\n\n    UPDATE_SUBCATEGORY_REQUEST: \"UPDATE_SUBCATEGORY_REQUEST\",\n    UPDATE_SUBCATEGORY_SUCCESS: \"UPDATE_SUBCATEGORY_SUCCESS\",\n    UPDATE_SUBCATEGORY_FAILURE: \"UPDATE_SUBCATEGORY_FAILURE\",\n\n    DELETE_SUBCATEGORY_REQUEST: \"DELETE_SUBCATEGORY_REQUEST\",\n    DELETE_SUBCATEGORY_SUCCESS: \"DELETE_SUBCATEGORY_SUCCESS\",\n    DELETE_SUBCATEGORY_FAILURE: \"DELETE_SUBCATEGORY_FAILURE\",\n\n    CREATE_INSURANCE_REQUEST: \"CREATE_INSURANCE_REQUEST\",\n    CREATE_INSURANCE_SUCCESS: \"CREATE_INSURANCE_SUCCESS\",\n    CREATE_INSURANCE_FAILURE: \"CREATE_INSURANCE_FAILURE\",\n\n    GET_INSURANCE_REQUEST: \"GET_INSURANCE_REQUEST\",\n    GET_INSURANCE_SUCCESS: \"GET_INSURANCE_SUCCESS\",\n    GET_INSURANCE_FAILURE: \"GET_INSURANCE_FAILURE\",\n\n    UPDATE_INSURANCE_REQUEST: \"UPDATE_INSURANCE_REQUEST\",\n    UPDATE_INSURANCE_SUCCESS: \"UPDATE_INSURANCE_SUCCESS\",\n    UPDATE_INSURANCE_FAILURE: \"UPDATE_INSURANCE_FAILURE\",\n\n    DELETE_INSURANCE_REQUEST: \"DELETE_INSURANCE_REQUEST\",\n    DELETE_INSURANCE_SUCCESS: \"DELETE_INSURANCE_SUCCESS\",\n    DELETE_INSURANCE_FAILURE: \"DELETE_INSURANCE_FAILURE\",\n\n    CREATE_SERVICE_REQUEST: \"CREATE_SERVICE_REQUEST\",\n    CREATE_SERVICE_SUCCESS: \"CREATE_SERVICE_SUCCESS\",\n    CREATE_SERVICE_FAILURE: \"CREATE_SERVICE_FAILURE\",\n\n    GET_SERVICE_REQUEST: \"GET_SERVICE_REQUEST\",\n    GET_SERVICE_SUCCESS: \"GET_SERVICE_SUCCESS\",\n    GET_SERVICE_FAILURE: \"GET_SERVICE_FAILURE\",\n\n    EDIT_SERVICE_REQUEST: \"EDIT_SERVICE_REQUEST\",\n    EDIT_SERVICE_SUCCESS: \"EDIT_SERVICE_SUCCESS\",\n    EDIT_SERVICE_FAILURE: \"EDIT_SERVICE_FAILURE\", \n\n    DELETE_SERVICE_REQUEST: \"DELETE_SERVICE_REQUEST\",\n    DELETE_SERVICE_SUCCESS: \"DELETE_SERVICE_SUCCESS\",\n    DELETE_SERVICE_FAILURE: \"DELETE_SERVICE_FAILURE\",\n    \n    GET_REPORTED_ERROR_REQUEST: \"GET_REPORTED_ERROR_REQUEST\",\n    GET_REPORTED_ERROR_SUCCESS: \"GET_REPORTED_ERROR_SUCCESS\",\n    GET_REPORTED_ERROR_FAILURE: \"GET_REPORTED_ERROR_FAILURE\",\n\n    DELETE_REPORTED_ERROR_REQUEST: \"DELETE_REPORTED_ERROR_REQUEST\",\n    DELETE_REPORTED_ERROR_SUCCESS: \"DELETE_REPORTED_ERROR_SUCCESS\",\n    DELETE_REPORTED_ERROR_FAILURE: \"DELETE_REPORTED_ERROR_FAILURE\",\n\n    GET_SEARCH_TERM_REQUEST: \"GET_SEARCH_TERM_REQUEST\",\n    GET_SEARCH_TERM_SUCCESS: \"GET_SEARCH_TERM_SUCCESS\",\n    GET_SEARCH_TERM_FAILURE: \"GET_SEARCH_TERM_FAILURE\",\n\n    // Auth\n    SIGN_IN_REQUEST: 'SIGN_IN_REQUEST',\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n    SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n\n    SIGN_OUT_REQUEST: 'SIGN_OUT_REQUEST',\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n    SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n\n    GET_AUTH_REQUEST: 'GET_AUTH_REQUEST',\n    GET_AUTH_SUCCESS: 'GET_AUTH_SUCCESS',\n    GET_AUTH_FAILURE: 'GET_AUTH_FAILURE',\n\n\n}","import actionConstants from \"../actionConstants\";\n\nexport const serviceActions = {\n    createServiceRequest, createServiceSuccess, createServiceFailure,\n    getServiceRequest, getServiceSuccess, getServiceFailure,\n    editServiceRequest, editServiceSuccess, editServiceFailure,\n    deleteServiceRequest, deleteServiceSuccess, deleteServiceFailure\n};\n\n// Create service\nfunction createServiceRequest(payload) {\n    return {\n        type: actionConstants.CREATE_SERVICE_REQUEST,\n        payload\n    }\n}\n\nfunction createServiceSuccess(payload) {\n    return {\n        type: actionConstants.CREATE_SERVICE_SUCCESS,\n        payload\n    }\n}\n\nfunction createServiceFailure(payload) {\n    return {\n        type: actionConstants.CREATE_SERVICE_FAILURE,\n        payload\n    }\n}\n\n// Get service\nfunction getServiceRequest(payload) {\n    return {\n        type: actionConstants.GET_SERVICE_REQUEST,\n        payload\n    }\n}\n\nfunction getServiceSuccess(payload) {\n    return {\n        type: actionConstants.GET_SERVICE_SUCCESS,\n        payload\n    }\n}\n\nfunction getServiceFailure(payload) {\n    return {\n        type: actionConstants.GET_SERVICE_FAILURE,\n        payload\n    }\n}\n\n//Edit service\nfunction editServiceRequest(payload) {\n    return {\n        type: actionConstants.EDIT_SERVICE_REQUEST,\n        payload\n    }\n}\n\nfunction editServiceSuccess(payload) {\n    return {\n        type: actionConstants.EDIT_SERVICE_SUCCESS,\n        payload\n    }\n}\n\nfunction editServiceFailure(payload) {\n    return {\n        type: actionConstants.EDIT_SERVICE_FAILURE,\n        payload\n    }\n}\n\n//Delete Service\nfunction deleteServiceRequest(payload) {\n    return {\n        type: actionConstants.DELETE_SERVICE_REQUEST,\n        payload\n    }\n}\n\nfunction deleteServiceSuccess(payload) {\n    return {\n        type: actionConstants.DELETE_SERVICE_SUCCESS,\n        payload\n    }\n}\n\nfunction deleteServiceFailure(payload) {\n    return {\n        type: actionConstants.DELETE_SERVICE_FAILURE,\n        payload\n    }\n}","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport actionConstants from \"../actionConstants\";\nimport { serviceActions } from \"../actions/serviceActions\";\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n            var nameEQ = \"token\" + \"=\";\n            var ca = document.cookie.split(';');\n            for(var i=0;i < ca.length;i++) {\n                var c = ca[i];\n                while (c.charAt(0)==' ') c = c.substring(1,c.length);\n                if (c.indexOf(nameEQ) == 0){\n                    return c.substring(nameEQ.length,c.length);\n                } \n            }\n            return null;\n}\n\n// Get primary cat\nexport function* watchGetPrimaryCategory() {\n    yield takeLatest(actionConstants.GET_PRIMARY_CATEGORY_REQUEST, workerGetPrimaryCategory);\n}\nfunction* workerGetPrimaryCategory(params) {\n    try {\n        const response = yield call(getPrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.getPrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(serviceActions.getPrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.getPrimaryCategoryFailure(err));\n    }\n}\nasync function getPrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get subcat\nexport function* watchGetSubcategory() {\n    yield takeLatest(actionConstants.GET_SUBCATEGORY_REQUEST, workerGetSubcategory);\n}\nfunction* workerGetSubcategory(params) {\n    try {\n        const response = yield call(getSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.getSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(serviceActions.getSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.getSubcategoryFailure(err));\n    }\n}\nasync function getSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get insurance\nexport function* watchGetInsurance() {\n    yield takeLatest(actionConstants.GET_INSURANCE_REQUEST, workerGetInsurance);\n}\nfunction* workerGetInsurance(params) {\n    try {\n        const response = yield call(getInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.getInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(serviceActions.getInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.getInsuranceFailure(err));\n    }\n}\nasync function getInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Create service\nexport function* watchCreateService() {\n    yield takeLatest(actionConstants.CREATE_SERVICE_REQUEST, workerCreateService);\n}\nfunction* workerCreateService(params) {\n    try {\n        const response = yield call(createService, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.createServiceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(serviceActions.createServiceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.createServiceFailure(err));\n    }\n}\nasync function createService(payload) {\n    try {\n        let resp = await fetch(`${base_url}/service`, {\n            credentials: \"same-origin\",\n            method: \"post\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get service\nexport function* watchGetService() {\n    yield takeLatest(actionConstants.GET_SERVICE_REQUEST, workerGetService);\n}\nfunction* workerGetService(params) {\n    try {\n        const response = yield call(getService, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.getServiceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(serviceActions.getServiceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.getServiceFailure(err));\n    }\n}\nasync function getService(payload) {\n    try {\n        let resp = await fetch(`${base_url}/services`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Edit service\nexport function* watchEditService() {\n    yield takeLatest(actionConstants.EDIT_SERVICE_REQUEST, workerEditService);\n}\nfunction* workerEditService(params) {\n    try {\n        const response = yield call(editService, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.editServiceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(serviceActions.editServiceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.editServiceFailure(err));\n    }\n}\nasync function editService(payload) {\n    try {\n        let resp = await fetch(`${base_url}/service/${payload.serviceId}`, {\n            credentials: \"same-origin\",\n            method: \"put\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Delete service\nexport function* watchDeleteService() {\n    yield takeLatest(actionConstants.DELETE_SERVICE_REQUEST, workerDeleteService);\n}\nfunction* workerDeleteService(params) {\n    try {\n        const response = yield call(deleteService, params.payload);\n        if (response.status === 200) {\n            yield put(serviceActions.deleteServiceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(serviceActions.deleteServiceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(serviceActions.deleteServiceFailure(err));\n    }\n}\nasync function deleteService(payload) {\n    try {\n        let resp = await fetch(`${base_url}/service/${payload.serviceId}`, {\n            credentials: \"same-origin\",\n            method: \"delete\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}","import actionConstants from \"../actionConstants\";\nexport const authActions = {\n    signInRequest, signInSuccess, signInFailure,\n    getAuthRequest, getAuthSuccess, getAuthFailure,\n    signOutRequest, signOutSuccess, signOutFailure,\n};\n\n\n//Sign in\nfunction signInRequest(payload) {\n    return { \n        type: actionConstants.SIGN_IN_REQUEST, \n        payload\n    } \n}\nfunction signInSuccess(payload) {\n    return { \n        type: actionConstants.SIGN_IN_SUCCESS, \n        payload\n    } \n}\nfunction signInFailure(error) {\n    return { \n        type: actionConstants.SIGN_IN_FAILURE, \n        error\n    } \n}\n    \n//Get auth\nfunction getAuthRequest() {\n    return { \n        type: actionConstants.GET_AUTH_REQUEST, \n    }\n}\nfunction getAuthSuccess(payload) {\n    return { \n        type: actionConstants.GET_AUTH_SUCCESS,\n        payload,\n    } \n}\nfunction getAuthFailure(error) {\n    return { \n        type: actionConstants.GET_AUTH_FAILURE, \n        error\n    } \n}\n\n//Sign out\nfunction signOutRequest() {\n    return {\n        type: actionConstants.SIGN_OUT_REQUEST\n    }\n}\nfunction signOutSuccess() {\n    return { \n        type: actionConstants.SIGN_OUT_SUCCESS\n    } \n}\nfunction signOutFailure(error) {\n    return { \n        type: actionConstants.SIGN_OUT_FAILURE,\n        error\n    } \n}\n\n","import 'whatwg-fetch';\nimport { takeLatest, call, put } from \"redux-saga/effects\";\nimport  actionConstants from '../actionConstants';\nimport { authActions } from '../actions/authActions';\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n    var nameEQ = \"token\" + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0){\n            return c.substring(nameEQ.length,c.length);\n        } \n    }\n    return null;\n}\n\n// Sign in\nexport function* watchSignIn() {\n    yield takeLatest(actionConstants.SIGN_IN_REQUEST, workerSignIn);\n}\n\n// Make signIn API request and check if email/password are correct\nasync function signIn(payload) {\n     \n    try {\n        let resp = await fetch(`${base_url}/signin`, {\n            credentials: \"same-origin\",\n            method: 'post',\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n            }\n        })\n        let status = resp.status;\n        let respBody = await resp.json();\n        return {message: respBody, status: status};\n    }\n    catch (err) {\n        return err;\n    }\n    \n  \n}\n\nfunction setCookie(name,value,days) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=http://localhost:8081/\";\n}\n\n// Make the api call when watcher saga sees the action\nfunction* workerSignIn(params) {\n    try {\n\n        const response = yield call(signIn, params.payload);\n\n        // dispatch a success action to the store \n        if (response.status == 200) {\n            setCookie('token', response.message.token, 60); \n            yield put(authActions.signInSuccess(response.message));\n        }\n        else {\n            yield put(authActions.signInFailure(response.message));\n        }\n    } \n    catch (error) {\n        // dispatch a failure action to the store with the error\n        yield put(authActions.signInFailure(error));\n    }\n}\n\n// Sign out\nexport function* watchSignOut() {\n    yield takeLatest(actionConstants.SIGN_OUT_REQUEST, workerSignOut);\n}\n\nasync function signOut() {\n    try {\n        let resp = await fetch(`${base_url}/logout`, {\n            credentials: \"same-origin\",\n            method: 'get',  \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        if (resp.status == 200) {\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + '/';\n            document.cookie =  `token=; expires=${new Date()}; path=/;`;\n        }\n        return resp;\n    }\n    catch (err) {\n        return err;\n    }\n}\n\n// Make the api call when watcher saga sees the action\nfunction* workerSignOut() {\n    const response = yield call(signOut);\n    \n    try {\n        if (response.status == 200) {\n            yield put(authActions.signOutSuccess());\n        } else {\n            yield put(authActions.signOutFailure(response.message.error));\n        }\n    } \n    catch (error) {\n        yield put(authActions.signOutFailure(error));\n    }\n}\n\n//Get authentication info\nexport function* watchGetAuth() {\n    yield takeLatest(actionConstants.GET_AUTH_REQUEST, workerGetAuth);\n}\n\nasync function getAuth() {\n    try {\n        let resp = await fetch(`${base_url}/auth`, {\n            credentials: \"same-origin\",\n            method: 'post',\n            body: JSON.stringify({type: \"getUserInfo\"}),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            },\n        });\n        let respBody = await resp.json();\n        return respBody.email;\n    }\n    catch (err) {\n        return err;\n    }\n}\n\n// Make the api call when watcher saga sees the action\nfunction* workerGetAuth() {\n    try {\n        //Get auth status and username\n        const response = yield call(getAuth);\n        if(response){\n            yield put(authActions.getAuthSuccess(response));\n        }\n        else {\n            yield put(authActions.getAuthFailure(\"Error in Authentication\"));\n        }\n       \n    } \n    catch (error) {\n        // dispatch a failure action to the store with the error\n        yield put(authActions.getAuthFailure(error));\n    }\n}\n","import actionConstants from \"../actionConstants\";\n\nexport const categoryActions = {\n    createPrimaryCategoryRequest, createPrimaryCategorySuccess, createPrimaryCategoryFailure,\n    getPrimaryCategoryRequest, getPrimaryCategorySuccess, getPrimaryCategoryFailure,\n    updatePrimaryCategoryRequest, updatePrimaryCategorySuccess, updatePrimaryCategoryFailure,\n    deletePrimaryCategoryRequest, deletePrimaryCategorySuccess, deletePrimaryCategoryFailure,\n\n    createSubcategoryRequest, createSubcategorySuccess, createSubcategoryFailure,\n    getSubcategoryRequest, getSubcategorySuccess, getSubcategoryFailure,\n    updateSubcategoryRequest, updateSubcategorySuccess, updateSubcategoryFailure,\n    deleteSubcategoryRequest, deleteSubcategorySuccess, deleteSubcategoryFailure,\n};\n\n// Create primary category\nfunction createPrimaryCategoryRequest(payload) {\n    return {\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction createPrimaryCategorySuccess(payload) {\n    return {\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction createPrimaryCategoryFailure(payload) {\n    return {\n        type: actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Get primary category\nfunction getPrimaryCategoryRequest(payload) {\n    return {\n        type: actionConstants.GET_PRIMARY_CATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction getPrimaryCategorySuccess(payload) {\n    return {\n        type: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction getPrimaryCategoryFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Update primary category\nfunction updatePrimaryCategoryRequest(payload) {\n    return {\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction updatePrimaryCategorySuccess(payload) {\n    return {\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction updatePrimaryCategoryFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Delete primary category\nfunction deletePrimaryCategoryRequest(payload) {\n    return {\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction deletePrimaryCategorySuccess(payload) {\n    return {\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction deletePrimaryCategoryFailure(payload) {\n    return {\n        type: actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Create subcategory\nfunction createSubcategoryRequest(payload) {\n    return {\n        type: actionConstants.CREATE_SUBCATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction createSubcategorySuccess(payload) {\n    return {\n        type: actionConstants.CREATE_SUBCATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction createSubcategoryFailure(payload) {\n    return {\n        type: actionConstants.CREATE_SUBCATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Get subcategory\nfunction getSubcategoryRequest(payload) {\n    return {\n        type: actionConstants.GET_SUBCATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction getSubcategorySuccess(payload) {\n    return {\n        type: actionConstants.GET_SUBCATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction getSubcategoryFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Update subcategory\nfunction updateSubcategoryRequest(payload) {\n    return {\n        type: actionConstants.UPDATE_SUBCATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction updateSubcategorySuccess(payload) {\n    return {\n        type: actionConstants.UPDATE_SUBCATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction updateSubcategoryFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\n        payload\n    }\n}\n\n// Delete subcategory\nfunction deleteSubcategoryRequest(payload) {\n    return {\n        type: actionConstants.DELETE_SUBCATEGORY_REQUEST,\n        payload\n    }\n}\n\nfunction deleteSubcategorySuccess(payload) {\n    return {\n        type: actionConstants.DELETE_SUBCATEGORY_SUCCESS,\n        payload\n    }\n}\n\nfunction deleteSubcategoryFailure(payload) {\n    return {\n        type: actionConstants.DELETE_SUBCATEGORY_FAILURE,\n        payload\n    }\n}\n\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport actionConstants from \"../actionConstants\";\nimport { categoryActions } from \"../actions/categoryActions\";\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n    var nameEQ = \"token\" + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0){\n            return c.substring(nameEQ.length,c.length);\n        } \n    }\n    return null;\n}\n\n// Create primary cat\nexport function* watchCreatePrimaryCategory() {\n    yield takeLatest(actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST, workerCreatePrimaryCategory);\n}\nfunction* workerCreatePrimaryCategory(params) {\n    try {\n        const response = yield call(createPrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.createPrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(categoryActions.createPrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.createPrimaryCategoryFailure(err));\n    }\n}\nasync function createPrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category`, {\n            credentials: \"same-origin\",\n            method: \"post\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get primary cat\nexport function* watchGetPrimaryCategory() {\n    yield takeLatest(actionConstants.GET_PRIMARY_CATEGORY_REQUEST, workerGetPrimaryCategory);\n}\nfunction* workerGetPrimaryCategory(params) {\n    try {\n        const response = yield call(getPrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.getPrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(categoryActions.getPrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.getPrimaryCategoryFailure(err));\n    }\n}\nasync function getPrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Update primary cat\nexport function* watchUpdatePrimaryCategory() {\n    yield takeLatest(actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST, workerUpdatePrimaryCategory);\n}\nfunction* workerUpdatePrimaryCategory(params) {\n    try {\n        const response = yield call(updatePrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.updatePrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(categoryActions.updatePrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.updatePrimaryCategoryFailure(err));\n    }\n}\nasync function updatePrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category/${payload.cat_id}`, {\n            credentials: \"same-origin\",\n            method: \"put\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Delete primary cat\nexport function* watchDeletePrimaryCategory() {\n    yield takeLatest(actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST, workerDeletePrimaryCategory);\n}\nfunction* workerDeletePrimaryCategory(params) {\n    try {\n        const response = yield call(deletePrimaryCategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.deletePrimaryCategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\n        }\n        else {\n            yield put(categoryActions.deletePrimaryCategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.deletePrimaryCategoryFailure(err));\n    }\n}\nasync function deletePrimaryCategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/primary_category/${payload}`, {\n            credentials: \"same-origin\",\n            method: \"delete\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Create subcat\nexport function* watchCreateSubcategory() {\n    yield takeLatest(actionConstants.CREATE_SUBCATEGORY_REQUEST, workerCreateSubcategory);\n}\nfunction* workerCreateSubcategory(params) {\n    try {\n        const response = yield call(createSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.createSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\n        }\n        else {\n            yield put(categoryActions.createSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.createSubcategoryFailure(err));\n    }\n}\nasync function createSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory`, {\n            credentials: \"same-origin\",\n            method: \"post\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get subcat\nexport function* watchGetSubcategory() {\n    yield takeLatest(actionConstants.GET_SUBCATEGORY_REQUEST, workerGetSubcategory);\n}\nfunction* workerGetSubcategory(params) {\n    try {\n        const response = yield call(getSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.getSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\n        }\n        else {\n            yield put(categoryActions.getSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.getSubcategoryFailure(err));\n    }\n}\nasync function getSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Update subcat\nexport function* watchUpdateSubcategory() {\n    yield takeLatest(actionConstants.UPDATE_SUBCATEGORY_REQUEST, workerUpdateSubcategory);\n}\nfunction* workerUpdateSubcategory(params) {\n    try {\n        const response = yield call(updateSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.updateSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\n        }\n        else {\n            yield put(categoryActions.updateSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.updateSubcategoryFailure(err));\n    }\n}\nasync function updateSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory/${payload.subcat_id}`, {\n            credentials: \"same-origin\",\n            method: \"put\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Delete subcat\nexport function* watchDeleteSubcategory() {\n    yield takeLatest(actionConstants.DELETE_SUBCATEGORY_REQUEST, workerDeleteSubcategory);\n}\nfunction* workerDeleteSubcategory(params) {\n    try {\n        const response = yield call(deleteSubcategory, params.payload);\n        if (response.status === 200) {\n            yield put(categoryActions.deleteSubcategorySuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\n        }\n        else {\n            yield put(categoryActions.deleteSubcategoryFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(categoryActions.deleteSubcategoryFailure(err));\n    }\n}\nasync function deleteSubcategory(payload) {\n    try {\n        let resp = await fetch(`${base_url}/subcategory/${payload}`, {\n            credentials: \"same-origin\",\n            method: \"delete\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n","import actionConstants from \"../actionConstants\";\n\nexport const insuranceActions = {\n    createInsuranceRequest, createInsuranceSuccess, createInsuranceFailure,\n    getInsuranceRequest, getInsuranceSuccess, getInsuranceFailure,\n    updateInsuranceRequest, updateInsuranceSuccess, updateInsuranceFailure,\n    deleteInsuranceRequest, deleteInsuranceSuccess, deleteInsuranceFailure,\n};\n\n// Create insurance\nfunction createInsuranceRequest(payload) {\n    return {\n        type: actionConstants.CREATE_INSURANCE_REQUEST,\n        payload\n    }\n}\n\nfunction createInsuranceSuccess(payload) {\n    return {\n        type: actionConstants.CREATE_INSURANCE_SUCCESS,\n        payload\n    }\n}\n\nfunction createInsuranceFailure(payload) {\n    return {\n        type: actionConstants.CREATE_INSURANCE_FAILURE,\n        payload\n    }\n}\n\n// Get insurance\nfunction getInsuranceRequest(payload) {\n    return {\n        type: actionConstants.GET_INSURANCE_REQUEST,\n        payload\n    }\n}\n\nfunction getInsuranceSuccess(payload) {\n    return {\n        type: actionConstants.GET_INSURANCE_SUCCESS,\n        payload\n    }\n}\n\nfunction getInsuranceFailure(payload) {\n    return {\n        type: actionConstants.GET_INSURANCE_FAILURE,\n        payload\n    }\n}\n\n// Update insurance\nfunction updateInsuranceRequest(payload) {\n    return {\n        type: actionConstants.UPDATE_INSURANCE_REQUEST,\n        payload\n    }\n}\n\nfunction updateInsuranceSuccess(payload) {\n    return {\n        type: actionConstants.UPDATE_INSURANCE_SUCCESS,\n        payload\n    }\n}\n\nfunction updateInsuranceFailure(payload) {\n    return {\n        type: actionConstants.UPDATE_INSURANCE_FAILURE,\n        payload\n    }\n}\n\n// Delete insurance\nfunction deleteInsuranceRequest(payload) {\n    return {\n        type: actionConstants.DELETE_INSURANCE_REQUEST,\n        payload\n    }\n}\n\nfunction deleteInsuranceSuccess(payload) {\n    return {\n        type: actionConstants.DELETE_INSURANCE_SUCCESS,\n        payload\n    }\n}\n\nfunction deleteInsuranceFailure(payload) {\n    return {\n        type: actionConstants.DELETE_INSURANCE_FAILURE,\n        payload\n    }\n}\n\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport actionConstants from \"../actionConstants\";\nimport { insuranceActions } from \"../actions/insuranceActions\";\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n    var nameEQ = \"token\" + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0){\n            return c.substring(nameEQ.length,c.length);\n        } \n    }\n    return null;\n}\n\n// Create subcat\nexport function* watchCreateInsurance() {\n    yield takeLatest(actionConstants.CREATE_INSURANCE_REQUEST, workerCreateInsurance);\n}\nfunction* workerCreateInsurance(params) {\n    try {\n        const response = yield call(createInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(insuranceActions.createInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href=(process.env.REACT_APP_BASE_NAME || \"\") +\"/\";\n        }\n        else {\n            yield put(insuranceActions.createInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(insuranceActions.createInsuranceFailure(err));\n    }\n}\nasync function createInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance`, {\n            credentials: \"same-origin\",\n            method: \"post\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Get subcat\nexport function* watchGetInsurance() {\n    yield takeLatest(actionConstants.GET_INSURANCE_REQUEST, workerGetInsurance);\n}\nfunction* workerGetInsurance(params) {\n    try {\n        const response = yield call(getInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(insuranceActions.getInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(insuranceActions.getInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(insuranceActions.getInsuranceFailure(err));\n    }\n}\nasync function getInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Update subcat\nexport function* watchUpdateInsurance() {\n    yield takeLatest(actionConstants.UPDATE_INSURANCE_REQUEST, workerUpdateInsurance);\n}\nfunction* workerUpdateInsurance(params) {\n    try {\n        const response = yield call(updateInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(insuranceActions.updateInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(insuranceActions.updateInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(insuranceActions.updateInsuranceFailure(err));\n    }\n}\nasync function updateInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance/${payload.subcat_id}`, {\n            credentials: \"same-origin\",\n            method: \"put\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Delete subcat\nexport function* watchDeleteInsurance() {\n    yield takeLatest(actionConstants.DELETE_INSURANCE_REQUEST, workerDeleteInsurance);\n}\nfunction* workerDeleteInsurance(params) {\n    try {\n        const response = yield call(deleteInsurance, params.payload);\n        if (response.status === 200) {\n            yield put(insuranceActions.deleteInsuranceSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(insuranceActions.deleteInsuranceFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(insuranceActions.deleteInsuranceFailure(err));\n    }\n}\nasync function deleteInsurance(payload) {\n    try {\n        let resp = await fetch(`${base_url}/insurance/${payload}`, {\n            credentials: \"same-origin\",\n            method: \"delete\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}","import actionConstants from \"../actionConstants\";\n\nexport const feedbackActions = {\n    getReportedErrorRequest, getReportedErrorSuccess, getReportedErrorFailure,\n    deleteReportedErrorRequest, deleteReportedErrorSuccess, deleteReportedErrorFailure\n};\n\n// Get Rported Errors\nfunction getReportedErrorRequest(payload) {\n    return {\n        type: actionConstants.GET_REPORTED_ERROR_REQUEST,\n        payload\n    }\n}\n\nfunction getReportedErrorSuccess(payload) {\n    return {\n        type: actionConstants.GET_REPORTED_ERROR_SUCCESS,\n        payload\n    }\n}\n\nfunction getReportedErrorFailure(payload) {\n    return {\n        type: actionConstants.GET_REPORTED_ERROR_FAILURE,\n        payload\n    }\n}\n\n// Delete Rported Errors\nfunction deleteReportedErrorRequest(payload) {\n    return {\n        type: actionConstants.DELETE_REPORTED_ERROR_REQUEST,\n        payload\n    }\n}\n\nfunction deleteReportedErrorSuccess(payload) {\n    return {\n        type: actionConstants.DELETE_REPORTED_ERROR_SUCCESS,\n        payload\n    }\n}\n\nfunction deleteReportedErrorFailure(payload) {\n    return {\n        type: actionConstants.DELETE_REPORTED_ERROR_FAILURE,\n        payload\n    }\n}","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport actionConstants from \"../actionConstants\";\nimport { feedbackActions } from \"../actions/feedbackActions\";\n\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n            var nameEQ = \"token\" + \"=\";\n            var ca = document.cookie.split(';');\n            for(var i=0;i < ca.length;i++) {\n                var c = ca[i];\n                while (c.charAt(0)==' ') c = c.substring(1,c.length);\n                if (c.indexOf(nameEQ) == 0){\n                    return c.substring(nameEQ.length,c.length);\n                } \n            }\n            return null;\n}\n\n// Get reported error\nexport function* watchGetReportedError() {\n    yield takeLatest(actionConstants.GET_REPORTED_ERROR_REQUEST, workerGetReportedError);\n}\nfunction* workerGetReportedError(params) {\n    try {\n        const response = yield call(getReportedError, params.payload);\n        if (response.status === 200) {\n            yield put(feedbackActions.getReportedErrorSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(feedbackActions.getReportedErrorFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(feedbackActions.getReportedErrorFailure(err));\n    }\n}\nasync function getReportedError(payload) {\n    try {\n        let resp = await fetch(`${base_url}/reportedError`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}\n\n// Delete reported error\nexport function* watchDeleteReportedError() {\n    yield takeLatest(actionConstants.DELETE_REPORTED_ERROR_REQUEST, workerDeleteReportedError);\n}\nfunction* workerDeleteReportedError(params) {\n    try {\n        const response = yield call(deleteReportedError, params.payload);\n        if (response.status === 200) {\n            yield put(feedbackActions.deleteReportedErrorSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(feedbackActions.deleteReportedErrorFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(feedbackActions.deleteReportedErrorFailure(err));\n    }\n}\nasync function deleteReportedError(payload) {\n    try {\n        let resp = await fetch(`${base_url}/reportedError/${payload.Id}`, {\n            credentials: \"same-origin\",\n            method: \"delete\",\n            body: JSON.stringify(payload),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json()\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}","import actionConstants from \"../actionConstants\";\n\nexport const searchTermActions = {\n    getSearchTermRequest, getSearchTermSuccess, getSearchTermFailure,\n};\n\n// Get Rported Errors\nfunction getSearchTermRequest(payload) {\n    return {\n        type: actionConstants.GET_SEARCH_TERM_REQUEST,\n        payload\n    }\n}\n\nfunction getSearchTermSuccess(payload) {\n    return {\n        type: actionConstants.GET_SEARCH_TERM_SUCCESS,\n        payload\n    }\n}\n\nfunction getSearchTermFailure(payload) {\n    return {\n        type: actionConstants.GET_SEARCH_TERM_FAILURE,\n        payload\n    }\n}","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport actionConstants from \"../actionConstants\";\nimport { searchTermActions } from \"../actions/searchTermActions\";\n\nconst base_url =  process.env.REACT_APP_BASE_URL || \"http://gic.geog.mcgill.ca:5001\";\n\nfunction getCookie() {\n            var nameEQ = \"token\" + \"=\";\n            var ca = document.cookie.split(';');\n            for(var i=0;i < ca.length;i++) {\n                var c = ca[i];\n                while (c.charAt(0)==' ') c = c.substring(1,c.length);\n                if (c.indexOf(nameEQ) == 0){\n                    return c.substring(nameEQ.length,c.length);\n                } \n            }\n            return null;\n}\n\n// Get Search Term \nexport function* watchGetSearchTerm() {\n    yield takeLatest(actionConstants.GET_SEARCH_TERM_REQUEST, workerGetSearchTerm);\n}\nfunction* workerGetSearchTerm(params) {\n    try {\n        const response = yield call(getSearchTerm, params.payload);\n        if (response.status === 200) {\n            yield put(searchTermActions.getSearchTermSuccess(response.message));\n        }\n        else if (response.status === 401) {\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/\";\n        }\n        else {\n            yield put(searchTermActions.getSearchTermFailure(response.message));\n        }\n    }\n    catch(err) {\n        yield put(searchTermActions.getSearchTermFailure(err));\n    }\n}\nasync function getSearchTerm(payload) {\n    try {\n        let resp = await fetch(`${base_url}/searchTerm`, {\n            credentials: \"same-origin\",\n            method: \"get\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Pragma': 'no-cache',\n                'Cache-Control': 'no-cache',\n                'Authorization': `${getCookie()}`\n            }\n        });\n        let status = resp.status;\n        let respBody = await resp.json();\n        return {message: respBody, status: status};\n    }\n    catch(err) {\n        return err;\n    }\n}","import { all } from \"redux-saga/effects\";\nimport { watchCreateService, watchGetService, watchEditService, watchDeleteService } from \"../sagas/serviceSagas\";\nimport { watchSignIn, watchGetAuth, watchSignOut } from \"./authSagas\"\nimport { watchCreatePrimaryCategory, watchGetPrimaryCategory, watchUpdatePrimaryCategory, watchDeletePrimaryCategory, watchCreateSubcategory, watchGetSubcategory, watchUpdateSubcategory, watchDeleteSubcategory } from './categorySagas';\nimport { watchCreateInsurance, watchGetInsurance, watchUpdateInsurance, watchDeleteInsurance } from \"./insuranceSagas\";\nimport { watchGetReportedError, watchDeleteReportedError } from \"./feedbackSagas\";\nimport { watchGetSearchTerm } from \"./searchTermSagas\";\n\nexport default function* rootSaga() {\n    yield all([\n        watchCreateService(),\n        watchGetService(),\n        watchEditService(),\n        watchDeleteService(),\n        watchSignIn(),\n        watchSignOut(),\n        watchGetAuth(),\n\n        watchCreatePrimaryCategory(),\n        watchGetPrimaryCategory(),\n        watchUpdatePrimaryCategory(), \n        watchDeletePrimaryCategory(), \n        watchCreateSubcategory(), \n        watchGetSubcategory(), \n        watchUpdateSubcategory(),\n        watchDeleteSubcategory(),\n\n        watchCreateInsurance(),\n        watchGetInsurance(),\n        watchUpdateInsurance(),\n        watchDeleteInsurance(),\n\n        watchGetReportedError(),\n        watchDeleteReportedError(),\n\n        watchGetSearchTerm()\n    ]);\n}","export const serviceInitialState = {\n    status: \"\",\n    error: \"\",\n    primary_category: [],\n    subcategory: [],\n    insurance: [],\n    service: {},\n    listing: {},\n    newEdit: []\n}\n\nexport const authInitialState = {\n    loggedin: false,\n    authMessage: '',\n    authError: '',\n    loggedInUser: {},\n    loadingSignIn: false,\n    loadingSignUp: false,\n    loadingSignOut: false,\n};\n\nexport const categoryInitialState = {\n    status: \"\",\n    error: \"\",\n    primary_category: [],\n    subcategory: []\n}\n\nexport const insuranceInitialState = {\n    status: \"\",\n    error: \"\",\n    insurance: []\n}\n\nexport const feedbackInitialState = {\n    status: \"\",\n    error: \"\",\n}\n\nexport const searchTermInitialState = {\n    status: \"\",\n    error: \"\",\n}","import { serviceInitialState } from \"./initialState\";\nimport actionConstants from \"../actionConstants\";\n\nexport default function test(state=serviceInitialState, action) {\n    switch (action.type) {\n        // get primary category\n        case actionConstants.GET_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.GET_PRIMARY_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: action.payload\n            }\n        case actionConstants.GET_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // get subcategory\n        case actionConstants.GET_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.GET_SUBCATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_SUCCESS,\n                subcategory: action.payload\n            }\n        case actionConstants.GET_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // get insurance\n        case actionConstants.GET_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_REQUEST\n            }\n        case actionConstants.GET_INSURANCE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_SUCCESS,\n                insurance: action.payload\n            }\n        case actionConstants.GET_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_FAILURE,\n                error: action.payload\n            }\n\n        // create service\n        case actionConstants.CREATE_SERVICE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SERVICE_REQUEST\n            }\n        case actionConstants.CREATE_SERVICE_SUCCESS:\n            \n            return {\n                ...state,\n                status: actionConstants.CREATE_SERVICE_SUCCESS,\n                service: action.payload\n            }\n        case actionConstants.CREATE_SERVICE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SERVICE_FAILURE,\n                error: action.payload\n            }\n        \n\n        // get service\n        case actionConstants.GET_SERVICE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_SERVICE_REQUEST\n            }\n        case actionConstants.GET_SERVICE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_SERVICE_SUCCESS,\n                listing: action.payload\n            }\n        case actionConstants.GET_SERVICE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_SERVICE_FAILURE,\n                error: action.payload\n            }\n        \n        // edit service\n        case actionConstants.EDIT_SERVICE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.EDIT_SERVICE_REQUEST\n            }\n        case actionConstants.EDIT_SERVICE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.EDIT_SERVICE_SUCCESS,\n                newEdit: action.payload\n            }\n        case actionConstants.EDIT_SERVICE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.EDIT_SERVICE_FAILURE,\n                error: action.payload\n            }\n\n        //Delete service\n        case actionConstants.DELETE_SERVICE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.DELETE_SERVICE_REQUEST,\n        }\n        case actionConstants.DELETE_SERVICE_SUCCESS:\n            let newService = state.listing.filter(item => item.service_id !== action.payload.service_id)\n            return {\n                ...state,\n                status: actionConstants.DELETE_SERVICE_SUCCESS,\n                listing: newService\n            }\n        case actionConstants.DELETE_SERVICE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.DELETE_SERVICE_FAILURE,\n                error: action.payload\n            }\n\n        default:\n            return state;\n    }\n}","import  actionConstants  from '../actionConstants';\nimport { authInitialState } from './initialState';\n\nexport default function auth(state = authInitialState, action) {\n  switch (action.type) {\n    //Sign out\n    case actionConstants.SIGN_OUT_REQUEST:\n      return {\n        ...state,\n        loadingSignOut: true,\n        authMessage: actionConstants.SIGN_OUT_REQUEST\n      };\n    case actionConstants.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        authMessage: actionConstants.SIGN_OUT_SUCCESS\n      };\n    case actionConstants.SIGN_OUT_FAILURE:\n      return {\n        ...state,\n        loadingSignOut: false,\n        authMessage: action.error\n      };\n    \n    //Sign in\n    case actionConstants.SIGN_IN_REQUEST:\n      return {\n          ...state,\n          loadingSignIn: true,\n          authMessage: actionConstants.SIGN_IN_REQUEST\n      }\n    case actionConstants.SIGN_IN_SUCCESS:\n      return {\n          ...state,\n          loggedin: true,\n          authError:'',\n          authMessage: actionConstants.SIGN_IN_SUCCESS,\n          loadingSignIn: false,\n          loggedInUser: action.payload.email,\n      }\n    case actionConstants.SIGN_IN_FAILURE:\n      return {\n          ...state,\n          authError: action.error,\n          authMessage: actionConstants.SIGN_IN_FAILURE,\n          loadingSignIn: false,\n          loggedin: false\n\n      }\n\n      //Get authentication state\n    case actionConstants.GET_AUTH_REQUEST:\n      return {\n        ...state,\n        authMessage: actionConstants.GET_AUTH_REQUEST\n    }\n    case actionConstants.GET_AUTH_SUCCESS:\n      return {\n        ...state,\n        authError:'',\n        authMessage: actionConstants.GET_AUTH_SUCCESS,\n        loggedInUser: action.payload,\n        loggedin: true\n    }\n    case actionConstants.GET_AUTH_FAILURE:\n      return {\n        ...state,\n        authMessage: actionConstants.GET_AUTH_FAILURE,\n        authError: action.error\n    }\n\n    default:\n      return state;\n  }\n}\n","import { categoryInitialState } from \"./initialState\";\nimport actionConstants from \"../actionConstants\";\n\nexport default function category(state=categoryInitialState, action) {\n    switch (action.type) {\n        // create primary category\n        case actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: state.primary_category.concat(action.payload)\n            }\n        case actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // get primary category\n        case actionConstants.GET_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.GET_PRIMARY_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: action.payload\n            }\n        case actionConstants.GET_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // update primary category\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS:\n            var newPrimaryCategory = state.primary_category;\n            var index = newPrimaryCategory.findIndex(c => { return c.cat_id === action.payload.cat_id});\n            newPrimaryCategory[index] = action.payload;\n            return {\n                ...state,\n                status: actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: newPrimaryCategory\n            }\n        case actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.UPDATE_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // delete primary category\n        case actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_REQUEST\n            }\n        case actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS:\n            newPrimaryCategory = state.primary_category.filter(item => item.cat_id !== action.payload.cat_id)\n            return {\n                ...state,\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS,\n                primary_category: newPrimaryCategory\n            }\n        case actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.DELETE_PRIMARY_CATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // create subcategory\n        case actionConstants.CREATE_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.CREATE_SUBCATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SUBCATEGORY_SUCCESS,\n                subcategory: state.subcategory.concat(action.payload)\n            }\n        case actionConstants.CREATE_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // get subcategory\n        case actionConstants.GET_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.GET_SUBCATEGORY_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_SUCCESS,\n                subcategory: action.payload\n            }\n        case actionConstants.GET_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // update subcategory\n        case actionConstants.UPDATE_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.UPDATE_SUBCATEGORY_SUCCESS:\n            var newSubcategory = state.subcategory;\n            var index = newSubcategory.findIndex(c => { return c.subcat_id === action.payload.subcat_id});\n            newSubcategory[index] = action.payload;\n            return {\n                ...state,\n                status: actionConstants.UPDATE_SUBCATEGORY_SUCCESS,\n                subcategory: newSubcategory\n            }\n        case actionConstants.UPDATE_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.UPDATE_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        // delete primary category\n        case actionConstants.DELETE_SUBCATEGORY_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.DELETE_SUBCATEGORY_REQUEST\n            }\n        case actionConstants.DELETE_SUBCATEGORY_SUCCESS:\n            newSubcategory = state.subcategory.filter(item => item.subcat_id !== action.payload.subcat_id)\n            return {\n                ...state,\n                status: actionConstants.DELETE_SUBCATEGORY_SUCCESS,\n                subcategory: newSubcategory\n            }\n        case actionConstants.DELETE_SUBCATEGORY_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.DELETE_SUBCATEGORY_FAILURE,\n                error: action.payload\n            }\n\n        \n        default:\n            return state;\n    }\n}","import { insuranceInitialState } from \"./initialState\";\nimport actionConstants from \"../actionConstants\";\n\nexport default function test(state=insuranceInitialState, action) {\n    switch (action.type) {\n       // create primary category\n       case actionConstants.CREATE_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_INSURANCE_REQUEST\n            }\n        case actionConstants.CREATE_INSURANCE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.CREATE_INSURANCE_SUCCESS,\n                insurance: state.insurance.concat(action.payload)\n            }\n        case actionConstants.CREATE_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.CREATE_INSURANCE_FAILURE,\n                error: action.payload\n            }\n\n\n        // get insurance\n        case actionConstants.GET_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_REQUEST\n            }\n        case actionConstants.GET_INSURANCE_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_SUCCESS,\n                insurance: action.payload\n            }\n        case actionConstants.GET_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_INSURANCE_FAILURE,\n                error: action.payload\n            }\n\n        // update primary category\n        case actionConstants.UPDATE_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.CREATE_INSURANCE_REQUEST\n            }\n        case actionConstants.UPDATE_INSURANCE_SUCCESS:\n            var newInsurance = state.insurance;\n            var index = newInsurance.findIndex(c => { return c.insur_id === action.payload.insur_id});\n            newInsurance[index] = action.payload;\n            return {\n                ...state,\n                status: actionConstants.UPDATE_INSURANCE_SUCCESS,\n                insurance: newInsurance\n            }\n        case actionConstants.UPDATE_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.UPDATE_INSURANCE_FAILURE,\n                error: action.payload\n            }\n\n        // delete primary category\n        case actionConstants.DELETE_INSURANCE_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.DELETE_INSURANCE_REQUEST\n            }\n        case actionConstants.DELETE_INSURANCE_SUCCESS:\n            newInsurance = state.insurance.filter(item => item.insur_id !== action.payload.insur_id)\n            return {\n                ...state,\n                status: actionConstants.DELETE_INSURANCE_SUCCESS,\n                insurance: newInsurance\n            }\n        case actionConstants.DELETE_INSURANCE_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.DELETE_INSURANCE_FAILURE,\n                error: action.payload\n            }\n       \n        default:\n            return state;\n    }\n}","import { feedbackInitialState } from \"./initialState\";\nimport actionConstants from \"../actionConstants\";\n\nexport default function feedback(state=feedbackInitialState, action) {\n    switch (action.type) {\n        // get feedback\n        case actionConstants.GET_REPORTED_ERROR_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_REPORTED_ERROR_REQUEST\n            }\n        case actionConstants.GET_REPORTED_ERROR_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_REPORTED_ERROR_SUCCESS,\n                reported_Error: action.payload\n            }\n        case actionConstants.GET_REPORTED_ERROR_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_REPORTED_ERROR_FAILURE,\n                error: action.payload\n            }\n       \n        //Delete feedback\n        case actionConstants.DELETE_REPORTED_ERROR_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.DELETE_REPORTED_ERROR_REQUEST,\n        }\n        case actionConstants.DELETE_REPORTED_ERROR_SUCCESS:\n            let newReported_Error = state.reported_Error.filter(item => item.id !== action.payload.id)\n            return {\n                ...state,\n                status: actionConstants.DELETE_REPORTED_ERROR_SUCCESS,\n                reported_Error: newReported_Error\n            }\n        case actionConstants.DELETE_REPORTED_ERROR_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.DELETE_REPORTED_ERROR_FAILURE,\n                error: action.payload\n            }\n\n        default:\n            return state;\n    }\n}","import { searchTermInitialState } from \"./initialState\";\nimport actionConstants from \"../actionConstants\";\n\nexport default function searchTerm(state=searchTermInitialState, action) {\n    switch (action.type) {\n        // get searchTerm\n        case actionConstants.GET_SEARCH_TERM_REQUEST:\n            return {\n                ...state,\n                status: actionConstants.GET_SEARCH_TERM_REQUEST\n            }\n        case actionConstants.GET_SEARCH_TERM_SUCCESS:\n            return {\n                ...state,\n                status: actionConstants.GET_SEARCH_TERM_SUCCESS,\n                Search_Term: action.payload\n            }\n        case actionConstants.GET_SEARCH_TERM_FAILURE:\n            return {\n                ...state,\n                status: actionConstants.GET_SEARCH_TERM_FAILURE,\n                error: action.payload\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\n\nimport serviceReducer from \"./serviceReducer\";\nimport auth from \"./authReducers\"\nimport categoryReducer from \"./categoryReducer\";\nimport insuranceReducer from \"./insuranceReducer\";\nimport feedbackReducer from \"./feedbackReducers\";\nimport searchTermReducers from \"./searchTermReducers\";\n\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    serviceReducer,\n    auth,\n    categoryReducer,\n    insuranceReducer,\n    feedbackReducer,\n    searchTermReducers\n})","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { serviceActions } from './redux/actions/serviceActions';\nimport actionConstants from './redux/actionConstants';\n\n//Global\nimport moment from 'moment';\n//style\nimport \"./CardTemplate.css\"\nimport { Row, Collapse, Card, Button } from 'antd';\nconst { Panel } = Collapse;\nclass CardTemplateComponent extends React.Component {\n    constructor(props){\n      super(props)\n    }\n\n    render() {\n        const { listing, primary_category, subcategory, insurance, pageBelonging } = this.props;\n        let insuranceName =  insurance.find(\n            i => i.insur_id === listing.insur_id\n        );\n        let primaryCategory = primary_category.find(\n            i => i.cat_id === listing.primary_cat_id\n        );\n        let subCategory = subcategory.find(\n            i => i.subcat_id === listing.sub_cat_id\n        );\n        return (\n            <Row>\n                <Card>\n                    <Collapse\n                        bordered={false}\n                    >\n                        <Panel header={listing.name} style={{border:0}}>                         \n                            {    pageBelonging ?\n                                        <Row>\n                                            <Button \n                                                onClick = {() => {\n                                                    listing.verified_by = this.props.loggedInUser\n                                                    this.props.dispatch(serviceActions.editServiceRequest({values:{verified_by: this.props.loggedInUser}, serviceId:listing.service_id}));\n                                                }}\n                                            >\n                                                Approve Service\n                                            </Button>\n                                        \n                                            <Link to={`/editService/${listing.service_id}?list=ServiceSuggestion`}>\n                                                <Button>\n                                                    Modify Service\n                                                </Button>\n                                            </Link>\n                        \n                                            <Button \n                                                onClick = {() => {\n                                                        this.props.dispatch(serviceActions.deleteServiceRequest({serviceId:listing.service_id}));\n\n                                                    }}\n                                            >\n                                                Delete Service\n                                            </Button>\n                                        </Row>\n                                   \n                                :\n                                   \n                                        <Row>\n                                            <Link to={`/editService/${listing.service_id}`}>\n                                                <Button>\n                                                    Modify Service\n                                                </Button>\n                                            </Link>\n                                        </Row>\n                                    \n                            \n                            }\n                            <Row className=\"last_modified\">\n                                Last Modified Date: {moment(listing.last_verified, \"YYYY-MM-DDTHH:mm:ss.sssZ\").format('LLLL')}\n                            </Row>\n                            <table>\n                                <tbody>\n                                    <tr className=\"light-row\">\n                                        <td>Service ID:</td>\n                                        <td>{listing.service_id}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Service Name:</td>\n                                        <td>{listing.name}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Primary Category:</td>\n                                        <td>{primaryCategory ? primaryCategory.cat_name : \"\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Subcategory:</td>\n                                        <td>{subCategory ? subCategory.subcat_name : \"\"}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Insurance:</td>\n                                        <td>{insuranceName ? insuranceName.insur_name : \"\" }</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Languages Spoken:</td>\n                                        <td>{listing.languages_spoken}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Address:</td>\n                                        <td>{listing.adress}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Latitude:</td>\n                                        <td>{listing.lat}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Longitude:</td>\n                                        <td>{listing.lon}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Transit:</td>\n                                        <td>{listing.transit}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Website:</td>\n                                        <td>{listing.website}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Phone Number:</td>\n                                        <td>{listing.phone_num}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Emergency Number:</td>\n                                        <td>{listing.emergency_num}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Drop In:</td>\n                                        <td>{listing.drop_in}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Services:</td>\n                                        <td>{listing.services}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Services (FR):</td>\n                                        <td>{listing.services_fr}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Notes:</td>\n                                        <td>{listing.notes}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Notes (FR):</td>\n                                        <td>{listing.notes_fr}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Verified By:</td>\n                                        <td>{listing.verified_by}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Hours(Monday):</td>\n                                        <td>{listing.hours[1]}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Business Hours(Tuesday):</td>\n                                        <td>{listing.hours[2]}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Hours(Wednesday):</td>\n                                        <td>{listing.hours[3]}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Business Hours(Thursday):</td>\n                                        <td>{listing.hours[4]}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Hours(Friday):</td>\n                                        <td>{listing.hours[5]}</td>\n                                    </tr>\n                                    <tr className=\"light-row\">\n                                        <td>Business Hours(Saturday):</td>\n                                        <td>{listing.hours[6]}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Hours(Sunday):</td>\n                                        <td>{listing.hours[0]}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </Panel>\n                    </Collapse>\n                </Card>\n            </Row>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    const { primary_category, subcategory, insurance } = state.serviceReducer;\n    const  {loggedInUser} = state.auth;\n    return {\n        primary_category, subcategory, insurance, loggedInUser\n    }\n};\n\nconst NewCardTemplateComponent = withRouter(connect(mapStateToProps)(CardTemplateComponent));\nexport default NewCardTemplateComponent;","// React, Routing\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { serviceActions } from './redux/actions/serviceActions';\nimport { categoryActions } from './redux/actions/categoryActions';\nimport { insuranceActions } from './redux/actions/insuranceActions';\nimport CardTemplate from './CardTemplate.jsx';\n\n//Style\nimport { Input } from 'antd';\nconst { Search } = Input;\nclass ListServiceClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filter: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.props.dispatch(serviceActions.getServiceRequest());\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\n    }\n\n    render() {\n        return (\n            <div className=\"Card_Container\">\n                <Search\n                    placeholder=\"search service\"\n                    onChange={event => {\n                        this.setState({filter: event.target.value})\n                        console.log(event.target.value)\n                    }}\n                    className=\"search-bar\"\n                />\n                {this.props.listing.length > 0 && this.props.listing.map((service, i) => {\n                    if (this.props.listing[i].name) {\n                        let lowerCaseFilter = this.state.filter.toLowerCase();\n                        if ((this.props.listing[i].name).toLowerCase().indexOf(lowerCaseFilter)>-1) {\n                            return(\n                                <CardTemplate \n                                    listing={service}\n                                    key={i}\n                                />\n                            )\n                        }\n                    }\n                })\n                }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    const { listing, primary_category, subcategory, insurance } = state.serviceReducer;\n    return {\n        listing, primary_category, subcategory, insurance\n    }\n}\nconst ListService = connect(mapStateToProps)(ListServiceClass);\nexport default ListService;","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\n// Style\nimport { Link } from 'react-router-dom';\n\nimport ListService from './listService.jsx';\n// Style\nimport './home.css';\nimport { Button, Input, Badge, Icon  } from 'antd';\nimport { feedbackActions } from './redux/actions/feedbackActions.js';\n\nclass HomeClass extends React.Component {\n    constructor(props) {\n        super(props);\n       this.state = {\n      \n       }\n    }\n\n    countSuggestionService = (listing) =>{\n        let suggestionServiceNumber = 0\n        if (listing && listing.length > 0) {\n            listing.map((service, i) => {\n                if ( !service.verified_by && service.name) {\n                    suggestionServiceNumber++\n                }\n            })\n        }\n        return suggestionServiceNumber\n        }\n\n    countReportedError = (listing) =>{\n        let reportedErrorNumber = 0\n        if (listing && listing.length > 0) {\n            listing.map((service, i) => {\n                if ( service.email && service.content) {\n                    reportedErrorNumber++\n                }\n            })\n        }\n        return reportedErrorNumber\n        }\n\n    componentDidUpdate(prevProps){\n        if (this.props.loggedin != prevProps.loggedin && this.props.loggedin == true) {\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + '/#/home';\n        }\n    }\n\n    componentDidMount(){\n        this.props.dispatch(feedbackActions.getReportedErrorRequest());\n    }\n    render() {\n            return ( \n           \n                <div className=\"home-wrapper\">\n                    <div className=\"newService\">\n                        <Link to=\"/newService\">\n                            <Button>Create New Service</Button>\n                        </Link>\n                        <Link to=\"/category\">\n                            <Button>Manage Primary Categories</Button>\n                        </Link>\n                        <Link to=\"/subcategory\">\n                            <Button>Manage Subcategories</Button>\n                        </Link>\n                        <Link to=\"/insurance\">\n                            <Button>Manage Insurances</Button>\n                        </Link>\n                        <Badge count={this.countSuggestionService(this.props.listing)}>\n                            <a href=\"/#/ListServiceSuggestion\"> <Button>Review Service Suggestion</Button> </a>\n                        </Badge>\n                       <Badge count={this.countReportedError(this.props.reported_Error)}>\n                            <a href=\"/#/ListReportedError\"> <Button>Review Reported Error</Button> </a>\n                        </Badge>\n                    </div>\n                    <ListService />\n                </div>\n             \n            )\n        }\n}\nconst mapStateToProps = (state) => {\n    const { loggedInUser } = state.auth\n    const { listing} = state.serviceReducer;\n    const {reported_Error} = state.feedbackReducer\n    return {\n        loggedInUser, listing, reported_Error\n    }\n}\nconst Home = withRouter(connect(mapStateToProps)(HomeClass));\nexport default Home;","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { serviceActions } from './redux/actions/serviceActions';\nimport { categoryActions } from './redux/actions/categoryActions';\nimport { insuranceActions } from './redux/actions/insuranceActions';\nimport actionConstants from './redux/actionConstants';\n\n// Style\nimport \"./newService.css\";\nimport { Form, Input, InputNumber, Button, Select, Tag, Icon } from 'antd';\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst InputGroup = Input.Group;\n\nclass NewServiceClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: {\n                lang: [],\n                services: [],\n                servicesFr: []\n            },\n            inputVisible: {\n                lang: false,\n                services: false,\n                servicesFr: false\n            },\n            inputValue: {\n                lang: '',\n                services: '',\n                servicesFr: ''\n            },\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.CREATE_SERVICE_FAILURE) {\n            alert(this.props.error.detail ? this.props.error.detail : this.props.error);\n        }\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.CREATE_SERVICE_SUCCESS) {\n            alert(\"Service created successfully\");\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/#/home\";\n        }\n    }\n\n    // TAG INPUT\n    handleClose = (removedTag, type) => {\n        const newTags = this.state.tags[type].filter(tag => tag !== removedTag);\n        let { tags } = this.state;\n        tags[type] = newTags;\n        this.setState({ tags });\n    };\n\n    showInput = (type) => {\n        let { inputVisible } = this.state;\n        inputVisible[type] = true\n        let input = \"input\" + type;\n        this.setState({ inputVisible }, () => this[input].focus());\n    };\n\n    handleInputChange = (e, type) => {\n        let { inputValue } = this.state;\n        inputValue[type] = e.target.value;\n        this.setState({ inputValue });\n    };\n\n    handleInputConfirm = (type) => {\n        let { tags, inputValue, inputVisible } = this.state;\n        if (inputValue[type] && tags[type].indexOf(inputValue[type]) === -1) {\n            tags[type] = [...tags[type], inputValue[type]];\n        }\n        inputVisible[type] = false;\n        inputValue[type] = '';\n        this.setState({\n            tags,\n            inputVisible,\n            inputValue,\n        });\n    };\n\n    saveInputRefLang = (input) => (this.inputlang = input);\n    saveInputRefServices = (input) => (this.inputservices = input);\n    saveInputRefServicesFr = (input) => (this.inputservicesFr = input);\n\n    parseTime(time) {\n        if (!time) {\n            return true;\n        }\n\n        let parsed = time.split('-');\n        if (parsed.length !== 2) {\n            return false;\n        }\n\n        let start = parsed[0].split(':');\n        if (start.length !== 2 || isNaN(start[0]) || isNaN(start[1])) {\n            return false;\n        }\n        let end = parsed[1].split(':');\n        if (end.length !== 2 || isNaN(end[0]) || isNaN(end[1])) {\n            return false;\n        }\n        return true;\n    }\n\n    getHours(time, last) {\n        if (time) {\n            if (this.parseTime(time)) {\n                if (last) {\n                    return `{${time}}`;\n                }\n                else {\n                    return `{${time}},`;\n                }\n            }\n            else {\n                return false\n            }\n        }\n        else {\n            if (last) {\n                return `{NA}`;\n            }\n            else {\n                return `{NA},`;\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n\n            // Build business hours string\n            let hours = \"{\";\n            if (this.getHours(values.hours_sun) && this.getHours(values.hours_mon) && this.getHours(values.hours_tue) && this.getHours(values.hours_wed) && this.getHours(values.hours_thu) && this.getHours(values.hours_fri) && this.getHours(values.hours_sat)) {\n                hours += this.getHours(values.hours_sun, false);\n                hours += this.getHours(values.hours_mon, false);\n                hours += this.getHours(values.hours_tue, false);\n                hours += this.getHours(values.hours_wed, false);\n                hours += this.getHours(values.hours_thu, false);\n                hours += this.getHours(values.hours_fri, false);\n                hours += this.getHours(values.hours_sat, true);\n            }\n            else {\n                return alert(\"Business hours must follow the format HH:mm-HH:mm\");\n            }\n            hours += \"}\";\n            values.hours = hours;\n\n            // Build languages and services string\n            let lang = this.state.tags.lang.join(',');\n            let services = this.state.tags.services.join(',');\n            let servicesFr = this.state.tags.servicesFr.join(',');\n            \n            values.languages_spoken = lang;\n            values.services = services;\n            values.services_fr = servicesFr;\n            this.props.dispatch(serviceActions.createServiceRequest(values));\n          }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { tags, inputVisible, inputValue } = this.state;\n            return (\n                <div className=\"service-form-wrapper\">\n                    <h1>Create a new service</h1>\n                    <Form \n                        onSubmit={this.handleSubmit} \n                    >\n                        <Form.Item label=\"Service Name\">\n                            {getFieldDecorator('name', {})(\n                                <Input\n                                    placeholder=\"eg. CLSC du Parc\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Primary category\">\n                            {getFieldDecorator('primary_cat_id', {})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.primary_category.map((cat, i) => {\n                                        return (\n                                            <Option key={i} value={cat.cat_id}>{cat.cat_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Subcategory\">\n                            {getFieldDecorator('sub_cat_id', {})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.subcategory.map((cat, i) => {\n                                        return (\n                                            <Option key={i} value={cat.subcat_id}>{cat.subcat_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Insurance\">\n                            {getFieldDecorator('insur_id', {})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.insurance.map((insur, i) => {\n                                        return (\n                                            <Option key={i} value={insur.insur_id}>{insur.insur_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Languages Spoken\">\n                            <div>Please indicate the full language name (ex: \"English\", \"French\")</div>\n                            <div>\n                                {tags[\"lang\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"lang\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"lang\"] && (\n                                    <Input\n                                        ref={this.saveInputRefLang}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue[\"lang\"]}\n                                        onChange={e => this.handleInputChange(e, \"lang\")}\n                                        onBlur={() => this.handleInputConfirm(\"lang\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"lang\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"lang\"] && (\n                                    <Tag onClick={() => this.showInput(\"lang\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Language\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Address\">\n                            {getFieldDecorator('address', {})(\n                                <Input\n                                    placeholder=\"eg. 123 Avenue du Parc\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Latitude\">\n                            {getFieldDecorator('lat', {})(\n                                <InputNumber\n                                    style={{width: \"100%\"}}\n                                    placeholder=\"eg. 45.23424\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Longitude\">\n                            {getFieldDecorator('lon', {})(\n                                <InputNumber\n                                    style={{width: \"100%\"}}\n                                    placeholder=\"eg. -73.34535\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Transit\">\n                            {getFieldDecorator('transit', {})(\n                                <Input\n                                    placeholder=\"eg. Yes, near Place des Arts\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Website\">\n                            {getFieldDecorator('website', {})(\n                                <Input\n                                    placeholder=\"eg. www.example.com\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Phone number\">\n                            {getFieldDecorator('phone_num', {})(\n                                <Input\n                                    placeholder=\"eg. 514-555-4444\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Emergency Number\">\n                            {getFieldDecorator('emergency_num', {})(\n                                <Input\n                                    placeholder=\"eg. 514-555-4444\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Drop In\">\n                            {getFieldDecorator('drop_in', {})(\n                                <Input\n                                    placeholder=\"eg. Yes\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Services\">\n                            <div>\n                                {tags[\"services\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"services\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"services\"] && (\n                                    <Input\n                                        ref={this.saveInputRefServices}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue[\"services\"]}\n                                        onChange={e => this.handleInputChange(e, \"services\")}\n                                        onBlur={() => this.handleInputConfirm(\"services\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"services\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"services\"] && (\n                                    <Tag onClick={() => this.showInput(\"services\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Service\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Services (FR)\">\n                            <div>\n                                {tags[\"servicesFr\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"servicesFr\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"servicesFr\"] && (\n                                    <Input\n                                        ref={this.saveInputRefServicesFr}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 120 }}\n                                        value={inputValue[\"servicesFr\"]}\n                                        onChange={e => this.handleInputChange(e, \"servicesFr\")}\n                                        onBlur={() => this.handleInputConfirm(\"servicesFr\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"servicesFr\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"servicesFr\"] && (\n                                    <Tag onClick={() => this.showInput(\"servicesFr\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Service (FR)\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Notes\">\n                            {getFieldDecorator('notes', {})(\n                                <TextArea\n                                    rows={10}\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Notes (FR)\">\n                            {getFieldDecorator('notes_fr', {})(\n                                <TextArea\n                                    rows={10}\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Verified by\">\n                            {getFieldDecorator('verified_by', {})(\n                                <Input\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        Business Hours:\n                        <InputGroup compact>\n                            <Form.Item>\n                                {getFieldDecorator('hours_sun', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Sun\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_mon', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Mon\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_tue', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Tue\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_wed', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Wed\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_thu', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Thu\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_fri', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Fri\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_sat', {})(\n                                    <Input style={{ width: 150 }} placeholder=\"Sat\" />,\n                                )}\n                            </Form.Item>\n                        </InputGroup>\n                        \n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Create Service\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            )\n        }\n}\nconst mapStateToProps = (state) => {\n    const {loggedInUser} = state.auth;\n    const { status, error, primary_category, subcategory, insurance } = state.serviceReducer;\n    return {\n        status, error, primary_category, subcategory, insurance, loggedInUser\n    }\n}\nconst ServiceForm = Form.create()(NewServiceClass);\nconst NewService = withRouter(connect(mapStateToProps)(ServiceForm));\nexport default NewService;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authActions } from './redux/actions/authActions';\nimport { withRouter } from 'react-router';\nimport actionConstants from './redux/actionConstants';\n\n\n//Style\nimport './login.css'\nimport { Form, Icon, Input, Button } from 'antd';\nimport { stat } from 'fs';\n\nclass LogInClass extends React.Component{\n    constructor(props) {\n        super(props);\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            const { dispatch } = this.props;\n            const payload = {\n              email: values.email, \n              password: values.password\n            }\n            dispatch(authActions.signInRequest(payload));\n          }\n        });\n      } \n    \n    componentDidUpdate(prevProps) {\n        if (this.props.loggedin != prevProps.loggedin && this.props.loggedin == true) {\n            window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + '/#/home';\n        }\n        if (this.props.authMessage !== prevProps.authMessage && this.props.authMessage === actionConstants.SIGN_IN_FAILURE) {\n            alert(this.props.authError);\n        }\n    }\n    \n    render(){\n        const { getFieldDecorator } = this.props.form;\n     \n        return (\n\n        <div> \n            \n            <Form onSubmit={this.handleSubmit} className=\"login-form\" >\n                <h1>Admin Login</h1>\n\n                <Form.Item>\n                    {getFieldDecorator('email', {\n                        rules: [{ required: true, message: 'Please input your email!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Email\"\n                        />,\n                    )}\n                </Form.Item>    \n\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        />,\n                    )}\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={this.props.loadingSignIn}>\n                        Log in\n                    </Button>\n                </Form.Item>\n\n            </Form> \n        \n        </div>\n        )\n\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    const { authMessage, loadingSignIn, loggedin, authError } = state.auth;\n    return {\n       loadingSignIn, loggedin, authMessage, authError\n    };\n}\n\n\nconst LogInForm = Form.create()(LogInClass);\nconst LogIn = withRouter(connect(mapStateToProps)(LogInForm));\n\nexport default LogIn;","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { serviceActions } from './redux/actions/serviceActions';\nimport actionConstants from './redux/actionConstants';\n\n// Style\nimport \"./editService.css\";\nimport { Form, Input, InputNumber, Button, Select, Tag, Icon } from 'antd';\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst InputGroup = Input.Group;\nclass EditServiceClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: {\n                lang: [],\n                services: [],\n                servicesFr: []\n            },\n            inputVisible: {\n                lang: false,\n                services: false,\n                servicesFr: false\n            },\n            inputValue: {\n                lang: '',\n                services: '',\n                servicesFr: ''\n            },\n        }\n    }\n    \n    componentDidMount() {\n        const { listing } = this.props;\n        const { service_id } = this.props.match.params;\n        let service = [];\n        for(var i = 0; i < listing.length; i++) {\n            if (listing[i].service_id == service_id) {\n                service.push(listing[i]);\n            } \n        }\n        const currentService = service[0];\n        const languages = currentService.languages_spoken ? (currentService.languages_spoken).split(\",\") : [];\n        const Service = currentService.services ? (currentService.services).split(\",\") : [];\n        const Services_fr = currentService.services_fr ? (currentService.services_fr).split(\",\") : [];\n        this.setState({\n            tags: {\n                lang: languages,\n                services: Service,\n                servicesFr: Services_fr\n            }\n        });\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_FAILURE) {\n            alert(\"ERROR SAVING\");\n        }\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_SUCCESS) {\n            alert(\"Service modified successfully\");\n            if (window.location.href.indexOf(\"ServiceSuggestion\") > 0) {\n                window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/#/ListServiceSuggestion\";\n            } else {\n                window.location.href = (process.env.REACT_APP_BASE_NAME || \"\") + \"/#/home\";\n            }\n           \n        }\n    }\n\n    // TAG INPUT\n    handleClose = (removedTag, type) => {\n        const newTags = this.state.tags[type].filter(tag => tag !== removedTag);\n        let { tags } = this.state;\n        tags[type] = newTags;\n        this.setState({ tags });\n    };\n\n    showInput = (type) => {\n        let { inputVisible } = this.state;\n        inputVisible[type] = true\n        let input = \"input\" + type;\n        this.setState({ inputVisible }, () => this[input].focus());\n    };\n\n    handleInputChange = (e, type) => {\n        let { inputValue } = this.state;\n        inputValue[type] = e.target.value;\n        this.setState({ inputValue });\n    };\n\n    handleInputConfirm = (type) => {\n        let { tags, inputValue, inputVisible } = this.state;\n        if (inputValue[type] && tags[type].indexOf(inputValue[type]) === -1) {\n            tags[type] = [...tags[type], inputValue[type]];\n        }\n        inputVisible[type] = false;\n        inputValue[type] = '';\n        this.setState({\n            tags,\n            inputVisible,\n            inputValue,\n        });\n    };\n\n    saveInputRefLang = (input) => (this.inputlang = input);\n    saveInputRefServices = (input) => (this.inputservices = input);\n    saveInputRefServicesFr = (input) => (this.inputservicesFr = input);\n\n    parseTime(time) {\n        if (time !=\"NA\") {\n            if (!time) {\n                return true;\n            }\n            let parsed = time.split('-');\n            if (parsed.length !== 2) {\n                return false;\n            }\n\n            let start = parsed[0].split(':');\n            if (start.length !== 2 || isNaN(start[0]) || isNaN(start[1])) {\n                return false;\n            }\n            let end = parsed[1].split(':');\n            if (end.length !== 2 || isNaN(end[0]) || isNaN(end[1])) {\n                return false;\n            }\n            return true;\n        }\n    }\n\n    getHours(time, last) {\n        if (time) {\n            if (this.parseTime(time)) {\n                if (last) {\n                    return `{${time}}`;\n                }\n                else {\n                    return `{${time}},`;\n                }\n            }\n            else {\n                return false\n            }\n        }\n        else {\n            if (last) {\n                return `{NA}`;\n            }\n            else {\n                return `{NA},`;\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n\n            // Build business hours string\n            let hours = \"{\";\n            \n            if (Array.isArray(values.hours_sun)) {\n                values.hours_sun = values.hours_sun[0];\n            }\n            if (Array.isArray(values.hours_mon)) {\n                values.hours_mon = values.hours_mon[0];\n            }\n            if (Array.isArray(values.hours_tue)) {\n                values.hours_tue = values.hours_tue[0];\n            }\n            if (Array.isArray(values.hours_wed)) {\n                values.hours_wed = values.hours_wed[0];\n            }\n            if (Array.isArray(values.hours_thu)) {\n                values.hours_thu = values.hours_thu[0];\n            }\n            if (Array.isArray(values.hours_fri)) {\n                values.hours_fri = values.hours_fri[0];\n            }\n            if (Array.isArray(values.hours_sat)) {\n                values.hours_sat = values.hours_sat[0];\n            }\n            if (this.getHours(values.hours_sun) && this.getHours(values.hours_mon) && this.getHours(values.hours_tue) && this.getHours(values.hours_wed) && this.getHours(values.hours_thu) && this.getHours(values.hours_fri) && this.getHours(values.hours_sat)) {\n                hours += this.getHours(values.hours_sun, false);\n                hours += this.getHours(values.hours_mon, false);\n                hours += this.getHours(values.hours_tue, false);\n                hours += this.getHours(values.hours_wed, false);\n                hours += this.getHours(values.hours_thu, false);\n                hours += this.getHours(values.hours_fri, false);\n                hours += this.getHours(values.hours_sat, true);\n            }\n            else {\n                return alert(\"Business hours must follow the format HH:mm-HH:mm\");\n            }\n            hours += \"}\";\n            values.hours = hours;\n\n            // Build languages and services string\n            let lang = this.state.tags.lang.join(',');\n            let services = this.state.tags.services.join(',');\n            let servicesFr = this.state.tags.servicesFr.join(',');\n            \n            values.languages_spoken = lang;\n            values.services = services;\n            values.services_fr = servicesFr;\n            const { service_id } = this.props.match.params;\n            this.props.dispatch(serviceActions.editServiceRequest({values:values,serviceId:service_id}));\n        }\n      });\n  };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { tags, inputVisible, inputValue } = this.state;\n        const { listing } = this.props;\n        const { service_id } = this.props.match.params;\n        let service = [];\n        for(var i = 0; i < listing.length; i++) {\n            if (listing[i].service_id == service_id) {\n                service.push(listing[i]);\n            } \n        }\n        const currentService = service[0];\n        if (true) {\n            return (\n                <div className=\"service-form-wrapper\">\n                    <h1>Edit Service</h1>\n                    <Form\n                        onSubmit={this.handleSubmit}\n                    >\n                        <Form.Item label=\"Service Name\">\n                            {\n                                getFieldDecorator('name', {initialValue: currentService.name})(\n                                    <Input\n                                        style={{width: \"100%\"}}\n                                    />\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item label=\"Primary category\">\n                            {getFieldDecorator('primary_cat_id', {initialValue: currentService.primary_cat_id})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.primary_category.map((cat, i) => {\n                                        return (\n                                            <Option key={i} value={cat.cat_id}>{cat.cat_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Subcategory\">\n                            {getFieldDecorator('sub_cat_id', {initialValue: currentService.sub_cat_id})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.subcategory.map((cat, i) => {\n                                        return (\n                                            <Option key={i} value={cat.subcat_id}>{cat.subcat_name}</Option>\n                                        );\n                                    })}\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Insurance\">\n                            {getFieldDecorator('insur_id', {initialValue: currentService.insur_id})(\n                                <Select\n                                    placeholder=\"Select\"\n                                >\n                                    {this.props.insurance.map((insur, i) => {\n                                        return (\n                                            <Option key={i} value={insur.insur_id}>{insur.insur_name}</Option>\n                                        );\n                                    })}\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Languages Spoken\">\n                            <div>\n                                {tags[\"lang\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"lang\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"lang\"] && (\n                                    <Input\n                                        ref={this.saveInputRefLang}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue[\"lang\"]}\n                                        onChange={e => this.handleInputChange(e, \"lang\")}\n                                        onBlur={() => this.handleInputConfirm(\"lang\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"lang\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"lang\"] && (\n                                    <Tag onClick={() => this.showInput(\"lang\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Language\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Address\">\n                            {getFieldDecorator('address', {initialValue: currentService.address})(\n                                <Input\n                                    placeholder=\"eg. 123 Avenue du Parc\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Latitude\">\n                            {getFieldDecorator('lat', {initialValue: currentService.lat})(\n                                <InputNumber\n                                    style={{width: \"100%\"}}\n                                    placeholder=\"eg. 45.23424\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Longitude\">\n                            {getFieldDecorator('lon', {initialValue: currentService.lon})(\n                                <InputNumber\n                                    style={{width: \"100%\"}}\n                                    placeholder=\"eg. -73.34535\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Transit\">\n                            {getFieldDecorator('transit', {initialValue: currentService.transit})(\n                                <Input\n                                    placeholder=\"eg. Yes, near Place des Arts\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Website\">\n                            {getFieldDecorator('website', {initialValue: currentService.website})(\n                                <Input\n                                    placeholder=\"eg. www.example.com\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Phone number\">\n                            {getFieldDecorator('phone_num', {initialValue: currentService.phone_num})(\n                                <Input\n                                    placeholder=\"eg. 514-555-4444\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Emergency Number\">\n                            {getFieldDecorator('emergency_num', {initialValue: currentService.emergency_num})(\n                                <Input\n                                    placeholder=\"eg. 514-555-4444\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Drop In\">\n                            {getFieldDecorator('drop_in', {initialValue: currentService.drop_in})(\n                                <Input\n                                    placeholder=\"eg. Yes\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Services\">\n                            <div>\n                                {tags[\"services\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"services\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"services\"] && (\n                                    <Input\n                                        ref={this.saveInputRefServices}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue[\"services\"]}\n                                        onChange={e => this.handleInputChange(e, \"services\")}\n                                        onBlur={() => this.handleInputConfirm(\"services\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"services\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"services\"] && (\n                                    <Tag onClick={() => this.showInput(\"services\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Service\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Services (FR)\">\n                            <div>\n                                {tags[\"servicesFr\"].map((tag, index) => {\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} onClose={() => this.handleClose(tag, \"servicesFr\")}>\n                                            {tag}\n                                        </Tag>\n                                    );\n                                    return tagElem;\n                                })}\n                                {inputVisible[\"servicesFr\"] && (\n                                    <Input\n                                        ref={this.saveInputRefServicesFr}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 120 }}\n                                        value={inputValue[\"servicesFr\"]}\n                                        onChange={e => this.handleInputChange(e, \"servicesFr\")}\n                                        onBlur={() => this.handleInputConfirm(\"servicesFr\")}\n                                        onPressEnter={() => this.handleInputConfirm(\"servicesFr\")}\n                                    />\n                                    )}\n                                {!inputVisible[\"servicesFr\"] && (\n                                    <Tag onClick={() => this.showInput(\"servicesFr\")} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                                        <Icon type=\"plus\" /> Add Service (FR)\n                                    </Tag>\n                                )}\n                            </div>\n                        </Form.Item>\n                        <Form.Item label=\"Notes\">\n                            {getFieldDecorator('notes', {initialValue: currentService.notes})(\n                                <TextArea\n                                    rows={10}\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Notes (FR)\">\n                            {getFieldDecorator('notes_fr', {initialValue: currentService.notes_fr})(\n                                <TextArea\n                                    rows={10}\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"Verified by\">\n                            {getFieldDecorator('verified_by', {initialValue: currentService.verified_by})(\n                                <Input\n                                    placeholder=\"\"\n                                />,\n                            )}\n                        </Form.Item>\n                        Business Hours:\n                        <InputGroup compact>\n                            <Form.Item>\n                                {getFieldDecorator('hours_sun', {initialValue: currentService.hours[0] == 'NA' ? \"\" : currentService.hours[0]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Sun\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_mon', {initialValue: currentService.hours[1] == 'NA' ? \"\" : currentService.hours[1]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Mon\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_tue', {initialValue: currentService.hours[2] == 'NA' ? \"\" : currentService.hours[2]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Tue\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_wed', {initialValue: currentService.hours[3] == 'NA' ? \"\" : currentService.hours[3]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Wed\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_thu', {initialValue: currentService.hours[4] == 'NA' ? \"\" : currentService.hours[4]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Thu\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_fri', {initialValue: currentService.hours[5] == 'NA' ? \"\" : currentService.hours[5]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Fri\" />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('hours_sat', {initialValue: currentService.hours[6] == 'NA' ? \"\" : currentService.hours[6]})(\n                                    <Input style={{ width: 150 }} placeholder=\"Sat\" />,\n                                )}\n                            </Form.Item>\n                        </InputGroup>\n                        <Form.Item className=\"cancel-button\">\n                            <Button\n                                onClick={()=>window.history.back()}\n                            >\n                                Cancel\n                            </Button>\n                        </Form.Item>\n                        <Form.Item className=\"button\">\n                            <Button\n                                type=\"primary\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div> \n            )\n        }\n        else {\n            return (\n                <div>You are not allowed to access this page</div>\n            );\n        }\n    \n    }\n}\nconst mapStateToProps = ( state ) => {\n    const { listing, primary_category, subcategory, insurance, newEdit, status } = state.serviceReducer;\n    const { loggedInUser } = state.auth\n    return {\n        listing, primary_category, subcategory, insurance, loggedInUser, newEdit, status\n    }\n}\nconst EditServiceForm = Form.create()(EditServiceClass);\nconst EditService = withRouter(connect(mapStateToProps)(EditServiceForm));\nexport default EditService;","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport actionConstants from './redux/actionConstants';\nimport { categoryActions } from './redux/actions/categoryActions';\n\n// Style\nimport './home.css';\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n    constructor(props) {\n      super(props);\n      this.columns = [\n        {\n          title: 'Category ID',\n          dataIndex: 'cat_id',\n          width: '20%',\n          editable: false,\n        },\n        {\n          title: 'Category Name',\n          dataIndex: 'cat_name',\n          editable: true\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          width: '20%',\n          render: (text, record) =>\n            this.state.dataSource.length >= 1 ? (\n              <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.cat_id)}>\n                <a>Delete</a>\n              </Popconfirm>\n            ) : null,\n        },\n      ];\n  \n      this.state = {\n        dataSource: [],\n        count: 0,\n        adding: false\n      };\n\n      this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.CREATE_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.UPDATE_PRIMARY_CATEGORY_SUCCESS || this.props.status === actionConstants.DELETE_PRIMARY_CATEGORY_SUCCESS)) {\n            let dataSource = [];\n            for (let i=0; i<this.props.primary_category.length; i++) {\n                dataSource.push(this.props.primary_category[i]);\n                dataSource[i].key = i;\n            }\n            this.setState({\n                dataSource: dataSource,\n                count: this.props.primary_category.length\n            })\n        }\n    }\n  \n    handleDelete = cat_id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({ dataSource: dataSource.filter(item => item.cat_id !== cat_id) });\n      this.props.dispatch(categoryActions.deletePrimaryCategoryRequest(cat_id))\n    };\n  \n    handleAdd = () => {\n      const { count, dataSource } = this.state;\n      const newData = {\n        key: count,\n        cat_id: \"\",\n        cat_name: \"\"\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1,\n        adding: true\n      });\n    };\n  \n    handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        ...row,\n      });\n\n      if (this.state.adding) {\n        this.props.dispatch(categoryActions.createPrimaryCategoryRequest(row));\n      }\n      else {\n        this.props.dispatch(categoryActions.updatePrimaryCategoryRequest(row));\n      }\n      \n      this.setState({ \n          dataSource: newData,\n          adding: false\n      });\n    };\n  \n    render() {\n      const { dataSource } = this.state;\n      const components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell,\n        },\n      };\n      const columns = this.columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave,\n          }),\n        };\n      });\n      return (\n        <div>\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n            pagination={false}\n          />\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { status, primary_category } = state.categoryReducer\n    return {\n        status, primary_category\n    }\n}\nconst TableComponent = connect(mapStateToProps)(EditableTable);\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            count: 0\n        }\n        \n    }\n\n    render() {\n        return ( \n            <div className=\"home-wrapper\">\n                <TableComponent \n                    dataSource={this.state.dataSource}\n                    count={this.state.count}\n                />\n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter(Category);","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport actionConstants from './redux/actionConstants';\nimport { categoryActions } from './redux/actions/categoryActions';\n\n// Style\nimport './home.css';\nimport { Table, Input, Button, Popconfirm, Form, Select, Divider } from 'antd';\nconst { Option } = Select;\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n    constructor(props) {\n      super(props);\n      this.columns = [\n        {\n          title: 'Category ID',\n          dataIndex: 'subcat_id',\n          width: '20%',\n          editable: false,\n        },\n        {\n          title: 'Category Name',\n          dataIndex: 'subcat_name',\n          editable: true\n        },\n        {\n            title: 'Primary Category',\n            dataIndex: 'pc_id',\n            render: (record) => (\n                <Select defaultValue={record} style={{width: 200}} onChange={this.changePrimaryCategory}>\n                    {this.props.primary_category.map((pc, i) => {\n                        return (\n                            <Option key={i} value={pc.cat_id}>{pc.cat_name}</Option>\n                        );\n                    })}\n                </Select>\n            )\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          width: '20%',\n          render: (text, record) =>\n            this.state.dataSource.length >= 1 ? (\n                <div>   \n                    <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.subcat_id)}>\n                        <a>Delete</a>\n                    </Popconfirm>\n                    <Divider type=\"vertical\"/>\n                    <a onClick={()=>this.handleSubmit(record)}>Save</a>\n                </div>\n              \n            ) : null,\n        },\n      ];\n  \n      this.state = {\n        dataSource: [],\n        count: 0,\n        adding: false,\n        pc_id: 0\n      };\n\n      this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n      this.props.dispatch(categoryActions.getSubcategoryRequest());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.CREATE_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.UPDATE_SUBCATEGORY_SUCCESS || this.props.status === actionConstants.DELETE_SUBCATEGORY_SUCCESS)) {\n            let dataSource = [];\n            for (let i=0; i<this.props.subcategory.length; i++) {\n                dataSource.push(this.props.subcategory[i]);\n                dataSource[i].key = i;\n            }\n            this.setState({\n                dataSource: dataSource,\n                count: this.props.subcategory.length,\n                adding: false\n            })\n        }\n    }\n\n    changePrimaryCategory = (value) => {\n        this.setState({\n            pc_id: value\n        })\n    }\n  \n    handleDelete = subcat_id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({ dataSource: dataSource.filter(item => item.subcat_id !== subcat_id) });\n      this.props.dispatch(categoryActions.deleteSubcategoryRequest(subcat_id))\n    };\n  \n    handleAdd = () => {\n      const { count, dataSource } = this.state;\n      const newData = {\n        key: count,\n        subcat_id: \"\",\n        subcat_name: \"\",\n        pc_id: \"\"\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1,\n        adding: true\n      });\n    };\n  \n    handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        ...row,\n      });\n      \n      this.setState({ \n          dataSource: newData\n      });\n    };\n\n    handleSubmit = row => {\n        row.pc_id = this.state.pc_id;\n\n        if (this.state.adding) {\n            this.props.dispatch(categoryActions.createSubcategoryRequest(row));\n        }\n        else {\n            this.props.dispatch(categoryActions.updateSubcategoryRequest(row));\n        }\n    }\n  \n    render() {\n      const { dataSource } = this.state;\n      const components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell,\n        },\n      };\n      const columns = this.columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave\n          }),\n        };\n      });\n      return (\n        <div>\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n            pagination={false}\n          />\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { status, primary_category, subcategory } = state.categoryReducer\n    return {\n        status, primary_category, subcategory\n    }\n}\nconst TableComponent = connect(mapStateToProps)(EditableTable);\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            count: 0\n        }\n        \n    }\n\n    render() {\n        return ( \n            <div className=\"home-wrapper\">\n                <TableComponent \n                    dataSource={this.state.dataSource}\n                    count={this.state.count}\n                />\n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter(Category);","// React, routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport actionConstants from './redux/actionConstants';\nimport { insuranceActions } from './redux/actions/insuranceActions';\n\n// Style\nimport './home.css';\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n    constructor(props) {\n      super(props);\n      this.columns = [\n        {\n          title: 'Insurance ID',\n          dataIndex: 'insur_id',\n          width: '20%',\n          editable: false,\n        },\n        {\n          title: 'Insurance Name',\n          dataIndex: 'insur_name',\n          editable: true\n        },\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          width: '20%',\n          render: (text, record) =>\n            this.state.dataSource.length >= 1 ? (\n              <Popconfirm title=\"Are you sure you want to delete?\" onConfirm={() => this.handleDelete(record.insur_id)}>\n                <a>Delete</a>\n              </Popconfirm>\n            ) : null,\n        },\n      ];\n  \n      this.state = {\n        dataSource: [],\n        count: 0,\n        adding: false\n      };\n\n      this.props.dispatch(insuranceActions.getInsuranceRequest());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.status !== this.props.status && (this.props.status === actionConstants.GET_INSURANCE_SUCCESS || this.props.status === actionConstants.CREATE_INSURANCE_SUCCESS || this.props.status === actionConstants.UPDATE_INSURANCE_SUCCESS || this.props.status === actionConstants.DELETE_INSURANCE_SUCCESS)) {\n            let dataSource = [];\n            for (let i=0; i<this.props.insurance.length; i++) {\n                dataSource.push(this.props.insurance[i]);\n                dataSource[i].key = i;\n            }\n            this.setState({\n                dataSource: dataSource,\n                count: this.props.insurance.length\n            })\n        }\n    }\n  \n    handleDelete = insur_id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({ dataSource: dataSource.filter(item => item.insur_id !== insur_id) });\n      this.props.dispatch(insuranceActions.deleteInsuranceRequest(insur_id))\n    };\n  \n    handleAdd = () => {\n      const { count, dataSource } = this.state;\n      const newData = {\n        key: count,\n        insur_id: \"\",\n        insur_name: \"\"\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1,\n        adding: true\n      });\n    };\n  \n    handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, {\n        ...item,\n        ...row,\n      });\n\n      if (this.state.adding) {\n        this.props.dispatch(insuranceActions.createInsuranceRequest(row));\n      }\n      else {\n        this.props.dispatch(insuranceActions.updateInsuranceRequest(row));\n      }\n      \n      this.setState({ \n          dataSource: newData,\n          adding: false\n      });\n    };\n  \n    render() {\n      const { dataSource } = this.state;\n      const components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell,\n        },\n      };\n      const columns = this.columns.map(col => {\n        if (!col.editable) {\n          return col;\n        }\n        return {\n          ...col,\n          onCell: record => ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave: this.handleSave,\n          }),\n        };\n      });\n      return (\n        <div>\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n            pagination={false}\n          />\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { status, insurance } = state.insuranceReducer\n    return {\n        status, insurance\n    }\n}\nconst TableComponent = connect(mapStateToProps)(EditableTable);\n\nclass Insurance extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        console.log(\"insurancerander\")\n        return ( \n            <div className=\"home-wrapper\">\n                <TableComponent/>\n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter(Insurance);","// React, Routing\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { serviceActions } from './redux/actions/serviceActions';\nimport { categoryActions } from './redux/actions/categoryActions';\nimport { insuranceActions } from './redux/actions/insuranceActions';\nimport actionConstants from './redux/actionConstants';\nimport CardTemplate from './CardTemplate.jsx';\n//Style\nimport { Input } from 'antd';\nconst { Search } = Input;\nclass ListServiceClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filter: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.props.dispatch(serviceActions.getServiceRequest());\n        this.props.dispatch(categoryActions.getPrimaryCategoryRequest());\n        this.props.dispatch(categoryActions.getSubcategoryRequest());\n        this.props.dispatch(insuranceActions.getInsuranceRequest());\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_FAILURE) {\n            alert(\"ERROR SAVING\");\n        }\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.EDIT_SERVICE_SUCCESS ) {\n            alert(\"Service verifying successfully\");\n        }\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.DELETE_SERVICE_SUCCESS ) {\n            alert(\"Service delelting successfully\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Card_Container\">\n                <Search\n                    placeholder=\"search service\"\n                    onChange={event => {\n                        this.setState({filter: event.target.value})\n                    }}\n                    className=\"search-bar\"\n                />\n                {this.props.listing.length > 0 \n                    ?    \n                        this.props.listing.map((service, i) => {\n                            if (!this.props.listing[i].verified_by && this.props.listing[i].name) {\n                                let lowerCaseFilter = this.state.filter.toLowerCase();\n                                if ((this.props.listing[i].name).toLowerCase().indexOf(lowerCaseFilter)>-1) {\n                                    return(\n                                        <CardTemplate \n                                            pageBelonging={\"listServiceSuggestionPage\"}\n                                            listing={service}\n                                            key={i}\n                                        />\n                                    )\n                                }\n                            }\n                        })\n                    \n                    : <h1>No Suggestion service</h1>\n                }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    const { listing, primary_category, subcategory, insurance, status } = state.serviceReducer;\n    return {\n        listing, primary_category, subcategory, insurance, status\n    }\n}\nconst ListService = connect(mapStateToProps)(ListServiceClass);\nexport default ListService;","// React, Routing\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { feedbackActions } from './redux/actions/feedbackActions';\nimport actionConstants from './redux/actionConstants';\n//Style\nimport { Row, Collapse, Card, Button } from 'antd';\nconst { Panel } = Collapse;\n\nclass ListReportedErrorClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filter: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.props.dispatch(feedbackActions.getReportedErrorRequest());\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status && this.props.status === actionConstants.DELETE_REPORTED_ERROR_SUCCESS ) {\n            alert(\"Item delelting successfully\");\n        }\n    }\n\n    render() {\n        return (\n            <div >\n                {this.props.reported_Error && this.props.reported_Error.map((item, i) => {\n                    if (item.email && item.content) {\n                        return(\n                            <Row  key={i}>\n                                <Card>\n                                    <Collapse\n                                        bordered={false}\n                                    >\n                                        <Panel header={i+1} style={{border:0}}>                         \n                                            <Row>\n                                                <Button \n                                                    onClick = {() => {\n                                                            this.props.dispatch(feedbackActions.deleteReportedErrorRequest({Id: item.id}));\n                                                        }}\n                                                >\n                                                    Delete Reported Error\n                                                </Button>\n                                            </Row>\n\n                                            <table>\n                                                <tbody>\n                                                    <tr className=\"light-row\">\n                                                        <td>Email:</td>\n                                                        <td>{item.email}</td>\n                                                    </tr>\n                                                    <tr className=\"light-row\">\n                                                        <td>Message:</td>\n                                                        <td>{item.content}</td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </Panel>\n                                    </Collapse>\n                                </Card>\n                            </Row>  \n                            )\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    const { reported_Error } = state.feedbackReducer;\n    return {\n        reported_Error\n    }\n}\nconst ListReportedError = connect(mapStateToProps)(ListReportedErrorClass);\nexport default ListReportedError;","// React, Routing\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { searchTermActions } from './redux/actions/searchTermActions';\n\n//Style\nimport { Table, Tag } from 'antd';\n\nconst { Column } = Table;\n\n\nclass ListSearchTermClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formatedSearchTerms : null\n        };\n    }\n\n    componentDidMount() {\n        this.props.dispatch(searchTermActions.getSearchTermRequest());\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.searchTerm && this.props.searchTerm.length !== 0 && this.props.searchTerm !== prevProps.searchTerm) {\n            let formatedSearchTerm = [];\n            const keys = Object.keys(this.props.searchTerm[0]);\n            this.props.searchTerm.forEach(searchTerm => {\n                let searchTermData = { data:[] };\n                searchTermData.frequency = searchTerm[\"frequency\"];\n                keys.forEach ( key => {\n                    if (searchTerm[key] && key !== 'frequency' && key !== 'id' ) {\n                        searchTermData.data.push(`${[key]} : ${searchTerm[key]} `);\n                    }\n                })\n                if (searchTermData.data && searchTermData.data.length !== 0) {\n                    formatedSearchTerm.push(searchTermData);\n                }\n            })\n            this.setState({formatedSearchTerms : formatedSearchTerm});\n        }\n    }\n    render() {\n        return(\n            <div>\n                {this.state.formatedSearchTerms\n                ? (\n                    <Table dataSource={this.state.formatedSearchTerms}>\n                            <Column\n                                title=\"Term\"\n                                dataIndex=\"data\"\n                                key=\"term\"\n                                render={(data) => (\n                                        <span>\n                                            {data.map(tag => ( \n                                                <Tag color=\"blue\">\n                                                    {tag}\n                                                </Tag>\n                                            ))}\n                                        </span>\n                                )}\n                            />\n                            <Column title=\"Frequency\" dataIndex=\"frequency\" key=\"frequency\" />\n                    </Table>\n                    ) \n                :(\n                    <div>No Searching Term History</div>\n                )\n                }      \n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    const searchTerm = state.searchTermReducers.Search_Term;\n    return {searchTerm};\n}\nconst ListSearchTerm = connect(mapStateToProps)(ListSearchTermClass);\nexport default ListSearchTerm;","// React, routing\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, HashRouter} from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { withRouter, Router } from 'react-router';\n\n// Redux\nimport { createStore, applyMiddleware } from 'redux';\nimport {Provider, connect } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './redux/sagas/rootSaga.js';\nimport rootReducer from './redux/reducers/rootReducer.js';\nimport { authActions } from './redux/actions/authActions';\nimport { searchTermActions } from './redux/actions/searchTermActions';\nimport  actionConstants from './redux/actionConstants';\n\n// Style\nimport { Layout, ConfigProvider, Row, Col, Button, Badge } from 'antd';\nimport en_US from 'antd/lib/locale-provider/en_US';\n\n// Components\nimport Home from \"./home.jsx\";\nimport NewService from \"./newService.jsx\";\nimport Login from \"./login.jsx\";\nimport EditService from \"./editService.jsx\";\nimport Category from \"./category.jsx\";\nimport Subcategory from \"./subcategory.jsx\";\nimport Insurance from \"./insurance.jsx\";\nimport ListServiceSuggestion from './listServiceSuggestion';\nimport ListReportedError from './listReportedError';\nimport ListSearchTerm from './listSearchTerm';\nimport { stat } from 'fs';\n\nconst { Header, Content, Sider } = Layout;\nconst history = createBrowserHistory({basename: process.env.REACT_APP_BASE_NAME || \"\"});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    rootReducer(history),\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\n// (na) console log the state\nconst unsubscribe = store.subscribe(()=>console.log(store.getState()));\n\nclass IndexClass extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    signOut = () => {\n        const { dispatch } = this.props;\n        dispatch(authActions.signOutRequest());\n    }\n\n    backHome = () => {\n         window.location.href= (process.env.REACT_APP_BASE_NAME || \"\") + \"/#/home\";\n    }\n\n    getCookie() {\n        var nameEQ = \"token\" + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i=0;i < ca.length;i++) {\n            var c = ca[i];\n            while (c.charAt(0)==' ') c = c.substring(1,c.length);\n            if (c.indexOf(nameEQ) == 0){\n                return c.substring(nameEQ.length,c.length);\n            } \n        }\n        return null;\n    }\n    \n    countSearchTerm = (listing) =>{\n        let suggestionServiceNumber = 0;\n        if (listing){\n            suggestionServiceNumber = listing.length;\n        }\n        return suggestionServiceNumber;\n    }\n\n    showButton(){\n        if (this.props.loggedin){\n            return ( \n                <div style={{ display: \"inline-block\", float:\"right\"}}>\n                    <Button\n                        style={{ marginRight:\"20px\"}}\n                        className=\"menu-option\"\n                        onClick={this.backHome}\n                    >\n                        Home\n                    </Button>\n                    <Badge count={this.countSearchTerm(this.props.searchTerm)}>\n                        <a href=\"/#/ListSearchTerm\"> <Button >Review Search Term</Button> </a>\n                    </Badge>\n                    <Button\n                        style={{ marginLeft:\"20px\"}}\n                        className=\"menu-option\"\n                        onClick={this.signOut}\n                    >\n                        Logout\n                    </Button>\n                </div>\n            )  \n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(authActions.getAuthRequest()); \n        this.props.dispatch(searchTermActions.getSearchTermRequest());\n    }\n\n    render() {\n        \n        return(\n            <Layout style={{minHeight: \"100vh\"}}>\n                <Header\n                align=\"middle\"\n                >\n                    <div style={{color:\"white\"}}>\n                    <span  style={{float:\"left\", fontSize:\"25px\"}}>Health & Wellness Map Admin</span>\n                    {this.showButton()}\n                    </div>\n                \n                </Header>\n                <Content>\n                    <HashRouter>\n                        <Switch>\n                            <Route exact path=\"/\" component={Login} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/home\" component={Home} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/newService\" component={NewService} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/ListServiceSuggestion\" component={ListServiceSuggestion} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/ListReportedError\" component={ListReportedError} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/ListSearchTerm\" component={ListSearchTerm} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/category\" component={Category} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/subcategory\" component={Subcategory} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/insurance\" component={Insurance} />\n                        </Switch>\n                        <Switch>\n                            <Route exact path=\"/editService/:service_id\" component={EditService} />\n                        </Switch>\n                    </HashRouter>\n                </Content>\n            </Layout>\n                        \n        )\n        \n    }\n}\nconst mapStateToProps = (state) => {\n    const loggedin = state.auth.loggedin;\n    const searchTerm = state.searchTermReducers.Search_Term;\n    return {loggedin, searchTerm};\n}\nconst Index = connect(mapStateToProps)(IndexClass);\nexport default Index;\n","// React, routing\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch} from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { withRouter, Router } from 'react-router';\n\n// Redux\nimport { createStore, applyMiddleware } from 'redux';\nimport {Provider, connect } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './redux/sagas/rootSaga.js';\nimport rootReducer from './redux/reducers/rootReducer.js';\nimport { authActions } from './redux/actions/authActions';\nimport  actionConstants from './redux/actionConstants';\n\n// Style\nimport en_US from 'antd/lib/locale-provider/en_US';\nimport { Layout, ConfigProvider, Row, Col, Button } from 'antd';\nimport Index from './index.jsx';\nimport './App.css';\n\nconst history = createBrowserHistory({basename: process.env.REACT_APP_BASE_NAME || \"\"});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    rootReducer(history),\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\n// (na) console log the state\n// const unsubscribe = store.subscribe(()=>console.log(store.getState()));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ConfigProvider locale={en_US}>\n          <Provider store={store}>\n              <ConnectedRouter history={history}> \n                <Index />\n              </ConnectedRouter>\n          </Provider>\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}